{"ast":null,"code":"\"use strict\";//A JSON object. Can be read from an external .json file\nvar obj=require('./questions.json');//only works on server-end eg Node.js\nfunction eligibleQues(letter){//filter questions with at least 1+ answer starting with letter\nvar validQues=obj.questions.filter(function(que){return que.answers.some(function(ans){return ans[0]===letter;});});return validQues;//array of questions containing at least 1 ans that starts with letter (could be empty)\n}//let eligibleList= eligibleQues('h') //given a letter => a list of que objects\n// console.log(eligibleList[0])\nfunction shuffleArray(array){var curId=array.length;// There remain elements to shuffle\nwhile(0!==curId){// Pick a remaining element\nvar randId=Math.floor(Math.random()*curId);curId-=1;// Swap it with the current element.\nvar tmp=array[curId];array[curId]=array[randId];array[randId]=tmp;}return array;}export function randomChoice(items){var choice=items[items.length*Math.random()|0];return choice;}//Instancicates an object with .letter (a random letter) & .ques (array of 5+ questions objects); \n//each question object has .category & .answers (array of things in that category and begins with the letter)\nexport function makeNewQuestions(){var alphabet='abcdefghijklmnopqrstvvwxyz';var letter;var candidates;var done=false;while(done===false){letter=randomChoice(alphabet);candidates=eligibleQues(letter);//Need at least 5 ques\nif(candidates.length>=5){done=true;}}candidates.forEach(function(candidate){//Filter answer/answers that start with letter\ncandidate.answers=candidate.answers.filter(function(ans){return ans[0]===letter;});});var ques=shuffleArray(candidates);//shuffle the order\nreturn{letter:letter,ques:ques};//returns an object with 2 properties\n}// let q = makeNewQuestions(); //q has two properties: .letter and .ques= five or more categories+answers\n// console.log(q.letter);\n// console.log(q.ques);\n//>>>Below is for testing in the browser (play with text-only)<<<\n// function game() {\n//     let playing = true;\n//     while (playing === true) {\n//         let quesObj = makeNewQuestions();\n//         let letter = quesObj.letter; //A random letter\n//         let ques = quesObj.ques; //5 more more question-sets (categories+answers)\n//         let tally = 0; // If incorporating with xstate, use this as context.tally...?\n//         if (tally === 0) {\n//             alert(`Your letter is ${letter.toUpperCase()}...`);\n//         }\n//         while (tally < 5) {\n//             let que = ques[ques.length - 1]; //start from the last \n//             let cat = que.category;\n//             let answers = que.answers;\n//             let userInput = prompt(`Name ${cat}...`);\n//             let reply = userInput.toLowerCase();\n//             if (answers.includes(reply)) {\n//                 alert(\"Correct!\");\n//                 tally += 1;\n//                 ques.pop(); //remove the last\n//             }\n//             else if (reply === 'hint') {\n//                 let anAns = randomChoice(answers);\n//                 //hint 3 letters\n//                 if (anAns.length >= 3) {\n//                     let hint = anAns.slice(0, 3); //first 3 letters\n//                     let rest = '-'.repeat(anAns.slice(3).length);\n//                     alert(hint + rest);\n//                 }\n//                 //in case word is too short>>hint only 1 letter\n//                 else {\n//                     let hint = anAns.slice(0); //first letter\n//                     let rest = '-'.repeat(anAns.slice(1).length);\n//                     alert(hint + rest);\n//                 }\n//             }\n//             else {\n//                 alert('Try again!');\n//             }\n//         }\n//         if (tally >= 5) {\n//             let reply = prompt('Well done! Play again?');\n//             let yesReplies = ['yes', 'okay', 'sure', 'ok'];\n//             if (yesReplies.includes(reply.toLowerCase())) {\n//                 tally = 0;\n//             }\n//             else {\n//                 alert('Ok bye!');\n//                 playing = false;\n//             }\n//         }\n//     }\n// }\n// game()\n// console.log(eligibleQues('z').length)","map":{"version":3,"sources":["C:/CodingProjects/ABCgame/src/game_codes/game.js"],"names":["obj","require","eligibleQues","letter","validQues","questions","filter","que","answers","some","ans","shuffleArray","array","curId","length","randId","Math","floor","random","tmp","randomChoice","items","choice","makeNewQuestions","alphabet","candidates","done","forEach","candidate","ques"],"mappings":"AAAA,aAEA;AACA,GAAMA,CAAAA,GAAG,CAAGC,OAAO,CAAC,kBAAD,CAAnB,CAAwC;AAIxC,QAASC,CAAAA,YAAT,CAAsBC,MAAtB,CAA8B,CAC1B;AACA,GAAIC,CAAAA,SAAS,CAAGJ,GAAG,CAACK,SAAJ,CAAcC,MAAd,CAAsB,SAAAC,GAAG,QACrCA,CAAAA,GAAG,CAACC,OAAJ,CAAYC,IAAZ,CACI,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAAC,CAAD,CAAH,GAASP,MAAb,EADP,CADqC,EAAzB,CAAhB,CAGA,MAAOC,CAAAA,SAAP,CAAkB;AACrB,CAED;AACA;AAEA,QAASO,CAAAA,YAAT,CAAsBC,KAAtB,CAA6B,CACzB,GAAIC,CAAAA,KAAK,CAAGD,KAAK,CAACE,MAAlB,CACA;AACA,MAAO,IAAMD,KAAb,CAAoB,CAChB;AACA,GAAIE,CAAAA,MAAM,CAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAgBL,KAA3B,CAAb,CACAA,KAAK,EAAI,CAAT,CACA;AACA,GAAIM,CAAAA,GAAG,CAAGP,KAAK,CAACC,KAAD,CAAf,CACAD,KAAK,CAACC,KAAD,CAAL,CAAeD,KAAK,CAACG,MAAD,CAApB,CACAH,KAAK,CAACG,MAAD,CAAL,CAAgBI,GAAhB,CACH,CACD,MAAOP,CAAAA,KAAP,CACH,CACD,MAAO,SAASQ,CAAAA,YAAT,CAAsBC,KAAtB,CAA6B,CAChC,GAAIC,CAAAA,MAAM,CAAGD,KAAK,CAACA,KAAK,CAACP,MAAN,CAAeE,IAAI,CAACE,MAAL,EAAf,CAA+B,CAAhC,CAAlB,CACA,MAAOI,CAAAA,MAAP,CACH,CAED;AACA;AACA,MAAO,SAASC,CAAAA,gBAAT,EAA4B,CAC/B,GAAIC,CAAAA,QAAQ,CAAG,4BAAf,CACA,GAAIrB,CAAAA,MAAJ,CACA,GAAIsB,CAAAA,UAAJ,CACA,GAAIC,CAAAA,IAAI,CAAG,KAAX,CACA,MAAOA,IAAI,GAAK,KAAhB,CAAuB,CACnBvB,MAAM,CAAGiB,YAAY,CAACI,QAAD,CAArB,CACAC,UAAU,CAAGvB,YAAY,CAACC,MAAD,CAAzB,CACA;AACA,GAAIsB,UAAU,CAACX,MAAX,EAAqB,CAAzB,CAA4B,CACxBY,IAAI,CAAG,IAAP,CACH,CACJ,CACDD,UAAU,CAACE,OAAX,CAAmB,SAAAC,SAAS,CAAI,CAC5B;AACAA,SAAS,CAACpB,OAAV,CAAoBoB,SAAS,CAACpB,OAAV,CAAkBF,MAAlB,CAA0B,SAAAI,GAAG,QAAIA,CAAAA,GAAG,CAAC,CAAD,CAAH,GAASP,MAAb,EAA7B,CAApB,CACH,CAHD,EAIA,GAAI0B,CAAAA,IAAI,CAAGlB,YAAY,CAACc,UAAD,CAAvB,CAAqC;AACrC,MAAO,CAACtB,MAAM,CAANA,MAAD,CAAS0B,IAAI,CAAJA,IAAT,CAAP,CAAuB;AAC1B,CAKD;AACA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA","sourcesContent":["\"use strict\";\r\n\r\n//A JSON object. Can be read from an external .json file\r\nconst obj = require('./questions.json') //only works on server-end eg Node.js\r\n\r\n\r\n\r\nfunction eligibleQues(letter) {\r\n    //filter questions with at least 1+ answer starting with letter\r\n    let validQues = obj.questions.filter( que => \r\n        que.answers.some(\r\n            ans => ans[0]===letter ) )\r\n    return validQues; //array of questions containing at least 1 ans that starts with letter (could be empty)\r\n}\r\n\r\n//let eligibleList= eligibleQues('h') //given a letter => a list of que objects\r\n// console.log(eligibleList[0])\r\n\r\nfunction shuffleArray(array) {\r\n    let curId = array.length;\r\n    // There remain elements to shuffle\r\n    while (0 !== curId) {\r\n        // Pick a remaining element\r\n        let randId = Math.floor(Math.random() * curId);\r\n        curId -= 1;\r\n        // Swap it with the current element.\r\n        let tmp = array[curId];\r\n        array[curId] = array[randId];\r\n        array[randId] = tmp;\r\n    }\r\n    return array;\r\n}\r\nexport function randomChoice(items) {\r\n    let choice = items[items.length * Math.random() | 0];\r\n    return choice;\r\n}\r\n\r\n//Instancicates an object with .letter (a random letter) & .ques (array of 5+ questions objects); \r\n//each question object has .category & .answers (array of things in that category and begins with the letter)\r\nexport function makeNewQuestions() {\r\n    let alphabet = 'abcdefghijklmnopqrstvvwxyz';\r\n    let letter;\r\n    let candidates;\r\n    let done = false;\r\n    while (done === false) {\r\n        letter = randomChoice(alphabet);\r\n        candidates = eligibleQues(letter);\r\n        //Need at least 5 ques\r\n        if (candidates.length >= 5) {\r\n            done = true;\r\n        }\r\n    }\r\n    candidates.forEach(candidate => {\r\n        //Filter answer/answers that start with letter\r\n        candidate.answers = candidate.answers.filter( ans => ans[0]===letter); \r\n    });\r\n    let ques = shuffleArray(candidates); //shuffle the order\r\n    return {letter, ques}; //returns an object with 2 properties\r\n}\r\n\r\n\r\n\r\n\r\n// let q = makeNewQuestions(); //q has two properties: .letter and .ques= five or more categories+answers\r\n// console.log(q.letter);\r\n// console.log(q.ques);\r\n\r\n\r\n\r\n//>>>Below is for testing in the browser (play with text-only)<<<\r\n\r\n// function game() {\r\n//     let playing = true;\r\n//     while (playing === true) {\r\n//         let quesObj = makeNewQuestions();\r\n//         let letter = quesObj.letter; //A random letter\r\n//         let ques = quesObj.ques; //5 more more question-sets (categories+answers)\r\n//         let tally = 0; // If incorporating with xstate, use this as context.tally...?\r\n//         if (tally === 0) {\r\n//             alert(`Your letter is ${letter.toUpperCase()}...`);\r\n//         }\r\n//         while (tally < 5) {\r\n//             let que = ques[ques.length - 1]; //start from the last \r\n//             let cat = que.category;\r\n//             let answers = que.answers;\r\n//             let userInput = prompt(`Name ${cat}...`);\r\n//             let reply = userInput.toLowerCase();\r\n//             if (answers.includes(reply)) {\r\n//                 alert(\"Correct!\");\r\n//                 tally += 1;\r\n//                 ques.pop(); //remove the last\r\n//             }\r\n//             else if (reply === 'hint') {\r\n//                 let anAns = randomChoice(answers);\r\n//                 //hint 3 letters\r\n//                 if (anAns.length >= 3) {\r\n//                     let hint = anAns.slice(0, 3); //first 3 letters\r\n//                     let rest = '-'.repeat(anAns.slice(3).length);\r\n//                     alert(hint + rest);\r\n//                 }\r\n//                 //in case word is too short>>hint only 1 letter\r\n//                 else {\r\n//                     let hint = anAns.slice(0); //first letter\r\n//                     let rest = '-'.repeat(anAns.slice(1).length);\r\n//                     alert(hint + rest);\r\n//                 }\r\n//             }\r\n//             else {\r\n//                 alert('Try again!');\r\n//             }\r\n//         }\r\n//         if (tally >= 5) {\r\n//             let reply = prompt('Well done! Play again?');\r\n//             let yesReplies = ['yes', 'okay', 'sure', 'ok'];\r\n//             if (yesReplies.includes(reply.toLowerCase())) {\r\n//                 tally = 0;\r\n//             }\r\n//             else {\r\n//                 alert('Ok bye!');\r\n//                 playing = false;\r\n//             }\r\n//         }\r\n//     }\r\n// }\r\n\r\n// game()\r\n\r\n// console.log(eligibleQues('z').length)"]},"metadata":{},"sourceType":"module"}