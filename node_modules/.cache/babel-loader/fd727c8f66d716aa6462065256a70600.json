{"ast":null,"code":"import _slicedToArray from \"/Users/irene/Desktop/ABCgame/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"/Users/irene/Desktop/ABCgame/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"/Users/irene/Desktop/ABCgame/src/App.tsx\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nimport * as React from \"react\"; //XState library & Game DM-machine\n\nimport { Machine, assign, send } from \"xstate\";\nimport { useMachine, asEffect } from \"@xstate/react\";\nimport { dmMachine } from './dmGame'; //Animation effects\n\nimport Confetti from 'react-dom-confetti';\nimport TextLoop from \"react-text-loop\";\nimport { useWindupString } from \"windups\"; // import HeadShake from 'react-reveal/HeadShake';\n\nvar HeadShake = require('react-reveal/HeadShake'); //?import shows error in TS, so use require() here instead\n\n\nvar RubberBand = require('react-reveal/RubberBand');\n\nimport Tippy from '@tippyjs/react'; // import 'tippy.js/dist/tippy.css'; \n//Browser detection \n\nimport { isChrome, isEdge } from \"react-device-detect\"; // import { inspect } from \"@xstate/inspect\";\n// inspect({ url:\"https://statecharts.io/inspect\", iframe: false });\n// State machines: ASR-TTS (voice interface) & dmGame\n\nimport { useSpeechSynthesis, useSpeechRecognition } from 'react-speech-kit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar machine = Machine({\n  id: 'root',\n  type: 'parallel',\n  states: {\n    dm: _objectSpread({}, dmMachine),\n    asrtts: {\n      initial: 'idle',\n      states: {\n        idle: {\n          on: {\n            LISTEN: 'recognising',\n            SPEAK: {\n              target: 'speaking',\n              actions: assign(function (_context, event) {\n                return {\n                  ttsAgenda: event.value\n                };\n              })\n            }\n          }\n        },\n        recognising: {\n          initial: 'progress',\n          entry: 'recStart',\n          exit: 'recStop',\n          on: {\n            ASRRESULT: {\n              actions: ['recLogResult', assign(function (_context, event) {\n                return {\n                  recResult: event.value\n                };\n              })],\n              target: '.match'\n            },\n            RECOGNISED: 'idle'\n          },\n          states: {\n            progress: {},\n            match: {\n              entry: send('RECOGNISED')\n            }\n          }\n        },\n        speaking: {\n          entry: 'ttsStart',\n          on: {\n            ENDSPEECH: 'idle'\n          }\n        }\n      }\n    }\n  }\n}, {\n  actions: {\n    recLogResult: function recLogResult(context) {\n      /* context.recResult = event.recResult; */\n      console.log('<< ASR: ' + context.recResult);\n    },\n    test: function test() {\n      console.log('test');\n    },\n    logIntent: function logIntent(context) {\n      /* context.nluData = event.data */\n      console.log('<< NLU intent: ' + context.nluData.intent.name);\n    }\n  }\n});\n\n//COMPONENT: Big button in the middle, with changing texts\nvar ReactiveButton = function ReactiveButton(props) {\n  _s();\n\n  var playingNow = props.state.context.playingNow;\n  var ttsAgenda = props.state.context.ttsAgenda;\n  var maxHinted = props.state.context.hinted >= 5;\n  var maxSkipped = props.state.context.skipped >= 5;\n  var promptInGame;\n\n  if (maxSkipped && maxHinted) {\n    promptInGame = '...or say Restart, Stop';\n  } else if (maxSkipped && !maxHinted) {\n    promptInGame = '...or say Clue, Restart, Stop';\n  } else if (!maxSkipped && maxHinted) {\n    promptInGame = '...or say Skip, Restart, Stop';\n  } else {\n    promptInGame = '...or say Clue, Skip, Restart, Stop';\n  } //default\n\n\n  var speakingText = playingNow ? '😼 ' + ttsAgenda : '😻 ' + ttsAgenda;\n  var promptMsg = playingNow ? promptInGame : \"...say Yes or No\";\n\n  switch (true) {\n    case props.state.matches({\n      asrtts: 'recognising'\n    }):\n      return /*#__PURE__*/_jsxDEV(\"button\", _objectSpread(_objectSpread({\n        type: \"button\",\n        className: \"glow-on-hover\",\n        style: {\n          animation: \"glowing 20s linear\"\n        }\n      }, props), {}, {\n        children: /*#__PURE__*/_jsxDEV(TextLoop, {\n          mask: true,\n          interval: 5000,\n          springConfig: {\n            stiffness: 170,\n            damping: 8\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"code\", {\n              children: [\" \", speakingText, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 30\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"code\", {\n              children: [\" \", promptMsg, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 30\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, _this)\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, _this);\n\n    case props.state.matches({\n      asrtts: 'speaking'\n    }):\n      var _useWindupString = useWindupString(speakingText),\n          _useWindupString2 = _slicedToArray(_useWindupString, 1),\n          spokentext = _useWindupString2[0]; // adds char-by-char animation\n\n\n      return /*#__PURE__*/_jsxDEV(\"button\", _objectSpread(_objectSpread({\n        type: \"button\",\n        className: \"glow-on-hover\",\n        style: {\n          animation: \"bordering 1s infinite\"\n        }\n      }, props), {}, {\n        children: /*#__PURE__*/_jsxDEV(\"code\", {\n          children: spokentext\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, _this)\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, _this);\n\n    default:\n      return /*#__PURE__*/_jsxDEV(\"button\", _objectSpread(_objectSpread({\n        type: \"button\",\n        className: \"glow-on-hover\"\n      }, props), {}, {\n        children: /*#__PURE__*/_jsxDEV(HeadShake, {\n          children: \"Play game!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, _this)\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, _this);\n  }\n}; // //MAIN CONTAINER: React webpage elements & VOI\n\n\n_s(ReactiveButton, \"S+bNtRj7NBvxoKWW+IAkMKMprO8=\", false, function () {\n  return [useWindupString];\n});\n\n_c = ReactiveButton;\nexport default function App() {\n  _s2();\n\n  //Voice interface events (& console logs)\n  //Text to speech:\n  var _useSpeechSynthesis = useSpeechSynthesis({\n    onEnd: function onEnd() {\n      send('ENDSPEECH');\n    }\n  }),\n      speak = _useSpeechSynthesis.speak,\n      cancel = _useSpeechSynthesis.cancel,\n      speaking = _useSpeechSynthesis.speaking,\n      voices = _useSpeechSynthesis.voices; //Speech to text\n\n\n  var _useSpeechRecognition = useSpeechRecognition({\n    onResult: function onResult(result) {\n      send({\n        type: \"ASRRESULT\",\n        value: result\n      });\n    }\n  }),\n      listen = _useSpeechRecognition.listen,\n      listening = _useSpeechRecognition.listening,\n      stop = _useSpeechRecognition.stop; //List the supported synthesis-voices on the browswer:\n\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      voiceIndex = _React$useState2[0],\n      setVoiceIndex = _React$useState2[1]; // console.log(voices) //An array of available voices/languages ... varies depending on the computer/browser\n  // const voice =  voices[5] || null; // voices[idx]? voices[idx] : null *(browser default voice)\n\n\n  var _useMachine = useMachine(machine, {\n    devTools: true,\n    actions: {\n      recStart: asEffect(function () {\n        console.log('Ready to receive a voice input.');\n        listen({\n          interimResults: false,\n          continuous: true,\n          lang: 'en-SG' //Config recognition language here. //list of langs https://cloud.google.com/speech-to-text/docs/languages\n\n        });\n      }),\n      recStop: asEffect(function () {\n        console.log('Recognition stopped.');\n        stop();\n      }),\n      ttsStart: asEffect(function (context, effect) {\n        console.log('Speaking...');\n        speak({\n          text: context.ttsAgenda\n          /*, voice*/\n          //Config which language/voice to speak in\n\n        });\n      }),\n      ttsCancel: asEffect(function (context, effect) {\n        console.log('TTS STOP...');\n        cancel();\n      }),\n      speak: asEffect(function (context) {\n        console.log('Speaking...');\n        speak({\n          text: context.ttsAgenda\n        });\n      })\n    }\n  }),\n      _useMachine2 = _slicedToArray(_useMachine, 3),\n      current = _useMachine2[0],\n      send = _useMachine2[1],\n      service = _useMachine2[2]; // dmMachine-context / React-states, to display on webpage or turn components on/off\n\n\n  var confettiSwitch = current.context.confettiSwitch; //triggers confetti when true\n\n  var playingNow = current.context.playingNow;\n  var tally = current.context.tally;\n  var letter = current.context.letter; // Config for confetti \n\n  var confettiConfig = {\n    angle: 90,\n    spread: 360,\n    startVelocity: 80,\n    elementCount: 400,\n    dragFriction: 0.12,\n    duration: 10000,\n    stagger: 1,\n    width: \"7px\",\n    height: \"7px\",\n    perspective: \"210px\",\n    colors: [\"#a864fd\", \"#29cdff\", \"#78ff44\", \"#ff718d\", \"#fdff6a\", \"pink\", \"orange\"]\n  };\n  var clicked = 0;\n\n  var handleClick = function handleClick() {\n    if (clicked === 0) {\n      console.log(\"clicked\");\n      send('CLICK');\n      clicked = 1;\n    } else {\n      console.log(\"unclicked\");\n      send('UNCLICK');\n      clicked = 0;\n    }\n  }; //>>>JSX codes & various components\n  // Alt page: Show if not using Chrome or Edge\n\n\n  if (!isChrome && !isEdge) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"OtherBrowsers\",\n    children: /*#__PURE__*/_jsxDEV(HeadShake, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Speech Recognition Not Supported :( \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"I won't be able to hear you on this browser.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please try Chrome or Edge. :-)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 238,\n    columnNumber: 9\n  }, this); //Show if using Chrome or Edge\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"PopoverButtons\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(PopoverButtons, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 46\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"LetterAndHeart\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"GlowLetter\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(YourLetter, {\n            letter: letter\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 50\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Heart\",\n          children: playingNow && /*#__PURE__*/_jsxDEV(HeartBar, {\n            currentScore: tally,\n            maxScore: 5,\n            size: 50\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 40\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Confetti, {\n        active: confettiSwitch,\n        config: confettiConfig\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(RubberBand, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Button\",\n          children: /*#__PURE__*/_jsxDEV(ReactiveButton, {\n            state: current,\n            onClick: function onClick() {\n              handleClick();\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Subtitles\",\n        children: [/*#__PURE__*/_jsxDEV(YourSubtitles, {\n          state: current\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(UserSubtitles, {\n          state: current\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 251,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(App, \"VKvxuIZMtQTlSiJjT3LD5pxMEUE=\", false, function () {\n  return [useSpeechSynthesis, useSpeechRecognition, useMachine];\n});\n\n_c2 = App;\n; //COMPONENT: Displaying input of voice interface (ie, recResult)\n\nvar YourSubtitles = function YourSubtitles(props) {\n  _s3();\n\n  // Player's speech-- only displays when recResult!=undefined \n  var tally = props.state.context.tally;\n  var recResult = props.state.context.recResult; //Prefix face changes based on score of the game\n\n  var emojis = ['😗', '🙂', '😀', '😄', '😁', '🥳'];\n  var emoji = tally ? emojis[tally] : '🙃';\n  var subtitlesText;\n\n  if (props.state.matches({\n    asrtts: 'recognising'\n  })) {\n    subtitlesText = emoji + ' Listening...';\n  } else if (recResult && recResult != '') {\n    subtitlesText = emoji + ' ' + recResult;\n  } else {\n    subtitlesText = '';\n  }\n\n  var _useWindupString3 = useWindupString(subtitlesText),\n      _useWindupString4 = _slicedToArray(_useWindupString3, 1),\n      textAnimated = _useWindupString4[0];\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\" \", textAnimated, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 305,\n    columnNumber: 9\n  }, _this);\n}; //This one doesn't show on Github pages...? but can run locally and use for presentation demo\n\n\n_s3(YourSubtitles, \"T1TGb1P+O1NhR2xfEfH+NroZm/E=\", false, function () {\n  return [useWindupString];\n});\n\n_c3 = YourSubtitles;\n\nvar UserSubtitles = function UserSubtitles(props) {\n  _s4();\n\n  var tally = props.state.context.tally;\n  var recResult = props.state.context.recResult; // const recResult='testing text'\n\n  var emojis = ['😗', '🙂', '😀', '😄', '😁', '🥳'];\n  var emoji = tally ? emojis[tally] : '🙃'; // const defaultText = props.state.matches({ asrtts: 'recognising' })? 'Listening...' : ''\n  // const subtitlesText = recResult? recResult : defaultText\n\n  var subtitlesText;\n\n  if (props.state.matches({\n    asrtts: 'recognising'\n  })) {\n    subtitlesText = 'Listening...';\n  } else if (recResult && recResult != '') {\n    subtitlesText = recResult;\n  } else {\n    subtitlesText = '';\n  }\n\n  var _useWindupString5 = useWindupString(subtitlesText),\n      _useWindupString6 = _slicedToArray(_useWindupString5, 1),\n      textAnimated = _useWindupString6[0];\n\n  var showing = subtitlesText != '';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"emoji-and-bubble\",\n    children: [showing && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"speech-bubble\",\n      children: [\" \", textAnimated, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 26\n    }, _this), showing && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"emoji\",\n      children: [\" \", emoji, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 25\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 336,\n    columnNumber: 9\n  }, _this);\n}; //COMPONENT: Capital letter of the game\n\n\n_s4(UserSubtitles, \"T1TGb1P+O1NhR2xfEfH+NroZm/E=\", false, function () {\n  return [useWindupString];\n});\n\n_c4 = UserSubtitles;\n\nvar YourLetter = function YourLetter(props) {\n  // Shows the letter of the current game round \n  var letter = props.letter;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: letter ? letter.toUpperCase() : ''\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 348,\n    columnNumber: 9\n  }, _this);\n}; //COMPONENT: Grey heart to be filled with pink, based on percentage\n\n\n_c5 = YourLetter;\n\nvar HeartBar = function HeartBar(props) {\n  var maxScore = props.maxScore;\n  var currentScore = props.currentScore > 0 ? props.currentScore : '';\n  var size = props.size;\n  var percentage = currentScore ? 100 * currentScore / maxScore : 0; //add other props? eg, showScore={true/false}; showPercentage={true/false}\n\n  var y = 24 - 24 * percentage / 100; //Height of the pink filling shape\n  //Below: Heart-shaped vector graphs & text inside\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ProgressBarH\",\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      width: size,\n      height: size,\n      viewBox: \"0 0 24 24\",\n      children: [/*#__PURE__*/_jsxDEV(\"defs\", {\n        children: [/*#__PURE__*/_jsxDEV(\"clipPath\", {\n          id: \"cut-off-bottom\",\n          children: /*#__PURE__*/_jsxDEV(\"rect\", {\n            x: \"0\",\n            y: y,\n            width: \"24\",\n            height: \"24\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"linearGradient\", {\n          id: \"grey-grad\",\n          x1: \"0%\",\n          y1: \"0%\",\n          x2: \"0%\",\n          y2: \"100%\",\n          children: [/*#__PURE__*/_jsxDEV(\"stop\", {\n            offset: \"0%\",\n            stopColor: \"#cfccce\",\n            stopOpacity: \"0.75\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(\"stop\", {\n            offset: \"60%\",\n            stopColor: \"#bab8ba\",\n            stopOpacity: \"0.85\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(\"stop\", {\n            offset: \"100%\",\n            stopColor: \"#949293\",\n            stopOpacity: \"0.9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 17\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"linearGradient\", {\n          id: \"pink-grad\",\n          x1: \"0%\",\n          y1: \"0%\",\n          x2: \"0%\",\n          y2: \"100%\",\n          children: [/*#__PURE__*/_jsxDEV(\"stop\", {\n            offset: \"0%\",\n            stopColor: \"#ff33a7\",\n            stopOpacity: \"0.95\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(\"stop\", {\n            offset: \"60%\",\n            stopColor: \"#ff2667\",\n            stopOpacity: \"0.95\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(\"stop\", {\n            offset: \"100%\",\n            stopColor: \"rgb(255,0,0)\",\n            stopOpacity: \"0.95\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 17\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(\"path\", {\n        style: {\n          fill: \"url(#grey-grad)\"\n        },\n        d: \"M12 4.248c-3.148-5.402-12-3.825-12 2.944 0 4.661 5.571 9.427 12 15.808 6.43-6.381 12-11.147 12-15.808 0-6.792-8.875-8.306-12-2.944z\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(\"path\", {\n        style: {\n          fill: \"url(#pink-grad)\"\n        },\n        d: \"M12 4.248c-3.148-5.402-12-3.825-12 2.944 0 4.661 5.571 9.427 12 15.808 6.43-6.381 12-11.147 12-15.808 0-6.792-8.875-8.306-12-2.944z\",\n        clipPath: \"url(#cut-off-bottom)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(\"text\", {\n        textAnchor: \"middle\",\n        x: \"12\",\n        y: \"15\",\n        color: \"white\",\n        fontSize: \"11\",\n        fill: \"white\",\n        opacity: \"0.45\",\n        style: {\n          animation: \"wiggle 2.5s ease-out infinite\",\n          animationDelay: '0.9s'\n        },\n        children: currentScore\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 9\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 368,\n    columnNumber: 7\n  }, _this);\n};\n\n_c6 = HeartBar;\n\nvar PopoverButtons = function PopoverButtons() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Tippy, {\n      content: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Having troubles playing? :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 17\n        }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Due to limitations of the voice recogniser, these might help... \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 85\n          }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 94\n          }, _this), \"-Speak in a North American accent.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 55\n          }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 64\n          }, _this), \"-After the cat finishes talking, wait for a sec for it to start listening to you (indicated by the \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"flashing button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 39\n          }, _this), \").\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 17\n      }, _this),\n      className: \"popover-box\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"round-button\",\n        children: \"?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(Tippy, {\n      content: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"ABC Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Designed & made by: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 45\n          }, _this), \"Liao Hsien-hao Calvin\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 46\n          }, _this), \"Eirini Tsakiri \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 40\n          }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 49\n          }, _this), \"for the project of \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"LT2216 Dialogue Systems\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 44\n          }, _this), \" at G\\xF6teborgs universitet.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 34\n          }, _this), \"github.com/chickenbror/ABCgame\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 25\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 21\n      }, _this),\n      className: \"popover-box\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"round-button\",\n        children: \"i\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 419,\n    columnNumber: 9\n  }, _this);\n};\n\n_c7 = PopoverButtons;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"ReactiveButton\");\n$RefreshReg$(_c2, \"App\");\n$RefreshReg$(_c3, \"YourSubtitles\");\n$RefreshReg$(_c4, \"UserSubtitles\");\n$RefreshReg$(_c5, \"YourLetter\");\n$RefreshReg$(_c6, \"HeartBar\");\n$RefreshReg$(_c7, \"PopoverButtons\");","map":{"version":3,"sources":["/Users/irene/Desktop/ABCgame/src/App.tsx"],"names":["React","Machine","assign","send","useMachine","asEffect","dmMachine","Confetti","TextLoop","useWindupString","HeadShake","require","RubberBand","Tippy","isChrome","isEdge","useSpeechSynthesis","useSpeechRecognition","machine","id","type","states","dm","asrtts","initial","idle","on","LISTEN","SPEAK","target","actions","_context","event","ttsAgenda","value","recognising","entry","exit","ASRRESULT","recResult","RECOGNISED","progress","match","speaking","ENDSPEECH","recLogResult","context","console","log","test","logIntent","nluData","intent","name","ReactiveButton","props","playingNow","state","maxHinted","hinted","maxSkipped","skipped","promptInGame","speakingText","promptMsg","matches","animation","stiffness","damping","spokentext","App","onEnd","speak","cancel","voices","onResult","result","listen","listening","stop","useState","voiceIndex","setVoiceIndex","devTools","recStart","interimResults","continuous","lang","recStop","ttsStart","effect","text","ttsCancel","current","service","confettiSwitch","tally","letter","confettiConfig","angle","spread","startVelocity","elementCount","dragFriction","duration","stagger","width","height","perspective","colors","clicked","handleClick","YourSubtitles","emojis","emoji","subtitlesText","textAnimated","UserSubtitles","showing","YourLetter","toUpperCase","HeartBar","maxScore","currentScore","size","percentage","y","fill","animationDelay","PopoverButtons"],"mappings":"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","sourcesContent":["import * as React from \"react\";\n\n//XState library & Game DM-machine\nimport { Machine, assign, send, State } from \"xstate\";\nimport { useMachine, asEffect } from \"@xstate/react\";\nimport { dmMachine } from './dmGame';\n\n\n//Animation effects\nimport Confetti from 'react-dom-confetti';\nimport TextLoop from \"react-text-loop\";\nimport { useWindupString } from \"windups\";\n        // import HeadShake from 'react-reveal/HeadShake';\nconst HeadShake = require('react-reveal/HeadShake'); //?import shows error in TS, so use require() here instead\nconst RubberBand = require('react-reveal/RubberBand');\n\nimport Tippy from '@tippyjs/react';\n// import 'tippy.js/dist/tippy.css'; \n\n\n\n//Browser detection \nimport { isChrome, isEdge } from \"react-device-detect\";\n\n\n// import { inspect } from \"@xstate/inspect\";\n// inspect({ url:\"https://statecharts.io/inspect\", iframe: false });\n\n\n// State machines: ASR-TTS (voice interface) & dmGame\nimport { useSpeechSynthesis, useSpeechRecognition } from 'react-speech-kit';\n\n\nconst machine = Machine<SDSContext, any, SDSEvent>({\n    id: 'root',\n    type: 'parallel',\n    states: {\n        dm: {\n            ...dmMachine  //dmGame\n        },\n        asrtts: {\n            initial: 'idle',\n            states: {\n                idle: {\n                    on: {\n                        LISTEN: 'recognising',\n                        SPEAK: {\n                            target: 'speaking',\n                            actions: assign((_context, event) => { return { ttsAgenda: event.value } })\n                        }\n                    }\n                },\n                recognising: {\n                    initial: 'progress',\n                    entry: 'recStart',\n                    exit: 'recStop',\n                    on: {\n                        ASRRESULT: {\n                            actions: ['recLogResult',\n                                assign((_context, event) => { return { recResult: event.value } })],\n                            target: '.match'\n                        },\n                        RECOGNISED: 'idle'\n                    },\n                    states: {\n                        progress: {\n                        },\n                        match: {\n                            entry: send('RECOGNISED'),\n                        },\n                    }\n                },\n                speaking: {\n                    entry: 'ttsStart',\n                    on: {\n                        ENDSPEECH: 'idle',\n                    }\n                }\n            }\n        }\n    },\n},\n    {\n        actions: {\n            recLogResult: (context: SDSContext) => {\n                /* context.recResult = event.recResult; */\n                console.log('<< ASR: ' + context.recResult);\n\n            },\n            test: () => {\n                console.log('test')\n            },\n            logIntent: (context: SDSContext) => {\n                /* context.nluData = event.data */\n                console.log('<< NLU intent: ' + context.nluData.intent.name)\n            }\n        },\n    });\n\n\n\ninterface Props extends React.HTMLAttributes<HTMLElement> {\n    state: State<SDSContext, any, any, any>;  //==dm context >>access via props.state.context\n}\n//COMPONENT: Big button in the middle, with changing texts\nconst ReactiveButton = (props: Props,): JSX.Element => {\n    const {playingNow} = props.state.context\n    const {ttsAgenda} = props.state.context\n\n    const maxHinted = props.state.context.hinted >= 5\n\tconst maxSkipped = props.state.context.skipped >= 5\n\n    let promptInGame:string;\n    if(maxSkipped && maxHinted){promptInGame = '...or say Restart, Stop'}\n    else if(maxSkipped && !maxHinted){promptInGame = '...or say Clue, Restart, Stop'}\n    else if(!maxSkipped && maxHinted){promptInGame = '...or say Skip, Restart, Stop'}\n    else {promptInGame = '...or say Clue, Skip, Restart, Stop'}  //default\n\n    let speakingText= playingNow? '😼 '+ttsAgenda : '😻 '+ttsAgenda\n    let promptMsg = playingNow? promptInGame : \"...say Yes or No\"\n\n    switch (true) {\n        case props.state.matches({ asrtts: 'recognising' }):\n            return (\n                <button type=\"button\" className=\"glow-on-hover\"\n                    style={{ animation: \"glowing 20s linear\"}} {...props}>\n                    {/* Listening... */}\n\n                    <TextLoop mask={true} interval={5000} springConfig={{ stiffness: 170, damping: 8 }} >\n                        <div><code> {speakingText} </code></div>\n                        <div><code> {promptMsg} </code></div>\n                    </TextLoop>\n\n                </button>\n            );\n        case props.state.matches({ asrtts: 'speaking' }):\n            \n            const [spokentext] = useWindupString(speakingText); // adds char-by-char animation\n            return (\n                <button type=\"button\" className=\"glow-on-hover\"\n                    style={{ animation: \"bordering 1s infinite\" }} {...props}>\n                    {/* Speaking... */}\n                    <code>{spokentext}</code>\n                </button>\n            );\n        default:\n            return (\n                <button type=\"button\" className=\"glow-on-hover\" {...props}>\n                    <HeadShake>Play game!</HeadShake>\n                </button >\n            );\n    }\n}\n\n// //MAIN CONTAINER: React webpage elements & VOI\nexport default function App() {\n    \n    //Voice interface events (& console logs)\n    //Text to speech:\n    const { speak, cancel, speaking, voices } = useSpeechSynthesis({\n        onEnd: () => {send('ENDSPEECH') },\n    });\n\n    //Speech to text\n    const { listen, listening, stop } = useSpeechRecognition({\n        onResult: (result: any) => {send({ type: \"ASRRESULT\", value: result })  },\n    });\n\n    //List the supported synthesis-voices on the browswer:\n    const [voiceIndex, setVoiceIndex] = React.useState(null);\n    // console.log(voices) //An array of available voices/languages ... varies depending on the computer/browser\n    // const voice =  voices[5] || null; // voices[idx]? voices[idx] : null *(browser default voice)\n\n    const [current, send, service] = useMachine(machine, {\n        devTools: true,\n        actions: {\n            recStart: asEffect(() => {\n                console.log('Ready to receive a voice input.');\n                listen({\n                    interimResults: false,\n                    continuous: true,\n                    lang: 'en-SG'  //Config recognition language here. //list of langs https://cloud.google.com/speech-to-text/docs/languages\n                });\n            }),\n            recStop: asEffect(() => {\n                console.log('Recognition stopped.');\n                stop()\n            }),\n            ttsStart: asEffect((context, effect) => {\n                console.log('Speaking...');\n                speak({ text: context.ttsAgenda\n                        /*, voice*/ //Config which language/voice to speak in\n                     }) \n            }),\n            ttsCancel: asEffect((context, effect) => {\n                console.log('TTS STOP...');\n                cancel()\n            }),\n            speak: asEffect((context) => {\n\t            console.log('Speaking...');\n                speak({text: context.ttsAgenda })\n            }) \n        }\n    });\n\n    // dmMachine-context / React-states, to display on webpage or turn components on/off\n    const { confettiSwitch } = current.context; //triggers confetti when true\n    const { playingNow } = current.context;\n    const { tally } = current.context;\n    const { letter } = current.context;\n    \n    // Config for confetti \n    const confettiConfig = {\n        angle: 90,\n        spread: 360,\n        startVelocity: 80,\n        elementCount: 400,\n        dragFriction: 0.12,\n        duration: 10000,\n        stagger: 1,\n        width: \"7px\",\n        height: \"7px\",\n        perspective: \"210px\",\n        colors: [\"#a864fd\", \"#29cdff\", \"#78ff44\", \"#ff718d\", \"#fdff6a\",\"pink\",\"orange\"]\n      };\n    \n    let clicked=0;\n    const handleClick = () =>{ \n        if(clicked===0){ console.log(\"clicked\"); send('CLICK'); clicked=1 }\n        else{ console.log(\"unclicked\"); send('UNCLICK'); clicked=0 }\n    }\n\n    //>>>JSX codes & various components\n    \n    // Alt page: Show if not using Chrome or Edge\n    if(!isChrome && !isEdge)\n    return (\n        <div className='OtherBrowsers'>  \n            <HeadShake>\n            <div className='Box'>   \n                <h1>Speech Recognition Not Supported :( </h1>\n                <p>I won't be able to hear you on this browser.</p>\n                <p>Please try Chrome or Edge. :-)</p>\n            </div>\n            </HeadShake>\n        </div>\n      )\n\n    //Show if using Chrome or Edge\n    return (\n        <div className='main'>\n            <div className=\"PopoverButtons\"> <PopoverButtons/> </div>\n            <div className=\"App\">\n                \n                <div className=\"LetterAndHeart\">\n                    <div className=\"GlowLetter\"> <YourLetter letter={letter}/> </div>\n                    <div className=\"Heart\"> \n                        {playingNow && <HeartBar currentScore={tally} maxScore={5} size={50} />  }\n                    </div> \n                </div>\n                \n                <Confetti active={ confettiSwitch } config={ confettiConfig }/> \n\n                <RubberBand>\n                    <div className=\"Button\"> \n                        <ReactiveButton state={current} onClick={() => {handleClick()}} /> \n                    </div>\n                </RubberBand>\n\n                <div className=\"Subtitles\"> \n                    {/* VersionA: FOR Github deployment & Canvas submission */}\n                    <YourSubtitles state={current}/> \n\n                    {/* Version B: FOR demo (on local cuz it cannot show on Github page) */}\n                    <UserSubtitles state={current}/> \n                </div>\n            \n            </div>\n\n        </div>\n    )\n};\n\n//COMPONENT: Displaying input of voice interface (ie, recResult)\nconst YourSubtitles=(props:Props) =>{\n    // Player's speech-- only displays when recResult!=undefined \n\n    const {tally} = props.state.context\n    const {recResult} = props.state.context\n    //Prefix face changes based on score of the game\n    const  emojis=['😗','🙂','😀','😄','😁','🥳']\n    let emoji=tally? emojis[tally]:'🙃'\n\n    let subtitlesText:string;\n    if(props.state.matches({ asrtts: 'recognising' })){\n        subtitlesText=emoji+' Listening...'\n    }else if(recResult && recResult!=''){\n        subtitlesText = emoji+' '+recResult\n    }else{\n        subtitlesText = ''\n    }\n\n    const [textAnimated] = useWindupString(subtitlesText);\n    return(\n        <div>\n            <span> {textAnimated} </span>\n        </div>\n    )\n}\n\n//This one doesn't show on Github pages...? but can run locally and use for presentation demo\nconst UserSubtitles=(props:Props) =>{\n\n    const {tally} = props.state.context\n    const {recResult} = props.state.context\n    // const recResult='testing text'\n\n    const  emojis=['😗','🙂','😀','😄','😁','🥳']\n    let emoji= tally? emojis[tally]:'🙃'\n\n    // const defaultText = props.state.matches({ asrtts: 'recognising' })? 'Listening...' : ''\n    // const subtitlesText = recResult? recResult : defaultText\n\n    let subtitlesText:string;\n    if(props.state.matches({ asrtts: 'recognising' })){\n        subtitlesText='Listening...'\n    }else if(recResult && recResult!=''){\n        subtitlesText = recResult\n    }else{\n        subtitlesText = ''\n    }\n\n    const [textAnimated] = useWindupString(subtitlesText);\n    const showing = subtitlesText!=''\n    return(\n        <div id='emoji-and-bubble'>\n            {showing &&  <span className='speech-bubble'> {textAnimated} </span> }\n            {showing && <div id='emoji'> {emoji} </div>}\n        </div>\n    )\n}\n\n//COMPONENT: Capital letter of the game\nconst YourLetter=(props:any) =>{\n    // Shows the letter of the current game round \n    const letter = props.letter\n    return(\n        <div> \n            {letter? letter.toUpperCase():''}\n        </div> \n    )\n}\n\n//COMPONENT: Grey heart to be filled with pink, based on percentage\nconst HeartBar = (props:any) => {\n    \n    const maxScore = props.maxScore\n    const currentScore = props.currentScore>0? props.currentScore : ''\n    const size = props.size\n    const percentage = currentScore? 100*currentScore/maxScore : 0\n    //add other props? eg, showScore={true/false}; showPercentage={true/false}\n\n\n    const y = 24 - (24 * percentage) / 100; //Height of the pink filling shape\n\n    //Below: Heart-shaped vector graphs & text inside\n    return (\n      <div className=\"ProgressBarH\">\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width={size}\n          height={size}\n          viewBox=\"0 0 24 24\"\n        >\n          <defs>\n            <clipPath id=\"cut-off-bottom\">\n              <rect x=\"0\" y={y} width=\"24\" height=\"24\" />\n            </clipPath>\n          \n            <linearGradient id=\"grey-grad\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\n                <stop offset=\"0%\" stopColor=\"#cfccce\" stopOpacity=\"0.75\" />\n                <stop offset=\"60%\" stopColor=\"#bab8ba\" stopOpacity=\"0.85\" />\n                <stop offset=\"100%\" stopColor=\"#949293\" stopOpacity=\"0.9\" />\n            </linearGradient>\n\n            <linearGradient id=\"pink-grad\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\n                <stop offset=\"0%\" stopColor=\"#ff33a7\" stopOpacity=\"0.95\" />\n                <stop offset=\"60%\" stopColor=\"#ff2667\" stopOpacity=\"0.95\" />\n                <stop offset=\"100%\" stopColor=\"rgb(255,0,0)\" stopOpacity=\"0.95\" />\n            </linearGradient>\n\n          </defs>\n          \n          <path\n            style={{ fill: \"url(#grey-grad)\" }}\n            d=\"M12 4.248c-3.148-5.402-12-3.825-12 2.944 0 4.661 5.571 9.427 12 15.808 6.43-6.381 12-11.147 12-15.808 0-6.792-8.875-8.306-12-2.944z\"\n            />\n\n          <path\n            style={{ fill: \"url(#pink-grad)\", }}\n            d=\"M12 4.248c-3.148-5.402-12-3.825-12 2.944 0 4.661 5.571 9.427 12 15.808 6.43-6.381 12-11.147 12-15.808 0-6.792-8.875-8.306-12-2.944z\"\n            clipPath=\"url(#cut-off-bottom)\"\n            />\n\n          <text textAnchor=\"middle\" x=\"12\" y=\"15\" color=\"white\" fontSize=\"11\" fill=\"white\" opacity=\"0.45\"\n                style={{animation: \"wiggle 2.5s ease-out infinite\", animationDelay:'0.9s'}}>\n            {currentScore} \n          </text>\n\n        </svg>\n      </div>\n    );\n  };\n\nconst PopoverButtons = () => {\n\n\n    return (\n        <div>\n\n            <Tippy content={\n                <div>\n                <h4>Having troubles playing? :</h4>\n            \n                    <p>\n                    Due to limitations of the voice recogniser, these might help... <br></br><br></br>\n                    -Speak in a North American accent.<br></br><br></br>\n                    -After the cat finishes talking, wait for a sec for it to start listening to you\n                    (indicated by the <strong>flashing button</strong>).\n                    </p>\n                </div>\n            } className=\"popover-box\">\n                <button className=\"round-button\">?</button>\n            </Tippy>\n\n            <Tippy content={\n                    <div>\n                    <h4>ABC Game</h4>\n                        <p>\n                        Designed & made by: <br></br>\n                        Liao Hsien-hao Calvin<br></br>\n                        Eirini Tsakiri <br></br><br></br>\n                        for the project of <strong>LT2216 Dialogue Systems</strong> at Göteborgs universitet.\n                        <br></br><br></br>\n                        github.com/chickenbror/ABCgame\n                        </p>\n                    </div>\n            }  className=\"popover-box\">\n                <button className=\"round-button\">i</button>\n            </Tippy>\n\n\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}