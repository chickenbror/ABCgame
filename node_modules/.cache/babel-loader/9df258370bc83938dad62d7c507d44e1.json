{"ast":null,"code":"import _slicedToArray from \"C:/CodingProjects/ABCgame/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"C:/CodingProjects/ABCgame/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"C:\\\\CodingProjects\\\\ABCgame\\\\src\\\\App.tsx\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport * as React from \"react\"; //XState library & Game DM-machine\n\nimport { Machine, assign, send } from \"xstate\";\nimport { useMachine, asEffect } from \"@xstate/react\";\nimport { dmMachine } from './dmGame'; //Animation effects\n\nimport Confetti from 'react-dom-confetti';\nimport TextLoop from \"react-text-loop\";\nimport { useWindupString } from \"windups\"; // import HeadShake from 'react-reveal/HeadShake';\n\nvar HeadShake = require('react-reveal/HeadShake'); //?import shows error in TS, so use require() here instead\n\n\nvar RubberBand = require('react-reveal/RubberBand');\n\nimport Tippy from '@tippyjs/react'; //Browser detection \n\nimport { isChrome, isEdge } from \"react-device-detect\"; // import { inspect } from \"@xstate/inspect\";\n// inspect({ url:\"https://statecharts.io/inspect\", iframe: false });\n// State machines: ASR-TTS (voice interface) & dmGame\n\nimport { useSpeechSynthesis, useSpeechRecognition } from 'react-speech-kit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar machine = Machine({\n  id: 'root',\n  type: 'parallel',\n  states: {\n    dm: _objectSpread({}, dmMachine),\n    asrtts: {\n      initial: 'idle',\n      states: {\n        idle: {\n          on: {\n            LISTEN: 'recognising',\n            SPEAK: {\n              target: 'speaking',\n              actions: assign(function (_context, event) {\n                return {\n                  ttsAgenda: event.value\n                };\n              })\n            }\n          }\n        },\n        recognising: {\n          initial: 'progress',\n          entry: 'recStart',\n          exit: 'recStop',\n          on: {\n            ASRRESULT: {\n              actions: ['recLogResult', assign(function (_context, event) {\n                return {\n                  recResult: event.value\n                };\n              })],\n              target: '.match'\n            },\n            RECOGNISED: 'idle'\n          },\n          states: {\n            progress: {},\n            match: {\n              entry: send('RECOGNISED')\n            }\n          }\n        },\n        speaking: {\n          entry: 'ttsStart',\n          on: {\n            ENDSPEECH: 'idle'\n          }\n        }\n      }\n    }\n  }\n}, {\n  actions: {\n    recLogResult: function recLogResult(context) {\n      /* context.recResult = event.recResult; */\n      console.log('<< ASR: ' + context.recResult);\n    },\n    test: function test() {\n      console.log('test');\n    },\n    logIntent: function logIntent(context) {\n      /* context.nluData = event.data */\n      console.log('<< NLU intent: ' + context.nluData.intent.name);\n    }\n  }\n});\n\n//COMPONENT: Big button in the middle, with changing texts\nvar ReactiveButton = function ReactiveButton(props) {\n  _s();\n\n  var playingNow = props.state.context.playingNow;\n  var ttsAgenda = props.state.context.ttsAgenda;\n  var speakingText = playingNow ? '😼 ' + ttsAgenda : '😻 ' + ttsAgenda;\n  var promptMsg = playingNow ? \"...or say Clue, Skip, Restart, Stop \" : \"...say Yes or No\";\n\n  switch (true) {\n    case props.state.matches({\n      asrtts: 'recognising'\n    }):\n      return /*#__PURE__*/_jsxDEV(\"button\", _objectSpread(_objectSpread({\n        type: \"button\",\n        className: \"glow-on-hover\",\n        style: {\n          animation: \"glowing 20s linear\"\n        }\n      }, props), {}, {\n        children: /*#__PURE__*/_jsxDEV(TextLoop, {\n          mask: true,\n          interval: 5000,\n          springConfig: {\n            stiffness: 170,\n            damping: 8\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"code\", {\n              children: [\" \", speakingText, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 30\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"code\", {\n              children: [\" \", promptMsg, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 30\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, _this)\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, _this);\n\n    case props.state.matches({\n      asrtts: 'speaking'\n    }):\n      var _useWindupString = useWindupString(speakingText),\n          _useWindupString2 = _slicedToArray(_useWindupString, 1),\n          spokentext = _useWindupString2[0]; // adds char-by-char animation\n\n\n      return /*#__PURE__*/_jsxDEV(\"button\", _objectSpread(_objectSpread({\n        type: \"button\",\n        className: \"glow-on-hover\",\n        style: {\n          animation: \"bordering 1s infinite\"\n        }\n      }, props), {}, {\n        children: /*#__PURE__*/_jsxDEV(\"code\", {\n          children: spokentext\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, _this)\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, _this);\n\n    default:\n      return /*#__PURE__*/_jsxDEV(\"button\", _objectSpread(_objectSpread({\n        type: \"button\",\n        className: \"glow-on-hover\"\n      }, props), {}, {\n        children: /*#__PURE__*/_jsxDEV(HeadShake, {\n          children: \"Play game!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, _this)\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, _this);\n  }\n}; // //MAIN CONTAINER: React webpage elements & VOI\n\n\n_s(ReactiveButton, \"S+bNtRj7NBvxoKWW+IAkMKMprO8=\", false, function () {\n  return [useWindupString];\n});\n\n_c = ReactiveButton;\nexport default function App() {\n  _s2();\n\n  //Voice interface events (& console logs)\n  var _useSpeechSynthesis = useSpeechSynthesis({\n    onEnd: function onEnd() {\n      send('ENDSPEECH');\n    }\n  }),\n      speak = _useSpeechSynthesis.speak,\n      cancel = _useSpeechSynthesis.cancel,\n      speaking = _useSpeechSynthesis.speaking;\n\n  var _useSpeechRecognition = useSpeechRecognition({\n    onResult: function onResult(result) {\n      send({\n        type: \"ASRRESULT\",\n        value: result\n      });\n    }\n  }),\n      listen = _useSpeechRecognition.listen,\n      listening = _useSpeechRecognition.listening,\n      stop = _useSpeechRecognition.stop;\n\n  var _useMachine = useMachine(machine, {\n    devTools: true,\n    actions: {\n      recStart: asEffect(function () {\n        console.log('Ready to receive a voice input.');\n        listen({\n          interimResults: false,\n          continuous: true\n        });\n      }),\n      recStop: asEffect(function () {\n        console.log('Recognition stopped.');\n        stop();\n      }),\n      ttsStart: asEffect(function (context, effect) {\n        console.log('Speaking...');\n        speak({\n          text: context.ttsAgenda\n        });\n      }),\n      ttsCancel: asEffect(function (context, effect) {\n        console.log('TTS STOP...');\n        cancel();\n      }),\n      speak: asEffect(function (context) {\n        console.log('Speaking...');\n        speak({\n          text: context.ttsAgenda\n        });\n      })\n    }\n  }),\n      _useMachine2 = _slicedToArray(_useMachine, 3),\n      current = _useMachine2[0],\n      send = _useMachine2[1],\n      service = _useMachine2[2]; // dmMachine-context / React-states, to display on webpage or turn components on/off\n\n\n  var confettiSwitch = current.context.confettiSwitch; //triggers confetti when true\n\n  var playingNow = current.context.playingNow;\n  var tally = current.context.tally; // Config for confetti \n\n  var confettiConfig = {\n    angle: 90,\n    spread: 360,\n    startVelocity: 80,\n    elementCount: 400,\n    dragFriction: 0.12,\n    duration: 7500,\n    stagger: 1,\n    width: \"7px\",\n    height: \"7px\",\n    perspective: \"210px\",\n    colors: [\"#a864fd\", \"#29cdff\", \"#78ff44\", \"#ff718d\", \"#fdff6a\"]\n  };\n  var clicked = 0;\n\n  var handleClick = function handleClick() {\n    if (clicked === 0) {\n      console.log(\"clicked\");\n      send('CLICK');\n      clicked = 1;\n    } else {\n      console.log(\"unclicked\");\n      send('UNCLICK');\n      clicked = 0;\n    }\n  }; //>>>JSX codes & various components\n  // Alt page: Show if not using Chrome or Edge\n\n\n  if (!isChrome && !isEdge) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"OtherBrowsers\",\n    children: /*#__PURE__*/_jsxDEV(HeadShake, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Speech Recognition Not Supported :( \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"I won't be able to hear you on this browser.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please try Chrome or Edge. :-)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 9\n  }, this); //Show if using Chrome or Edge\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(PopoverButtons, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"LetterAndHeart\",\n      id: \"LetterAndHeart\",\n      children: [/*#__PURE__*/_jsxDEV(YourLetter, {\n        state: current\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 21\n      }, this), playingNow && /*#__PURE__*/_jsxDEV(HeartBar, {\n        currentScore: tally,\n        maxScore: 5,\n        size: 50\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Confetti, {\n      active: confettiSwitch,\n      config: confettiConfig\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(RubberBand, {\n      children: /*#__PURE__*/_jsxDEV(ReactiveButton, {\n        state: current,\n        onClick: function onClick() {\n          handleClick();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(UserSubtitles, {\n      state: current\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(App, \"RIIO137itlHAPnsUEd30120dxYQ=\", false, function () {\n  return [useSpeechSynthesis, useSpeechRecognition, useMachine];\n});\n\n_c2 = App;\n; //COMPONENT: Displaying input of voice interface (ie, recResult)\n\nvar UserSubtitles = function UserSubtitles(props) {\n  _s3();\n\n  // Player's speech-- only displays when recResult!=undefined \n  var tally = props.state.context.tally; // const {recResult} = props.state.context\n\n  var recResult = \"this is test text\"; //Prefix face changes based on score of the game\n\n  var emojis = ['😗', '🙂', '😀', '😄', '😁', '🥳'];\n  var emoji = tally ? emojis[tally] : '🙃';\n  var subtitlesText = recResult ? recResult : '';\n\n  var _useWindupString3 = useWindupString(subtitlesText),\n      _useWindupString4 = _slicedToArray(_useWindupString3, 1),\n      textAnimated = _useWindupString4[0];\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"emoji-and-bubble\",\n    id: \"emoji-and-bubble\",\n    children: [recResult && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"speech-bubble\",\n      id: \"speech-bubble\",\n      children: [\" \", textAnimated, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 27\n    }, _this), recResult && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: emoji\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 33\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 27\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 263,\n    columnNumber: 9\n  }, _this);\n}; //COMPONENT: Capital letter of the game\n\n\n_s3(UserSubtitles, \"T1TGb1P+O1NhR2xfEfH+NroZm/E=\", false, function () {\n  return [useWindupString];\n});\n\n_c3 = UserSubtitles;\n\nvar YourLetter = function YourLetter(props) {\n  // Shows the letter of the current game round \n  var letter = props.state.context.letter;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"GlowLetter\",\n    id: \"GlowLetter\",\n    children: letter ? letter.toUpperCase() : ''\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 276,\n    columnNumber: 9\n  }, _this);\n}; //COMPONENT: Grey heart to be filled with pink, based on percentage\n\n\n_c4 = YourLetter;\n\nvar HeartBar = function HeartBar(props) {\n  var maxScore = props.maxScore;\n  var currentScore = props.currentScore > 0 ? props.currentScore : '';\n  var size = props.size;\n  var percentage = currentScore ? 100 * currentScore / maxScore : 0; //add other props? eg, showScore={true/false}; showPercentage={true/false}\n\n  var y = 24 - 24 * percentage / 100; //Height of the pink filling shape\n  //Below: Heart-shaped vector graphs & text inside\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Heart\",\n    id: \"Heart\",\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      width: size,\n      height: size,\n      viewBox: \"0 0 24 24\",\n      children: [/*#__PURE__*/_jsxDEV(\"defs\", {\n        children: [/*#__PURE__*/_jsxDEV(\"clipPath\", {\n          id: \"cut-off-bottom\",\n          children: /*#__PURE__*/_jsxDEV(\"rect\", {\n            x: \"0\",\n            y: y,\n            width: \"24\",\n            height: \"24\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"linearGradient\", {\n          id: \"grey-grad\",\n          x1: \"0%\",\n          y1: \"0%\",\n          x2: \"0%\",\n          y2: \"100%\",\n          children: [/*#__PURE__*/_jsxDEV(\"stop\", {\n            offset: \"0%\",\n            stopColor: \"#cfccce\",\n            stopOpacity: \"0.75\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(\"stop\", {\n            offset: \"60%\",\n            stopColor: \"#bab8ba\",\n            stopOpacity: \"0.85\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(\"stop\", {\n            offset: \"100%\",\n            stopColor: \"#949293\",\n            stopOpacity: \"0.9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 17\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"linearGradient\", {\n          id: \"pink-grad\",\n          x1: \"0%\",\n          y1: \"0%\",\n          x2: \"0%\",\n          y2: \"100%\",\n          children: [/*#__PURE__*/_jsxDEV(\"stop\", {\n            offset: \"0%\",\n            stopColor: \"#ff33a7\",\n            stopOpacity: \"0.95\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(\"stop\", {\n            offset: \"60%\",\n            stopColor: \"#ff2667\",\n            stopOpacity: \"0.95\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(\"stop\", {\n            offset: \"100%\",\n            stopColor: \"rgb(255,0,0)\",\n            stopOpacity: \"0.95\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 17\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(\"path\", {\n        style: {\n          fill: \"url(#grey-grad)\"\n        },\n        d: \"M12 4.248c-3.148-5.402-12-3.825-12 2.944 0 4.661 5.571 9.427 12 15.808 6.43-6.381 12-11.147 12-15.808 0-6.792-8.875-8.306-12-2.944z\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(\"path\", {\n        style: {\n          fill: \"url(#pink-grad)\"\n        },\n        d: \"M12 4.248c-3.148-5.402-12-3.825-12 2.944 0 4.661 5.571 9.427 12 15.808 6.43-6.381 12-11.147 12-15.808 0-6.792-8.875-8.306-12-2.944z\",\n        clipPath: \"url(#cut-off-bottom)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(\"text\", {\n        textAnchor: \"middle\",\n        x: \"12\",\n        y: \"15\",\n        color: \"white\",\n        fontSize: \"11\",\n        fill: \"white\",\n        opacity: \"0.45\",\n        style: {\n          animation: \"wiggle 2.5s ease-out infinite\",\n          animationDelay: '0.9s'\n        },\n        children: currentScore\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 9\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 296,\n    columnNumber: 7\n  }, _this);\n};\n\n_c5 = HeartBar;\n\nvar PopoverButtons = function PopoverButtons() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"PopoverButtons\",\n    id: \"PopoverButtons\",\n    children: [/*#__PURE__*/_jsxDEV(Tippy, {\n      content: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Having troubles playing? :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 17\n        }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Due to limitations of the voice recogniser, these might help... \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 85\n          }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 94\n          }, _this), \"-Speak in a North American accent.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 55\n          }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 64\n          }, _this), \"-After the cat finishes talking, wait for a sec for it to start listening to you (indicated by the \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"flashing button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 39\n          }, _this), \").\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 17\n      }, _this),\n      className: \"popover-box\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"round-button\",\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 50\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(Tippy, {\n      content: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"ABC Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Designed & made by: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 45\n          }, _this), \"Liao Hsien-hao Calvin\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 46\n          }, _this), \"Eirini Tsakiri \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 40\n          }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 49\n          }, _this), \"for the project of \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"LT2216 Dialogue Systems\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 44\n          }, _this), \" at G\\xF6teborgs universitet.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 34\n          }, _this), \"github.com/chickenbror/ABCgame\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 25\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 21\n      }, _this),\n      className: \"popover-box\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"round-button\",\n        children: /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: \"i\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 50\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 347,\n    columnNumber: 9\n  }, _this);\n};\n\n_c6 = PopoverButtons;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"ReactiveButton\");\n$RefreshReg$(_c2, \"App\");\n$RefreshReg$(_c3, \"UserSubtitles\");\n$RefreshReg$(_c4, \"YourLetter\");\n$RefreshReg$(_c5, \"HeartBar\");\n$RefreshReg$(_c6, \"PopoverButtons\");","map":{"version":3,"sources":["C:/CodingProjects/ABCgame/src/App.tsx"],"names":["React","Machine","assign","send","useMachine","asEffect","dmMachine","Confetti","TextLoop","useWindupString","HeadShake","require","RubberBand","Tippy","isChrome","isEdge","useSpeechSynthesis","useSpeechRecognition","machine","id","type","states","dm","asrtts","initial","idle","on","LISTEN","SPEAK","target","actions","_context","event","ttsAgenda","value","recognising","entry","exit","ASRRESULT","recResult","RECOGNISED","progress","match","speaking","ENDSPEECH","recLogResult","context","console","log","test","logIntent","nluData","intent","name","ReactiveButton","props","playingNow","state","speakingText","promptMsg","matches","animation","stiffness","damping","spokentext","App","onEnd","speak","cancel","onResult","result","listen","listening","stop","devTools","recStart","interimResults","continuous","recStop","ttsStart","effect","text","ttsCancel","current","service","confettiSwitch","tally","confettiConfig","angle","spread","startVelocity","elementCount","dragFriction","duration","stagger","width","height","perspective","colors","clicked","handleClick","UserSubtitles","emojis","emoji","subtitlesText","textAnimated","YourLetter","letter","toUpperCase","HeartBar","maxScore","currentScore","size","percentage","y","fill","animationDelay","PopoverButtons"],"mappings":"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","sourcesContent":["\r\nimport * as React from \"react\";\r\n\r\n//XState library & Game DM-machine\r\nimport { Machine, assign, send, State } from \"xstate\";\r\nimport { useMachine, asEffect } from \"@xstate/react\";\r\nimport { dmMachine } from './dmGame';\r\n\r\n\r\n//Animation effects\r\nimport Confetti from 'react-dom-confetti';\r\nimport TextLoop from \"react-text-loop\";\r\nimport { useWindupString } from \"windups\";\r\n        // import HeadShake from 'react-reveal/HeadShake';\r\nconst HeadShake = require('react-reveal/HeadShake'); //?import shows error in TS, so use require() here instead\r\nconst RubberBand = require('react-reveal/RubberBand');\r\n\r\nimport Tippy from '@tippyjs/react';\r\n\r\n\r\n\r\n//Browser detection \r\nimport { isChrome, isEdge } from \"react-device-detect\";\r\n\r\n\r\n// import { inspect } from \"@xstate/inspect\";\r\n// inspect({ url:\"https://statecharts.io/inspect\", iframe: false });\r\n\r\n\r\n// State machines: ASR-TTS (voice interface) & dmGame\r\nimport { useSpeechSynthesis, useSpeechRecognition } from 'react-speech-kit';\r\n\r\nconst machine = Machine<SDSContext, any, SDSEvent>({\r\n    id: 'root',\r\n    type: 'parallel',\r\n    states: {\r\n        dm: {\r\n            ...dmMachine  //dmGame\r\n        },\r\n        asrtts: {\r\n            initial: 'idle',\r\n            states: {\r\n                idle: {\r\n                    on: {\r\n                        LISTEN: 'recognising',\r\n                        SPEAK: {\r\n                            target: 'speaking',\r\n                            actions: assign((_context, event) => { return { ttsAgenda: event.value } })\r\n                        }\r\n                    }\r\n                },\r\n                recognising: {\r\n                    initial: 'progress',\r\n                    entry: 'recStart',\r\n                    exit: 'recStop',\r\n                    on: {\r\n                        ASRRESULT: {\r\n                            actions: ['recLogResult',\r\n                                assign((_context, event) => { return { recResult: event.value } })],\r\n                            target: '.match'\r\n                        },\r\n                        RECOGNISED: 'idle'\r\n                    },\r\n                    states: {\r\n                        progress: {\r\n                        },\r\n                        match: {\r\n                            entry: send('RECOGNISED'),\r\n                        },\r\n                    }\r\n                },\r\n                speaking: {\r\n                    entry: 'ttsStart',\r\n                    on: {\r\n                        ENDSPEECH: 'idle',\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n},\r\n    {\r\n        actions: {\r\n            recLogResult: (context: SDSContext) => {\r\n                /* context.recResult = event.recResult; */\r\n                console.log('<< ASR: ' + context.recResult);\r\n\r\n            },\r\n            test: () => {\r\n                console.log('test')\r\n            },\r\n            logIntent: (context: SDSContext) => {\r\n                /* context.nluData = event.data */\r\n                console.log('<< NLU intent: ' + context.nluData.intent.name)\r\n            }\r\n        },\r\n    });\r\n\r\n\r\n\r\ninterface Props extends React.HTMLAttributes<HTMLElement> {\r\n    state: State<SDSContext, any, any, any>;  //==dm context >>access via props.state.context\r\n}\r\n//COMPONENT: Big button in the middle, with changing texts\r\nconst ReactiveButton = (props: Props,): JSX.Element => {\r\n    const {playingNow} = props.state.context\r\n    const {ttsAgenda} = props.state.context\r\n    let speakingText= playingNow? '😼 '+ttsAgenda : '😻 '+ttsAgenda\r\n    let promptMsg = playingNow? \"...or say Clue, Skip, Restart, Stop \" : \"...say Yes or No\"\r\n\r\n    switch (true) {\r\n        case props.state.matches({ asrtts: 'recognising' }):\r\n            return (\r\n                <button type=\"button\" className=\"glow-on-hover\"\r\n                    style={{ animation: \"glowing 20s linear\"}} {...props}>\r\n                    {/* Listening... */}\r\n\r\n                    <TextLoop mask={true} interval={5000} springConfig={{ stiffness: 170, damping: 8 }} >\r\n                        <div><code> {speakingText} </code></div>\r\n                        <div><code> {promptMsg} </code></div>\r\n                    </TextLoop>\r\n\r\n                </button>\r\n            );\r\n        case props.state.matches({ asrtts: 'speaking' }):\r\n            \r\n            const [spokentext] = useWindupString(speakingText); // adds char-by-char animation\r\n            return (\r\n                <button type=\"button\" className=\"glow-on-hover\"\r\n                    style={{ animation: \"bordering 1s infinite\" }} {...props}>\r\n                    {/* Speaking... */}\r\n                    <code>{spokentext}</code>\r\n                </button>\r\n            );\r\n        default:\r\n            return (\r\n                <button type=\"button\" className=\"glow-on-hover\" {...props}>\r\n                    <HeadShake>Play game!</HeadShake>\r\n                </button >\r\n            );\r\n    }\r\n}\r\n\r\n// //MAIN CONTAINER: React webpage elements & VOI\r\nexport default function App() {\r\n    \r\n    //Voice interface events (& console logs)\r\n    const { speak, cancel, speaking } = useSpeechSynthesis({\r\n        onEnd: () => {send('ENDSPEECH') },\r\n    });\r\n    const { listen, listening, stop } = useSpeechRecognition({\r\n        onResult: (result: any) => {send({ type: \"ASRRESULT\", value: result })  },\r\n    });\r\n    const [current, send, service] = useMachine(machine, {\r\n        devTools: true,\r\n        actions: {\r\n            recStart: asEffect(() => {\r\n                console.log('Ready to receive a voice input.');\r\n                listen({\r\n                    interimResults: false,\r\n                    continuous: true\r\n                });\r\n            }),\r\n            recStop: asEffect(() => {\r\n                console.log('Recognition stopped.');\r\n                stop()\r\n            }),\r\n            ttsStart: asEffect((context, effect) => {\r\n                console.log('Speaking...');\r\n                speak({ text: context.ttsAgenda })\r\n            }),\r\n            ttsCancel: asEffect((context, effect) => {\r\n                console.log('TTS STOP...');\r\n                cancel()\r\n            }),\r\n            speak: asEffect((context) => {\r\n\t            console.log('Speaking...');\r\n                speak({text: context.ttsAgenda })\r\n            }) \r\n        }\r\n    });\r\n\r\n    // dmMachine-context / React-states, to display on webpage or turn components on/off\r\n    const { confettiSwitch } = current.context; //triggers confetti when true\r\n    const { playingNow } = current.context;\r\n    const { tally } = current.context;\r\n    \r\n    // Config for confetti \r\n    const confettiConfig = {\r\n        angle: 90,\r\n        spread: 360,\r\n        startVelocity: 80,\r\n        elementCount: 400,\r\n        dragFriction: 0.12,\r\n        duration: 7500,\r\n        stagger: 1,\r\n        width: \"7px\",\r\n        height: \"7px\",\r\n        perspective: \"210px\",\r\n        colors: [\"#a864fd\", \"#29cdff\", \"#78ff44\", \"#ff718d\", \"#fdff6a\"]\r\n      };\r\n    \r\n    let clicked=0;\r\n    const handleClick = () =>{ \r\n        if(clicked===0){ console.log(\"clicked\"); send('CLICK'); clicked=1 }\r\n        else{ console.log(\"unclicked\"); send('UNCLICK'); clicked=0 }\r\n    }\r\n\r\n    //>>>JSX codes & various components\r\n    \r\n    // Alt page: Show if not using Chrome or Edge\r\n    if(!isChrome && !isEdge)\r\n    return (\r\n        <div className='OtherBrowsers'>  \r\n            <HeadShake>\r\n            <div className='Box'>   \r\n                <h1>Speech Recognition Not Supported :( </h1>\r\n                <p>I won't be able to hear you on this browser.</p>\r\n                <p>Please try Chrome or Edge. :-)</p>\r\n            </div>\r\n            </HeadShake>\r\n        </div>\r\n      )\r\n\r\n    //Show if using Chrome or Edge\r\n    return (\r\n        <div className='App'>\r\n                <PopoverButtons/>\r\n                \r\n                <div className=\"LetterAndHeart\" id='LetterAndHeart'>\r\n                    <YourLetter state={current}/>\r\n                    {playingNow && <HeartBar currentScore={tally} maxScore={5} size={50} />  }\r\n                </div>\r\n                \r\n                <Confetti active={ confettiSwitch } config={ confettiConfig }/> \r\n\r\n                <RubberBand>\r\n                    <ReactiveButton state={current} onClick={() => {handleClick()}} /> \r\n                </RubberBand>\r\n\r\n                <UserSubtitles state={current}/>\r\n            \r\n        </div>\r\n    )\r\n};\r\n\r\n//COMPONENT: Displaying input of voice interface (ie, recResult)\r\nconst UserSubtitles=(props:Props) =>{\r\n    // Player's speech-- only displays when recResult!=undefined \r\n\r\n    const {tally} = props.state.context\r\n    // const {recResult} = props.state.context\r\n    const recResult=\"this is test text\"\r\n\r\n    //Prefix face changes based on score of the game\r\n    const  emojis=['😗','🙂','😀','😄','😁','🥳']\r\n    let emoji = tally? emojis[tally]:'🙃'\r\n\r\n    const subtitlesText = recResult? recResult : ''\r\n    const [textAnimated] = useWindupString(subtitlesText)\r\n\r\n    return(\r\n        <div className=\"emoji-and-bubble\" id=\"emoji-and-bubble\">\r\n            {recResult && <div className=\"speech-bubble\" id=\"speech-bubble\"> {textAnimated} </div>}\r\n            {recResult && <div ><h4>{emoji}</h4></div>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n//COMPONENT: Capital letter of the game\r\nconst YourLetter=(props:Props) =>{\r\n    // Shows the letter of the current game round \r\n    const {letter} = props.state.context\r\n    return(\r\n        <div className=\"GlowLetter\" id=\"GlowLetter\"> \r\n            {letter? letter.toUpperCase():''}\r\n        </div> \r\n    )\r\n}\r\n\r\n//COMPONENT: Grey heart to be filled with pink, based on percentage\r\nconst HeartBar = (props:any) => {\r\n    \r\n    const maxScore = props.maxScore\r\n    const currentScore = props.currentScore>0? props.currentScore : ''\r\n    const size = props.size\r\n    const percentage = currentScore? 100*currentScore/maxScore : 0\r\n    //add other props? eg, showScore={true/false}; showPercentage={true/false}\r\n\r\n\r\n    const y = 24 - (24 * percentage) / 100; //Height of the pink filling shape\r\n\r\n    //Below: Heart-shaped vector graphs & text inside\r\n    return (\r\n      <div className=\"Heart\" id='Heart'>\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width={size}\r\n          height={size}\r\n          viewBox=\"0 0 24 24\"\r\n        >\r\n          <defs>\r\n            <clipPath id=\"cut-off-bottom\">\r\n              <rect x=\"0\" y={y} width=\"24\" height=\"24\" />\r\n            </clipPath>\r\n          \r\n            <linearGradient id=\"grey-grad\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\r\n                <stop offset=\"0%\" stopColor=\"#cfccce\" stopOpacity=\"0.75\" />\r\n                <stop offset=\"60%\" stopColor=\"#bab8ba\" stopOpacity=\"0.85\" />\r\n                <stop offset=\"100%\" stopColor=\"#949293\" stopOpacity=\"0.9\" />\r\n            </linearGradient>\r\n\r\n            <linearGradient id=\"pink-grad\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\r\n                <stop offset=\"0%\" stopColor=\"#ff33a7\" stopOpacity=\"0.95\" />\r\n                <stop offset=\"60%\" stopColor=\"#ff2667\" stopOpacity=\"0.95\" />\r\n                <stop offset=\"100%\" stopColor=\"rgb(255,0,0)\" stopOpacity=\"0.95\" />\r\n            </linearGradient>\r\n\r\n          </defs>\r\n          \r\n          <path\r\n            style={{ fill: \"url(#grey-grad)\" }}\r\n            d=\"M12 4.248c-3.148-5.402-12-3.825-12 2.944 0 4.661 5.571 9.427 12 15.808 6.43-6.381 12-11.147 12-15.808 0-6.792-8.875-8.306-12-2.944z\"\r\n            />\r\n\r\n          <path\r\n            style={{ fill: \"url(#pink-grad)\", }}\r\n            d=\"M12 4.248c-3.148-5.402-12-3.825-12 2.944 0 4.661 5.571 9.427 12 15.808 6.43-6.381 12-11.147 12-15.808 0-6.792-8.875-8.306-12-2.944z\"\r\n            clipPath=\"url(#cut-off-bottom)\"\r\n            />\r\n\r\n          <text textAnchor=\"middle\" x=\"12\" y=\"15\" color=\"white\" fontSize=\"11\" fill=\"white\" opacity=\"0.45\"\r\n                style={{animation: \"wiggle 2.5s ease-out infinite\", animationDelay:'0.9s'}}>\r\n            {currentScore} \r\n          </text>\r\n\r\n        </svg>\r\n      </div>\r\n    );\r\n  };\r\n\r\nconst PopoverButtons = () => {\r\n\r\n\r\n    return (\r\n        <div className=\"PopoverButtons\" id=\"PopoverButtons\">\r\n\r\n            <Tippy content={\r\n                <div>\r\n                <h4>Having troubles playing? :</h4>\r\n            \r\n                    <p>\r\n                    Due to limitations of the voice recogniser, these might help... <br></br><br></br>\r\n                    -Speak in a North American accent.<br></br><br></br>\r\n                    -After the cat finishes talking, wait for a sec for it to start listening to you\r\n                    (indicated by the <strong>flashing button</strong>).\r\n                    </p>\r\n                </div>\r\n            } className=\"popover-box\">\r\n                <button className=\"round-button\"><h5>?</h5></button>\r\n            </Tippy>\r\n\r\n            <Tippy content={\r\n                    <div>\r\n                    <h4>ABC Game</h4>\r\n                        <p>\r\n                        Designed & made by: <br></br>\r\n                        Liao Hsien-hao Calvin<br></br>\r\n                        Eirini Tsakiri <br></br><br></br>\r\n                        for the project of <strong>LT2216 Dialogue Systems</strong> at Göteborgs universitet.\r\n                        <br></br><br></br>\r\n                        github.com/chickenbror/ABCgame\r\n                        </p>\r\n                    </div>\r\n            }  className=\"popover-box\">\r\n                <button className=\"round-button\"><h6>i</h6></button>\r\n            </Tippy>\r\n\r\n\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}