{"code":"(this[\"webpackJsonpxstate-react-typescript-template\"]=this[\"webpackJsonpxstate-react-typescript-template\"]||[]).push([[0],{108:function(e,a,t){},113:function(e){e.exports=JSON.parse('{\"questions\":[{\"category\":\"a day of the week\",\"answers\":[\"monday\",\"tuesday\",\"wednesday\",\"thursday\",\"friday\",\"saturday\",\"sunday\"]},{\"category\":\"a fruit\",\"answers\":[\"apple\",\"avocado\",\"apricot\",\"banana\",\"cantaloupe\",\"cherry\",\"clementine\",\"date\",\"grapefruit\",\"pomegranate\",\"grape\",\"honeydew\",\"melon\",\"lemon\",\"lime\",\"mandarin\",\"orange\",\"mango\",\"orange\",\"papaya\",\"peach\",\"pear\",\"pineapple\",\"plantain\",\"plum\",\"pomelo\",\"tangerine\",\"watermelon\",\"strawberry\",\"blueberry\",\"litchi\",\"lingonberry\",\"dragonfruit\",\"tomato\",\"pawpaw\",\"lychee\",\"kiwifruit\",\"kiwi\",\"jackfruit\",\"durian\",\"guava\",\"passionfruit\"]},{\"category\":\"an EU country\",\"answers\":[\"austria\",\"belgium\",\"bulgaria\",\"croatia\",\"cyprus\",\"cypress\",\"czech republic\",\"czechia\",\"denmark\",\"estonia\",\"finland\",\"france\",\"germany\",\"greece\",\"hungary\",\"ireland\",\"italy\",\"latvia\",\"lithuania\",\"luxembourg\",\"malta\",\"netherlands\",\"holland\",\"poland\",\"portugal\",\"romania\",\"slovakia\",\"slovenia\",\"spain\",\"sweden\"]},{\"category\":\"a name of a month\",\"answers\":[\"january\",\"february\",\"march\",\"april\",\"may\",\"june\",\"july\",\"august\",\"september\",\"october\",\"november\",\"december\"]},{\"category\":\"a country that has won Eurovision\",\"answers\":[\"luxembourg\",\"portugal\",\"switzerland\",\"russia\",\"sweden\",\"estonia\",\"serbia\",\"monaco\",\"denmark\",\"israel\",\"norway\",\"greece\",\"france\",\"spain\",\"azerbaijan\",\"belgium\",\"italy\",\"yugoslavia\",\"finland\",\"latvia\",\"germany\",\"ireland\",\"austria\",\"turkey\",\"united kingdom\",\"england\",\"ukraine\",\"netherlands\",\"holland\"]},{\"category\":\"a country in Asia\",\"answers\":[\"china\",\"india\",\"kazakhstan\",\"saudi arabia\",\"iran\",\"mongolia\",\"indonesia\",\"pakistan\",\"turkey\",\"myanmar\",\"afghanistan\",\"yemen\",\"thailand\",\"turkmenistan\",\"uzbekistan\",\"iraq\",\"japan\",\"vietnam\",\"malaysia\",\"philippines\",\"philippine\",\"laos\",\"lao\",\"kyrgyzstan\",\"syria\",\"cambodia\",\"bangladesh\",\"nepal\",\"tajikistan\",\"north korea\",\"south korea\",\"korea\",\"jordan\",\"azerbaijan\",\"united arab emirates\",\"u.a.e.\",\"georgia\",\"sri lanka\",\"bhutan\",\"taiwan\",\"armenia\",\"israel\",\"kuwait\",\"east timor\",\"qatar\",\"lebanon\",\"cyprus\",\"northern cyprus\",\"palestine\",\"brunei\",\"bahrain\",\"singapore\",\"maldives\"]},{\"category\":\"a capital city in Europe\",\"answers\":[\"amsterdam\",\"andorra la vella\",\"ankara\",\"athens\",\"baku\",\"belgrade\",\"berlin\",\"bern\",\"bratislava\",\"brussels\",\"bucharest\",\"budapest\",\"chisinau\",\"kishinev\",\"copenhagen\",\"dublin\",\"helsinki\",\"kyiv\",\"lisbon\",\"ljubljana\",\"london\",\"luxembourg\",\"madrid\",\"minsk\",\"monaco\",\"moscow\",\"nicosia\",\"nur-sultan\",\"oslo\",\"paris\",\"podgorica\",\"prague\",\"reykjavik\",\"riga\",\"rome\",\"san marino\",\"sarajevo\",\"skopje\",\"sofia\",\"stockholm\",\"tallinn\",\"tbilisi\",\"tirana\",\"vaduz\",\"valletta\",\"vatican\",\"vatican city\",\"vienna\",\"vilnius\",\"warsaw\",\"yerevan\",\"zagreb\",\"north nicosia\",\"pristina\",\"stepanakert\",\"sukhumi\",\"tiraspol\",\"tskhinvali\",\"south ossetia\"]},{\"category\":\"a pet animal\",\"answers\":[\"bird\",\"fish\",\"mouse\",\"rat\",\"dog\",\"cat\",\"gerbil\",\"hamster\",\"spider\",\"snake\",\"goldfish\",\"turtle\",\"rabbit\",\"pig\",\"goat\",\"guinea\",\"pig\",\"frog\",\"hedgehog\",\"horse\",\"chicken\",\"duck\",\"goose\",\"budgie\",\"parrot\",\"canary\"]},{\"category\":\"a vegetable\",\"answers\":[\"watercress\",\"brussels sprout\",\"pumpkin\",\"squash\",\"mushroom\",\"bak choi\",\"kale\",\"broccoli\",\"spinach\",\"carrot\",\"lettuce\",\"sweet potato\",\"beetroot\",\"celery\",\"zucchini\",\"potato\",\"onion\",\"cucumber\",\"eggplant\",\"aubergine\",\"corn\",\"cauliflower\",\"asparagus\",\"cabbage\",\"okra\",\"lady finger\",\"pepper\",\"paprika\",\"capsicum\"]},{\"category\":\"a family member\",\"answers\":[\"dad\",\"mom\",\"mum\",\"mother\",\"father\",\"sister\",\"brother\",\"auntie\",\"aunt\",\"uncle\",\"cousin\",\"niece\",\"nephew\",\"grandfather\",\"grandmother\",\"grandma\",\"grandpa\",\"grandad\",\"granny\",\"nanna\",\"nana\",\"pappa\",\"papa\",\"mama\",\"mamma\",\"mommy\",\"husband\",\"wife\",\"partner\",\"stepmother\",\"stepfather\",\"stepson\",\"stepdaughter\",\"son\",\"daughter\",\"sibling\"]},{\"category\":\"a continent\",\"answers\":[\"america\",\"australia\",\"north america\",\"south america\",\"africa\",\"asia\",\"europe\",\"antarctica\"]},{\"category\":\"a social media website or app\",\"answers\":[\"facebook\",\"tik tok\",\"twitter\",\"instagram\",\"snapchat\",\"youtube\"]},{\"category\":\"a piece of furniture\",\"answers\":[\"table\",\"chair\",\"desk\",\"sofa\",\"couch\",\"bench\",\"wardrobe\",\"chest\",\"shelf\",\"closet\",\"armchair\",\"coffee table\",\"carpet\",\"bookshelf\",\"shoe rack\",\"bed\"]},{\"category\":\"a farm animal\",\"answers\":[\"cow\",\"sheep\",\"goat\",\"lamb\",\"pig\",\"chicken\",\"duck\",\"goose\",\"donkey\",\"horse\",\"cat\"]},{\"category\":\"a body part\",\"answers\":[\"head\",\"face\",\"ear\",\"neck\",\"forehead\",\"eye\",\"nose\",\"lip\",\"chin\",\"shoulder\",\"elbow\",\"arm\",\"armpit\",\"wrist\",\"back\",\"breast\",\"waist\",\"navel\",\"belly\",\"belly button\",\"stomach\",\"toe\",\"ankle\",\"nail\",\"finger\",\"abdomen\",\"arse\",\"ass\",\"buttock\",\"hip\",\"leg\",\"thigh\",\"bum\",\"foot\",\"thumb\",\"skin\",\"eyebrow\",\"hair\",\"eyelash\",\"tooth\",\"hand\",\"chest\"]},{\"category\":\"a colour\",\"answers\":[\"white\",\"blue\",\"red\",\"yellow\",\"green\",\"black\",\"grey\",\"gray\",\"brown\",\"beige\",\"purple\",\"orange\",\"pink\",\"violet\"]},{\"category\":\"an African country\",\"answers\":[\"zimbabwe\",\"zambia\",\"uganda\",\"tunisia\",\"togo\",\"tanzania\",\"swaziland\",\"sudan\",\"south africa\",\"somalia\",\"sierra leone\",\"seychelles\",\"senegal\",\"sao tome and principe\",\"rwanda\",\"nigeria\",\"niger\",\"namibia\",\"mozambique\",\"morocco\",\"mauritius\",\"mauritania\",\"mali\",\"malawi\",\"madagascar\",\"libya\",\"liberia\",\"lesotho\",\"kenya\",\"guinea-bissau\",\"guinea\",\"ghana\",\"gambia\",\"gabon\",\"ethiopia\",\"eritrea\",\"equatorial guinea\",\"egypt\",\"djibouti\",\"chad\",\"cote d\\u2019ivoire\",\"ivory coast\",\"congo\",\"comoros\",\"central african republic\",\"cape verde\",\"cameroon\",\"burundi\",\"burkina faso\",\"botswana\",\"benin\",\"angola\",\"algeria\",\"eswatini\"]},{\"category\":\"a breed of dog\",\"answers\":[\"whippet\",\"greyhound\",\"labrador\",\"chihuahua\",\"golden retriever\",\"border collie\",\"corgie\",\"poodle\",\"pomeranian\",\"terrier\",\"saluki\",\"bulldog\",\"maltese\",\"sausage\",\"shepherd\",\"german shepherd\",\"pug\",\"dachshund\",\"chow chow\",\"beagle\",\"husky\"]},{\"category\":\"a video game\",\"answers\":[\"league of legends\",\"counter strike\",\"overwatch\",\"valorant\",\"apex legends\",\"world of warcraft\",\"diablo\",\"starcraft\",\"call of duty\",\"super mario bros\",\"pokemon\",\"angry birds\",\"among us\",\"rocket league\",\"age of empires\",\"rust\",\"valheim\",\"sea of thieves\",\"minecraft\",\"hearthstone\",\"portal\",\"the sims\",\"candy crush\",\"pac man\",\"player unknown\\'s battlegrounds\",\"grand theft auto\",\"tetris\",\"roblox\",\"team fortress\",\"final fantasy\",\"the last of us\",\"war of god\",\"mario cart\",\"animal crossing\",\"skyrim\",\"witcher\",\"assasin\\'s creed\"]},{\"category\":\"an occupation\",\"answers\":[\"doctor\",\"police\",\"detective\",\"bus driver\",\"postman\",\"dancer\",\"musician\",\"painter\",\"programmer\",\"nurse\",\"teacher\",\"professor\",\"firefighter\",\"blacksmith\",\"architect\",\"baker\",\"designer\",\"hairdresser\",\"artist\",\"actor\",\"director\",\"model\",\"engineer\",\"photographer\",\"journalist\",\"writer\",\"singer\",\"mortician\",\"psychologist\",\"translator\",\"interprator\",\"detective\",\"soldier\",\"athlete\",\"chemist\",\"tailor\",\"pilot\",\"dancer\",\"teacher\",\"lawyer\",\"judge\",\"secretary\",\"salesperson\",\"gardener\",\"architect\",\"mailman\",\"handyman\",\"plumber\",\"tradie\",\"director\",\"accountant\",\"carpenter\",\"cook\",\"chef\",\"butcher\",\"waiter\",\"waitress\",\"maid\",\"cleaner\",\"technician\",\"hairdresser\",\"barber\",\"mechanic\",\"farmer\",\"actor\",\"actress\"]},{\"category\":\"a famous movie franchise\",\"answers\":[\"star wars\",\"harry potter\",\"lord of the rings\",\"twilight\",\"hunger games\",\"star trek\",\"fast and furious\",\"alien\",\"james bond\",\"mission impossible\",\"pirates of the carribean\",\"shrek\",\"scream\",\"avengers\",\"spiderman\",\"thor\",\"toy story\",\"underworld\"]},{\"category\":\"a famous musical\",\"answers\":[\"wicked\",\"miss saigon\",\"hamilton\",\"cats\",\"mary poppins\",\"producers\",\"aladdin\",\"beauty and the beast\",\"book of mormon\",\"lion king\",\"chicago\",\"jersey boys\",\"mamma mia\",\"west side story\",\"phantom of the opera\",\"three penny opera\",\"wicked\",\"a chorus line\",\"rent\",\"forty second street\",\"grease\",\"my fair lady\",\"hairspray\",\"fiddler on the roof\",\"kinky boots\",\"annie\",\"cabaret\",\"rock of ages\",\"oklahoma\"]},{\"category\":\"a Marvel superhero movie\",\"answers\":[\"iron man\",\"hulk\",\"captain america\",\"thor\",\"avengers\",\"guardians of the galaxy\",\"ant man\",\"doctor strange\",\"spider-man\",\"spider man\",\"black panther\",\"captain marvel\",\"black widow\",\"shang-chi\",\"x-men\",\"x men\",\"fantastic four\",\"logan\",\"wolverine\",\"deadpool\"]},{\"category\":\"a comic superhero\",\"answers\":[\"iron man\",\"hulk\",\"captain america\",\"thor\",\"avenger\",\"superman\",\"ant man\",\"doctor strange\",\"spider-man\",\"spider man\",\"black panther\",\"captain marvel\",\"black widow\",\"shang-chi\",\"x-men\",\"x men\",\"wonder woman\",\"wanda\",\"wolverine\",\"deadpool\",\"batman\",\"bat man\",\"aquaman\",\"aqua man\"]},{\"category\":\"a Disney animated movie\",\"answers\":[\"frozen\",\"moana\",\"sleeping beauty\",\"snow white\",\"cinderella\",\"mulan\",\"aladdin\",\"beauty and the beast\",\"the little mermaid\",\"little mermaid\",\"lion king\",\"tangled\",\"princess and the frog\",\"peter pan\",\"dumbo\",\"tarzan\",\"lady and the tramp\",\"bambi\",\"stitch\",\"alice in wonderland\",\"pocahontas\",\"hercules\",\"jungle book\",\"pinocchio\",\"zootopia\"]},{\"category\":\"a Harry Potter character\",\"answers\":[\"harry\",\"hermione\",\"ron\",\"voldemort\",\"hagrid\",\"dumbledore\",\"snape\"]},{\"category\":\"a Disney princess\",\"answers\":[\"snow white\",\"cinderella\",\"aurora\",\"ariel\",\"belle\",\"bell\",\"jasmine\",\"pocahontas\",\"mulan\",\"rapunzel\",\"merida\",\"moana\",\"anna\",\"elsa\"]},{\"category\":\"a thing you buy from the grocery store\",\"answers\":[\"milk\",\"bread\",\"toilet paper\",\"juice\",\"jam\",\"fruit\",\"cheese\",\"butter\",\"vegetable\",\"oil\",\"soda\",\"salad\",\"cereal\",\"cookie\",\"coffee\",\"soft drink\",\"coke\",\"food\"]},{\"category\":\"a Spanish-speaking country \",\"answers\":[\"spain\",\"mexico\",\"cuba\",\"argentina\",\"costa rica\",\"chile\",\"colombia\",\"columbia\",\"guatemala\",\"peru\",\"venezuela\",\"ecuador\",\"bolivia\",\"dominican republic\",\"honduras\",\"paraguay\",\"nicaragua\",\"panama\"]},{\"category\":\"an home appliance that has to be plugged in\",\"answers\":[\"tv\",\"fridge\",\"lamp\",\"refrigerator\",\"heater\",\"toaster\",\"mixer\",\"microwave\",\"washing machine\",\"air conditioning\",\"air conditioner\",\"dryer\",\"tumbler\",\"dishwasher\",\"dehumidifier\",\"fan\",\"air purifier\",\"humidifier\"]},{\"category\":\"a sport\",\"answers\":[\"hockey\",\"football\",\"soccer\",\"baseball\",\"rugby\",\"basketball\",\"volleyball\",\"badminton\",\"archery\",\"golf\",\"gymnastics\",\"figure skating\",\"ice skating\",\"cheerleading\",\"tennis\",\"surfing\",\"snowboarding\",\"cricket\",\"skating\",\"climbing\",\"hiking\",\"cycling\",\"wrestling\",\"fencing\",\"handball\",\"spinning\",\"yoga\",\"ice hockey\",\"squash\",\"windsurfing\",\"ski\",\"skating\",\"lacrosse\",\"polo\",\"rowing\",\"swimming\",\"water polo\",\"weightlifting\",\"racing\"]},{\"category\":\"a material that might be used to build a house\",\"answers\":[\"wood\",\"nail\",\"plastic\",\"concrete\",\"brick\",\"glass\",\"steel\",\"insulation\",\"vinyl\",\"marble\",\"tile\"]},{\"category\":\"a metal that old coins might be made out of\",\"answers\":[\"silver\",\"gold\",\"copper\",\"bronze\",\"zinc\",\"steel\"]},{\"category\":\"a country in the Arctic Circle\",\"answers\":[\"sweden\",\"norway\",\"iceland\",\"finland\",\"russia\",\"canada\"]},{\"category\":\"a music genre\",\"answers\":[\"pop\",\"rock\",\"metal\",\"country\",\"rap\",\"gospel\",\"latin\",\"metal\",\"trap\",\"jazz\",\"african\",\"r & b\",\"hip hop\",\"electronic\",\"house\",\"soul\",\"punk\",\"blues\",\"k-pop\"]},{\"category\":\"a famous band\",\"answers\":[\"queen\",\"rolling stones\",\"AC DC\",\"metallica\",\"led zepellin\",\"guns n roses\",\"green day\",\"beatles\",\"arctic monkeys\",\"coldplay\",\"fleetwood mac\",\"pink floyd\",\"muse\",\"smiths\",\"nirvana\",\"who\",\"radiohead\",\"red hot chili peppers\",\"u2\",\"kiss\",\"toto\",\"deep purple\",\"oasis\",\"iron maiden\",\"judas priest\",\"abba\",\"nickelback\",\"black sabbath\",\"bon jovi\",\"maroon five\"]},{\"category\":\"a clothing item\",\"answers\":[\"shirt\",\"t-shirt\",\"top\",\"pants\",\"jeans\",\"dress\",\"skirt\",\"tuxedo\",\"tie\",\"cardigan\",\"jacket\",\"socks\",\"leggings\",\"tights\",\"blazer\",\"tracksuit\"]},{\"category\":\"an item found in a wallet\",\"answers\":[\"money\",\"cash\",\"change\",\"card\",\"condom\",\"coin\",\"i d\",\"id\",\"i.d.\",\"license\",\"coupon\",\"bandaid\",\"credit card\",\"debit card\"]},{\"category\":\"a Netflix series\",\"answers\":[\"house of cards\",\"black mirror\",\"stranger things\",\"orange is the new black\",\"crown\",\"emily in paris\",\"queen\\'s gambit\",\"narcos\",\"bojack horseman\",\"dark\"]},{\"category\":\"a makeup or skincare product\",\"answers\":[\"lipstick\",\"foundation\",\"mascara\",\"lipgloss\",\"toner\",\"eyeliner\",\"eye liner\",\"eye shadow\",\"powder\",\"moisturizer\",\"blush\",\"moisturiser\",\"concealer\",\"nail polish\",\"cleanser\"]},{\"category\":\"a product in your bathroom\",\"answers\":[\"toothpaste\",\"toothbrush\",\"soap\",\"shampoo\",\"conditioner\",\"moisturizer\",\"moisturiser\",\"lotion\",\"shower gel\",\"mouthwash\",\"toilet paper\",\"deodorant\",\"dental floss\",\"razor\",\"cleanser\",\"shaving\",\"towel\",\"q-tip\",\"cotton buds\",\"cotton pads\"]},{\"category\":\"a video streaming service\",\"answers\":[\"netflix\",\"hulu\",\"disney plus\",\"disney\",\"apple tv\",\"amazon prime\",\"prime video\",\"youtube\",\"hbo\",\"twitch\",\"dailymotion\",\"vimeo\"]},{\"category\":\"a soft drink\",\"answers\":[\"coke\",\"coca-cola\",\"pepsi\",\"sprite\",\"seven up\",\"red bull\",\"redbull\",\"fanta\",\"monster\",\"doctor pepper\",\"dr. pepper\",\"mountain dew\"]},{\"category\":\"an Italian food or drink\",\"answers\":[\"pasta\",\"pizza\",\"lasagna\",\"lasagne\",\"risotto\",\"polenta\",\"gelato\",\"tiramisu\",\"espresso\",\"gnocchi\",\"ravioli\",\"tortellini\",\"prosecco\"]},{\"category\":\"a Japanese food\",\"answers\":[\"sushi\",\"sashimi\",\"ramen\",\"miso soup\",\"teriyaki\",\"tempura\",\"matcha\",\"mochi\"]},{\"category\":\"a kitchen appliance\",\"answers\":[\"refrigerator\",\"freezer\",\"fridge\",\"oven\",\"microwave\",\"coffee\",\"blender\",\"mixer\",\"toaster\",\"sandwich maker\"]},{\"category\":\"a Pixar movie\",\"answers\":[\"toy story\",\"finding nemo\",\"cars\",\"monsters\",\"ratatouille\",\"up\",\"brave\",\"inside out\",\"finding dory\",\"coco\",\"onward\",\"soul\",\"wall-e\"]},{\"category\":\"an alcoholic drink\",\"answers\":[\"vodka\",\"rum\",\"whiskey\",\"brandy\",\"gin\",\"tequila\",\"beer\",\"wine\",\"champagne\"]},{\"category\":\"an animated sitcom for adults\",\"answers\":[\"family guy\",\"american dad\",\"bojack horseman\",\"simpsons\",\"robot chicken\",\"solar opposites\",\"rick and morty\",\"futurama\",\"south park\",\"adventure time\"]},{\"category\":\"a Disney villain\",\"answers\":[\"evil queen\",\"maleficent\",\"ursula\",\"gaston\",\"scar\",\"jafar\",\"captain hook\",\"cruella\",\"cruella de vil\"]},{\"category\":\"a type of animal meat\",\"answers\":[\"chicken\",\"duck\",\"goose\",\"beef\",\"pork\",\"mutton\",\"turkey\",\"frog\",\"ostrich\",\"crocodile\",\"quail\",\"fish\",\"salmon\",\"tuna\",\"moose\",\"lamb\",\"reindeer\"]},{\"category\":\"a dairy product\",\"answers\":[\"milk\",\"yoghurt\",\"cheese\",\"cream\",\"butter\",\"sour cream\",\"cottage cheese\",\"ice cream\",\"cream cheese\"]},{\"category\":\"an island nation\",\"answers\":[\"bahamas\",\"bahrain\",\"barbados\",\"brunei\",\"cape verde\",\"comoros\",\"cuba\",\"cyprus\",\"cypress\",\"dominica\",\"dominican republic\",\"fiji\",\"haiti\",\"iceland\",\"indonesia\",\"ireland\",\"jamaica\",\"japan\",\"micronesia\",\"madagasgar\",\"maldives\",\"malta\",\"marshall islands\",\"mauritius\",\"nauru\",\"new zealand\",\"northern cyprus\",\"papua new guinea\",\"philippines\",\"saint kitts and nevis\",\"saint lucia\",\"saint vincent and the grenadines\",\"samoa\",\"sao tome and principe\",\"seychelles\",\"singapore\",\"solomon islands\",\"sri lanka\",\"taiwan\",\"tonga\",\"trinidad and tobago\",\"tuvalu\",\"united kingdom\",\"vanuatu\"]},{\"category\":\"a fast-food restaurant\",\"answers\":[\"mcdonald\\'s\",\"subway\",\"kfc\",\"burger king\",\"max\",\"pizza hut\"]},{\"category\":\"a flower\",\"answers\":[\"rose\",\"daisy\",\"tulip\",\"sunflower\",\"jasmine\",\"lily\",\"poppy\",\"iris\",\"narcissus\",\"orchid\",\"violet\",\"daffodil\",\"carnation\",\"anemone\"]},{\"category\":\"a country that has a monarch\",\"answers\":[\"bahrain\",\"belgium\",\"bhutan\",\"brunei\",\"cambodia\",\"denmark\",\"japan\",\"kuwait\",\"jordan\",\"lesotho\",\"liechtenstein\",\"luxembourg\",\"malaysia\",\"monaco\",\"morocco\",\"netherlands\",\"holland\",\"qatar\",\"spain\",\"sweden\",\"norway\",\"thailand\",\"tonga\",\"united arab emirates\",\"united kingdom\",\"vatican\"]},{\"category\":\"a Greek food\",\"answers\":[\"souvlaki\",\"feta cheese\",\"moussaka\",\"hummus\",\"tzatziki\",\"pita\",\"halloumi\"]},{\"category\":\"a common ice cream flavour\",\"answers\":[\"vanilla\",\"chocolate\",\"strawberry\",\"caramel\",\"coffee\",\"cherry\",\"fudge\",\"cookie\",\"mint\",\"coconut\",\"banana\",\"mango\",\"green tea\",\"berry\",\"blueberry\",\"matcha\",\"tea\",\"tofu\"]},{\"category\":\"an Oscars for best actress winner\",\"answers\":[\"sophia loren\",\"ellen burstyn\",\"sally field\",\"joanne woodward\",\"liza minnelli\",\"jessica tandy\",\"kathy bates\",\"joan fontaine\",\"marlee matlin\",\"norma shearer\",\"greer garson\",\"jennifer jones\",\"shirley maclaine\",\"jessica lange\",\"joan crawford\",\"sandra bullock\",\"olivia colman\",\"loretta young\",\"grace kelly\",\"mary pickford\",\"judy holliday\",\"elizabeth taylor\",\"helen hunt\",\"jane fonda\",\"frances mcdormand\",\"ginger rogers\",\"ingrid bergman\",\"sissy spacek\",\"kate winslet\",\"cate blanchett\",\"maggie smith\",\"louise fletcher\",\"claudette colbert\",\"patricia neal\",\"luise rainer\",\"julie christie\",\"olivia de havilland\",\"glenda jackson\",\"janet gaynor\",\"emma thompson\",\"charlize theron\",\"holly hunter\",\"helen hayes\",\"gwyneth paltrow\",\"cher\",\"marie dressler\",\"susan sarandon\",\"jane wyman\",\"nicole kidman\",\"marion cotillard\",\"jodie foster\",\"emma stone\",\"anne bancroft\",\"helen mirren\",\"julia roberts\",\"reese witherspoon\",\"julianne moore\",\"brie larson\",\"simone signoret\",\"bette davis\",\"shirley booth\",\"geraldine page\",\"barbra streisand\",\"audrey hepburn\",\"julie andrews\",\"hilary swank\",\"jennifer lawrence\",\"vivien leigh\",\"katharine hepburn\",\"diane keaton\",\"ren\\xe9e zellweger\",\"meryl streep\",\"susan hayward\",\"natalie portman\",\"anna magnani\"]},{\"category\":\"an Oscars for best actor winner\",\"answers\":[\"robert duvall\",\"michael douglas\",\"maximilian schell\",\"paul muni\",\"peter finch\",\"jon voight\",\"ernest borgnine\",\"lionel barrymore\",\"jean dujardin\",\"robert de niro\",\"william holden\",\"gary oldman\",\"anthony hopkins\",\"daniel day-lewis\",\"george arliss\",\"rami malek\",\"fredric march\",\"matthew mcconaughey\",\"jack lemmon\",\"robert donat\",\"kevin spacey\",\"art carney\",\"roberto benigni\",\"adrien brody\",\"sidney poitier\",\"laurence olivier\",\"sean penn\",\"joaquin phoenix\",\"gene hackman\",\"ray milland\",\"cliff robertson\",\"yul brynner\",\"spencer tracy\",\"david niven\",\"forest whitaker\",\"casey affleck\",\"burt lancaster\",\"philip seymour hoffman\",\"gregory peck\",\"jack nicholson\",\"henry fonda\",\"eddie redmayne\",\"william hurt\",\"wallace beery\",\"marlon brando\",\"marlon brando1\",\"geoffrey rush\",\"ronald colman\",\"george c. scott1\",\"leonardo dicaprio\",\"bing crosby\",\"jos\\xe9 ferrer\",\"paul newman\",\"james cagney\",\"broderick crawford\",\"jamie foxx\",\"dustin hoffman\",\"warner baxter\",\"al pacino\",\"jeremy irons\",\"alec guinness\",\"james stewart\",\"rex harrison\",\"clark gable\",\"gary cooper\",\"paul scofield\",\"charles laughton\",\"victor mclaglen\",\"emil jannings\",\"john wayne\",\"charlton heston\",\"rod steiger\",\"tom hanks\",\"nicolas cage\",\"russell crowe\",\"richard dreyfuss\",\"colin firth\",\"f. murray abraham\",\"paul lukas\",\"jeff bridges\",\"lee marvin\",\"ben kingsley\"]}]}')},290:function(e,a,t){\"use strict\";t.r(a);t(108);var r=t(2),n=t(44),o=t(23),i=t(14),s=t(297),c=t(8),l=t(296),u=t(61);function d(e){return e[e.length*Math.random()|0]}function h(e){for(var a,t,r=!1;!1===r;)a=d(\"abcdefghijklmnopqrstvvwxyz\"),(t=e.questions.filter((function(e){return e.answers.some((function(e){return e[0]===a}))}))).length>=5&&(r=!0);t.forEach((function(e){e.answers=e.answers.filter((function(e){return e[0]===a}))}));var n=function(e,a){for(var t,r,n=e.slice(0),o=e.length;o--;)t=n[r=Math.floor((o+1)*Math.random())],n[r]=n[o],n[o]=t;return n.slice(0,a)}(t,10);return{letter:a,ques:n}}var g=t(113),p=new(t(114).NounInflector),m=Object(c.b)((function(e){return{recResult:\"\"}})),b=Object(c.b)((function(e){return{ttsAgenda:\"\"}})),y=Object(c.b)((function(e){return{tally:0}})),f=Object(c.b)((function(e){return{letter:void 0}})),j=Object(c.b)((function(e){return{confettiSwitch:!0}})),w=Object(c.b)((function(e){return{confettiSwitch:!1}})),k=Object(c.b)((function(e){return{playingNow:!0}})),v=Object(c.b)((function(e){return{playingNow:!1}})),x=Object(c.b)((function(e){var a=h(g);return console.log(\"Last round:\".concat(e.lastLetter)),console.log(a.ques),{letter:a.letter,questions:a.ques,tally:0,skipped:0,hinted:0,confettiSwitch:!1}})),O=Object(c.b)((function(e){return{lastLetter:e.letter}}));function S(e){var a=e.letter;return'Your letter is \"'.concat(a.toUpperCase(),'\" for \"').concat({a:\"Adam\",b:\"Bella\",c:\"Cindy\",d:\"Daniel\",e:\"Emma\",f:\"Frida\",g:\"Gabriel\",h:\"Hannah\",i:\"Ida\",j:\"Jennifer\",k:\"Kevin\",l:\"Laura\",m:\"Michael\",n:\"Nicole\",o:\"Oscar\",p:\"Paula\",q:\"Quebec\",r:\"Rachel\",s:\"Sophia\",t:\"Tina\",u:\"unique\",v:\"Victoria\",w:\"William\",x:\"x-ray\",y:\"Yasmin\",z:\"Zara\"}[a],'\". ')}function E(e){var a=e.questions[0].category;return\"Name \".concat(a,\". \")}function N(e){var a=d(e.questions[0].answers);if(a.length>=3){var t=a.slice(0,3).toUpperCase();return\"Spelled with \".concat(t[0],\", \").concat(t[1],\", \").concat(t[2],\".\")}var r=a.slice(0,2).toUpperCase();return\"Spelled with \".concat(r[0],\", \").concat(r[1],\".\")}function z(e){return Object(c.k)((function(a){return{type:\"SPEAK\",value:e}}))}function C(){return[{target:\"stop\",cond:function(e){return\"stop\"===L(e.recResult)}},{target:\"restart\",cond:function(e){return\"restart\"===L(e.recResult)}},{target:\"winning\",cond:function(e){return\"shortcut\"===L(e.recResult)}},{target:\".nomatch\"}]}function R(e){return{initial:\"prompt\",states:{prompt:{entry:e,on:{ENDSPEECH:\"ask\"}},ask:{entry:Object(c.k)(\"LISTEN\")},nomatch:{entry:[z(\"Try again\")],on:{ENDSPEECH:\"prompt\"}}}}}function q(e,a){return a.some((function(a){return e.includes(a)}))}function L(e){return q(e=e.toLowerCase(),[\"yes\",\"of course\",\"sure\",\"absolutely\",\"yeah\",\"yep\",\"okay\",\"ok\"])?\"yes\":q(e,[\"no\",\"nope\",\"no thanks\",\"nah\"])?\"no\":q(e,[\"skip\",\"pass\",\"next\"])?\"pass\":q(e,[\"hint\",\"clue\",\"help\"])?\"hint\":q(e,[\"letter\",\"repeat\"])?\"whatletter\":q(e,[\"stop\",\"end the game\",\"shut down\"])?\"stop\":q(e,[\"restart\",\"start again\",\"reboot\"])?\"restart\":q(e,[\"short cut\",\"shortcut\"])?\"shortcut\":void 0}var P={initial:\"init\",states:{init:{on:{CLICK:\"start\"}},stop:{entry:z(\"Ok bye!\"),on:{ENDSPEECH:{actions:[y,f,b,m,w,v],target:\"init\"}}},start:{entry:z(\"Starting the game \"),on:{ENDSPEECH:{target:\"chooseNewLetter\"}}},restart:{entry:z(\"Ok, starting over\"),on:{ENDSPEECH:{target:\"chooseNewLetter\"}}},chooseNewLetter:{always:[{actions:[x,b,m],target:\"checkLastLetter\"}]},checkLastLetter:{always:[{cond:function(e){return!!e.lastLetter&&e.letter===e.lastLetter},target:\"chooseNewLetter\"},{actions:[O,k],target:\"sayletter\"}]},sayletter:{entry:Object(c.k)((function(e){return{type:\"SPEAK\",value:S(e)}})),on:{ENDSPEECH:\"askQues\"}},askQues:Object(i.a)({on:{RECOGNISED:[{cond:function(e){return function(e,a){var t=e.toLowerCase(),r=p.singularize(t),n=a.questions[0].answers;return q(t,n)||q(r,n)}(e.recResult,e)},actions:Object(c.b)((function(e){return e.questions.shift(),{tally:e.tally+1}})),target:\"checkscore\"},{cond:function(e){return\"pass\"===L(e.recResult)},target:\"skip\"},{cond:function(e){return\"hint\"===L(e.recResult)},target:\"hint\"},{cond:function(e){return\"whatletter\"===L(e.recResult)},target:\"sayletter\"}].concat(Object(u.a)(C()))}},R(Object(c.k)((function(e){return{type:\"SPEAK\",value:E(e)}})))),skip:{initial:\"checkSkipped\",states:{checkSkipped:{always:[{target:\"letSkip\",cond:function(e){return e.skipped<5}},{target:\"maxSkipped\",cond:function(e){return e.skipped>=5}}]},letSkip:{entry:Object(c.b)((function(e){var a=e.questions.shift();return e.questions.push(a),console.log(\"Skipped so far: \".concat(e.skipped+1,\" \")),console.log(e.questions),{skipped:e.skipped+1}})),always:\"#checkscore\"},maxSkipped:{entry:z(\"Oops, you've skipped for too many times!\"),on:{ENDSPEECH:{target:\"#checkscore\"}}}}},hint:{initial:\"checkHinted\",states:{checkHinted:{always:[{target:\"giveHint\",cond:function(e){return e.hinted<5}},{target:\"maxHinted\",cond:function(e){return e.hinted>=5}}]},giveHint:{entry:[Object(c.k)((function(e){return{type:\"SPEAK\",value:N(e)}})),Object(c.b)((function(e){return console.log(\"Hinted so far: \".concat(e.hinted+1,\" \")),{hinted:e.hinted+1}}))],always:\"#checkscore\"},maxHinted:{entry:z(\"Oops, you've asked for too many hints!\"),on:{ENDSPEECH:{target:\"#checkscore\"}}}}},checkscore:{id:\"checkscore\",always:[{target:\"askQues\",cond:function(e){return e.tally<5}},{target:\"winning\",cond:function(e){return e.tally>=5}}]},winning:{entry:[z(\"Winner winner chicken dinner\"),j,b],on:{ENDSPEECH:{target:\"playagain\"}}},playagain:Object(i.a)({entry:[m,w,y,f,v],on:{RECOGNISED:[{cond:function(e){return\"yes\"===L(e.recResult)},target:\"restart\"},{cond:function(e){return\"no\"===L(e.recResult)},target:\"stop\"}].concat(Object(u.a)(C()))}},R(z(\"Want to play again?\")))}},A=t(102),D=t.n(A),H=t(105),I=t(46),G=t(60),T=t(56),B=t(57),K=t(3),U=t(274),M=t(278),J=Object(s.a)({id:\"root\",type:\"parallel\",states:{dm:Object(i.a)({},P),asrtts:{initial:\"idle\",states:{idle:{on:{LISTEN:\"recognising\",SPEAK:{target:\"speaking\",actions:Object(c.b)((function(e,a){return{ttsAgenda:a.value}}))}}},recognising:{initial:\"progress\",entry:\"recStart\",exit:\"recStop\",on:{ASRRESULT:{actions:[\"recLogResult\",Object(c.b)((function(e,a){return{recResult:a.value}}))],target:\".match\"},RECOGNISED:\"idle\"},states:{progress:{},match:{entry:Object(c.k)(\"RECOGNISED\")}}},speaking:{entry:\"ttsStart\",on:{ENDSPEECH:\"idle\"}}}}}},{actions:{recLogResult:function(e){console.log(\"<< ASR: \"+e.recResult)},test:function(){console.log(\"test\")},logIntent:function(e){console.log(\"<< NLU intent: \"+e.nluData.intent.name)}}}),Q=function(e){var a,t=e.state.context.playingNow,r=e.state.context.ttsAgenda,n=e.state.context.hinted>=5,s=e.state.context.skipped>=5;a=s&&n?\"...or say Restart, Stop\":s&&!n?\"...or say Clue, Restart, Stop\":!s&&n?\"...or say Skip, Restart, Stop\":\"...or say Clue, Skip, Restart, Stop\";var c=t?\"\\ud83d\\ude3c \"+r:\"\\ud83d\\ude3b \"+r,l=t?a:\"...say Yes or No\";switch(!0){case e.state.matches({asrtts:\"recognising\"}):return Object(K.jsx)(\"button\",Object(i.a)(Object(i.a)({type:\"button\",className:\"glow-on-hover\",style:{animation:\"glowing 20s linear\"}},e),{},{children:Object(K.jsxs)(H.a,{mask:!0,interval:5e3,springConfig:{stiffness:170,damping:8},children:[Object(K.jsx)(\"div\",{children:Object(K.jsxs)(\"code\",{children:[\" \",c,\" \"]})}),Object(K.jsx)(\"div\",{children:Object(K.jsxs)(\"code\",{children:[\" \",l,\" \"]})})]})}));case e.state.matches({asrtts:\"speaking\"}):var u=Object(I.a)(c),d=Object(o.a)(u,1)[0];return Object(K.jsx)(\"button\",Object(i.a)(Object(i.a)({type:\"button\",className:\"glow-on-hover\",style:{animation:\"bordering 1s infinite\"}},e),{},{children:Object(K.jsx)(\"code\",{children:d})}));default:return Object(K.jsx)(\"button\",Object(i.a)(Object(i.a)({type:\"button\",className:\"glow-on-hover\"},e),{},{children:Object(K.jsx)(U,{children:\"Play game!\"})}))}};function W(){var e=Object(B.useSpeechSynthesis)({onEnd:function(){p(\"ENDSPEECH\")}}),a=e.speak,t=e.cancel,n=(e.speaking,e.voices,Object(B.useSpeechRecognition)({onResult:function(e){p({type:\"ASRRESULT\",value:e})}})),i=n.listen,s=(n.listening,n.stop),c=r.useState(null),u=Object(o.a)(c,2),d=(u[0],u[1],Object(l.b)(J,{devTools:!0,actions:{recStart:Object(l.a)((function(){console.log(\"Ready to receive a voice input.\"),i({interimResults:!1,continuous:!0,lang:\"en-SG\"})})),recStop:Object(l.a)((function(){console.log(\"Recognition stopped.\"),s()})),ttsStart:Object(l.a)((function(e,t){console.log(\"Speaking...\"),a({text:e.ttsAgenda})})),ttsCancel:Object(l.a)((function(e,a){console.log(\"TTS STOP...\"),t()})),speak:Object(l.a)((function(e){console.log(\"Speaking...\"),a({text:e.ttsAgenda})}))}})),h=Object(o.a)(d,3),g=h[0],p=h[1],m=(h[2],g.context.confettiSwitch),b=g.context.playingNow,y=g.context.tally,f=g.context.letter,j=0;return T.isChrome||T.isEdge?Object(K.jsxs)(\"div\",{className:\"main\",children:[Object(K.jsxs)(\"div\",{className:\"PopoverButtons\",children:[\" \",Object(K.jsx)(X,{}),\" \"]}),Object(K.jsxs)(\"div\",{className:\"App\",children:[Object(K.jsxs)(\"div\",{className:\"LetterAndHeart\",children:[Object(K.jsxs)(\"div\",{className:\"GlowLetter\",children:[\" \",Object(K.jsx)(V,{letter:f}),\" \"]}),Object(K.jsx)(\"div\",{className:\"Heart\",children:b&&Object(K.jsx)(Z,{currentScore:y,maxScore:5,size:50})})]}),Object(K.jsx)(D.a,{active:m,config:{angle:90,spread:360,startVelocity:80,elementCount:400,dragFriction:.12,duration:7500,stagger:1,width:\"7px\",height:\"7px\",perspective:\"210px\",colors:[\"#a864fd\",\"#29cdff\",\"#78ff44\",\"#ff718d\",\"#fdff6a\"]}}),Object(K.jsx)(M,{children:Object(K.jsx)(\"div\",{className:\"Button\",children:Object(K.jsx)(Q,{state:g,onClick:function(){0===j?(console.log(\"clicked\"),p(\"CLICK\"),j=1):(console.log(\"unclicked\"),p(\"UNCLICK\"),j=0)}})})}),Object(K.jsxs)(\"div\",{className:\"Subtitles\",children:[Object(K.jsx)(Y,{state:g}),Object(K.jsx)(F,{state:g})]})]})]}):Object(K.jsx)(\"div\",{className:\"OtherBrowsers\",children:Object(K.jsx)(U,{children:Object(K.jsxs)(\"div\",{className:\"Box\",children:[Object(K.jsx)(\"h1\",{children:\"Speech Recognition Not Supported :( \"}),Object(K.jsx)(\"p\",{children:\"I won't be able to hear you on this browser.\"}),Object(K.jsx)(\"p\",{children:\"Please try Chrome or Edge. :-)\"})]})})})}var Y=function(e){var a,t=e.state.context.tally,r=e.state.context.recResult,n=t?[\"\\ud83d\\ude17\",\"\\ud83d\\ude42\",\"\\ud83d\\ude00\",\"\\ud83d\\ude04\",\"\\ud83d\\ude01\",\"\\ud83e\\udd73\"][t]:\"\\ud83d\\ude43\";a=e.state.matches({asrtts:\"recognising\"})?n+\" Listening...\":r&&\"\"!=r?n+\" \"+r:\"\";var i=Object(I.a)(a),s=Object(o.a)(i,1)[0];return Object(K.jsx)(\"div\",{children:Object(K.jsxs)(\"span\",{children:[\" \",s,\" \"]})})},F=function(e){var a,t=e.state.context.tally,r=e.state.context.recResult,n=t?[\"\\ud83d\\ude17\",\"\\ud83d\\ude42\",\"\\ud83d\\ude00\",\"\\ud83d\\ude04\",\"\\ud83d\\ude01\",\"\\ud83e\\udd73\"][t]:\"\\ud83d\\ude43\";a=e.state.matches({asrtts:\"recognising\"})?\"Listening...\":r&&\"\"!=r?r:\"\";var i=Object(I.a)(a),s=Object(o.a)(i,1)[0],c=\"\"!=a;return Object(K.jsxs)(\"div\",{id:\"emoji-and-bubble\",children:[c&&Object(K.jsxs)(\"span\",{className:\"speech-bubble\",children:[\" \",s,\" \"]}),c&&Object(K.jsxs)(\"div\",{id:\"emoji\",children:[\" \",n,\" \"]})]})},V=function(e){var a=e.letter;return Object(K.jsx)(\"div\",{children:a?a.toUpperCase():\"\"})},Z=function(e){var a=e.maxScore,t=e.currentScore>0?e.currentScore:\"\",r=e.size,n=24-24*(t?100*t/a:0)/100;return Object(K.jsx)(\"div\",{className:\"ProgressBarH\",children:Object(K.jsxs)(\"svg\",{xmlns:\"http://www.w3.org/2000/svg\",width:r,height:r,viewBox:\"0 0 24 24\",children:[Object(K.jsxs)(\"defs\",{children:[Object(K.jsx)(\"clipPath\",{id:\"cut-off-bottom\",children:Object(K.jsx)(\"rect\",{x:\"0\",y:n,width:\"24\",height:\"24\"})}),Object(K.jsxs)(\"linearGradient\",{id:\"grey-grad\",x1:\"0%\",y1:\"0%\",x2:\"0%\",y2:\"100%\",children:[Object(K.jsx)(\"stop\",{offset:\"0%\",stopColor:\"#cfccce\",stopOpacity:\"0.75\"}),Object(K.jsx)(\"stop\",{offset:\"60%\",stopColor:\"#bab8ba\",stopOpacity:\"0.85\"}),Object(K.jsx)(\"stop\",{offset:\"100%\",stopColor:\"#949293\",stopOpacity:\"0.9\"})]}),Object(K.jsxs)(\"linearGradient\",{id:\"pink-grad\",x1:\"0%\",y1:\"0%\",x2:\"0%\",y2:\"100%\",children:[Object(K.jsx)(\"stop\",{offset:\"0%\",stopColor:\"#ff33a7\",stopOpacity:\"0.95\"}),Object(K.jsx)(\"stop\",{offset:\"60%\",stopColor:\"#ff2667\",stopOpacity:\"0.95\"}),Object(K.jsx)(\"stop\",{offset:\"100%\",stopColor:\"rgb(255,0,0)\",stopOpacity:\"0.95\"})]})]}),Object(K.jsx)(\"path\",{style:{fill:\"url(#grey-grad)\"},d:\"M12 4.248c-3.148-5.402-12-3.825-12 2.944 0 4.661 5.571 9.427 12 15.808 6.43-6.381 12-11.147 12-15.808 0-6.792-8.875-8.306-12-2.944z\"}),Object(K.jsx)(\"path\",{style:{fill:\"url(#pink-grad)\"},d:\"M12 4.248c-3.148-5.402-12-3.825-12 2.944 0 4.661 5.571 9.427 12 15.808 6.43-6.381 12-11.147 12-15.808 0-6.792-8.875-8.306-12-2.944z\",clipPath:\"url(#cut-off-bottom)\"}),Object(K.jsx)(\"text\",{textAnchor:\"middle\",x:\"12\",y:\"15\",color:\"white\",fontSize:\"11\",fill:\"white\",opacity:\"0.45\",style:{animation:\"wiggle 2.5s ease-out infinite\",animationDelay:\"0.9s\"},children:t})]})})},X=function(){return Object(K.jsxs)(\"div\",{children:[Object(K.jsx)(G.a,{content:Object(K.jsxs)(\"div\",{children:[Object(K.jsx)(\"h4\",{children:\"Having troubles playing? :\"}),Object(K.jsxs)(\"p\",{children:[\"Due to limitations of the voice recogniser, these might help... \",Object(K.jsx)(\"br\",{}),Object(K.jsx)(\"br\",{}),\"-Speak in a North American accent.\",Object(K.jsx)(\"br\",{}),Object(K.jsx)(\"br\",{}),\"-After the cat finishes talking, wait for a sec for it to start listening to you (indicated by the \",Object(K.jsx)(\"strong\",{children:\"flashing button\"}),\").\"]})]}),className:\"popover-box\",children:Object(K.jsx)(\"button\",{className:\"round-button\",children:\"?\"})}),Object(K.jsx)(G.a,{content:Object(K.jsxs)(\"div\",{children:[Object(K.jsx)(\"h4\",{children:\"ABC Game\"}),Object(K.jsxs)(\"p\",{children:[\"Designed & made by: \",Object(K.jsx)(\"br\",{}),\"Liao Hsien-hao Calvin\",Object(K.jsx)(\"br\",{}),\"Eirini Tsakiri \",Object(K.jsx)(\"br\",{}),Object(K.jsx)(\"br\",{}),\"for the project of \",Object(K.jsx)(\"strong\",{children:\"LT2216 Dialogue Systems\"}),\" at G\\xf6teborgs universitet.\",Object(K.jsx)(\"br\",{}),Object(K.jsx)(\"br\",{}),\"github.com/chickenbror/ABCgame\"]})]}),className:\"popover-box\",children:Object(K.jsx)(\"button\",{className:\"round-button\",children:\"i\"})})]})},$=document.getElementById(\"root\");n.render(Object(K.jsx)(W,{}),$)}},[[290,1,2]]]);","name":"static/js/main.11549341.chunk.js","map":{"version":3,"sources":["static/js/main.11549341.chunk.js"],"names":["this","push","108","module","exports","__webpack_require__","113","JSON","parse","290","__webpack_exports__","r","react","react_dom","slicedToArray","objectSpread2","Machine","actions","useMachine","toConsumableArray","randomChoice","items","length","Math","random","makeNewQuestions","obj","letter","candidates","done","questions","filter","que","answers","some","ans","forEach","candidate","ques","arr","size","temp","index","shuffled","slice","i","floor","getRandomSubarray","quesJSON","nounInflector","NounInflector","clearRecResult","Object","context","recResult","clearTTSAgenda","ttsAgenda","resetTally","tally","clearLetter","undefined","confettiOn","confettiSwitch","confettiOff","gameOn","playingNow","gameOff","newGameRound","qs","console","log","concat","lastLetter","skipped","hinted","rememberLetter","letterNow","toUpperCase","a","b","c","d","e","f","g","h","j","k","l","m","n","o","p","q","s","t","u","v","w","x","y","z","questionNow","category","giveHint","anAns","hint","_hint","say","text","_context","type","value","sharedRecognitions","target","cond","sayKeyword","promptAndAsk","promptEvent","initial","states","prompt","entry","on","ENDSPEECH","ask","nomatch","exists","input","keywords","keyword","includes","reply","toLowerCase","dmMachine","init","CLICK","stop","start","restart","chooseNewLetter","always","checkLastLetter","sayletter","askQues","RECOGNISED","replySing","singularize","answerMatches","shift","skip","checkSkipped","letSkip","maxSkipped","checkHinted","maxHinted","checkscore","id","winning","playagain","confetti","confetti_default","es","windups_esm","tippy_react_esm","main","dist","jsx_runtime","HeadShake","RubberBand","machine","dm","asrtts","idle","LISTEN","SPEAK","event","recognising","exit","ASRRESULT","progress","match","speaking","recLogResult","test","logIntent","nluData","intent","name","App_ReactiveButton","props","promptInGame","state","speakingText","promptMsg","matches","className","style","animation","children","mask","interval","springConfig","stiffness","damping","_useWindupString","spokentext","App","_useSpeechSynthesis","onEnd","send","speak","cancel","_useSpeechRecognition","voices","onResult","result","listen","listening","_React$useState","_React$useState2","_useMachine","devTools","recStart","interimResults","continuous","lang","recStop","ttsStart","effect","ttsCancel","_useMachine2","current","clicked","App_PopoverButtons","App_YourLetter","App_HeartBar","currentScore","maxScore","active","config","angle","spread","startVelocity","elementCount","dragFriction","duration","stagger","width","height","perspective","colors","onClick","App_YourSubtitles","App_UserSubtitles","subtitlesText","emoji","_useWindupString3","textAnimated","_useWindupString5","showing","xmlns","viewBox","x1","y1","x2","y2","offset","stopColor","stopOpacity","fill","clipPath","textAnchor","color","fontSize","opacity","animationDelay","content","rootElement","document","getElementById"],"mappings":"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"},"input":"(this[\"webpackJsonpxstate-react-typescript-template\"] = this[\"webpackJsonpxstate-react-typescript-template\"] || []).push([[0],{\n\n/***/ 108:\n/***/ (function(module, exports, __webpack_require__) {\n\n// extracted by mini-css-extract-plugin\n\n/***/ }),\n\n/***/ 113:\n/***/ (function(module) {\n\nmodule.exports = JSON.parse(\"{\\\"questions\\\":[{\\\"category\\\":\\\"a day of the week\\\",\\\"answers\\\":[\\\"monday\\\",\\\"tuesday\\\",\\\"wednesday\\\",\\\"thursday\\\",\\\"friday\\\",\\\"saturday\\\",\\\"sunday\\\"]},{\\\"category\\\":\\\"a fruit\\\",\\\"answers\\\":[\\\"apple\\\",\\\"avocado\\\",\\\"apricot\\\",\\\"banana\\\",\\\"cantaloupe\\\",\\\"cherry\\\",\\\"clementine\\\",\\\"date\\\",\\\"grapefruit\\\",\\\"pomegranate\\\",\\\"grape\\\",\\\"honeydew\\\",\\\"melon\\\",\\\"lemon\\\",\\\"lime\\\",\\\"mandarin\\\",\\\"orange\\\",\\\"mango\\\",\\\"orange\\\",\\\"papaya\\\",\\\"peach\\\",\\\"pear\\\",\\\"pineapple\\\",\\\"plantain\\\",\\\"plum\\\",\\\"pomelo\\\",\\\"tangerine\\\",\\\"watermelon\\\",\\\"strawberry\\\",\\\"blueberry\\\",\\\"litchi\\\",\\\"lingonberry\\\",\\\"dragonfruit\\\",\\\"tomato\\\",\\\"pawpaw\\\",\\\"lychee\\\",\\\"kiwifruit\\\",\\\"kiwi\\\",\\\"jackfruit\\\",\\\"durian\\\",\\\"guava\\\",\\\"passionfruit\\\"]},{\\\"category\\\":\\\"an EU country\\\",\\\"answers\\\":[\\\"austria\\\",\\\"belgium\\\",\\\"bulgaria\\\",\\\"croatia\\\",\\\"cyprus\\\",\\\"cypress\\\",\\\"czech republic\\\",\\\"czechia\\\",\\\"denmark\\\",\\\"estonia\\\",\\\"finland\\\",\\\"france\\\",\\\"germany\\\",\\\"greece\\\",\\\"hungary\\\",\\\"ireland\\\",\\\"italy\\\",\\\"latvia\\\",\\\"lithuania\\\",\\\"luxembourg\\\",\\\"malta\\\",\\\"netherlands\\\",\\\"holland\\\",\\\"poland\\\",\\\"portugal\\\",\\\"romania\\\",\\\"slovakia\\\",\\\"slovenia\\\",\\\"spain\\\",\\\"sweden\\\"]},{\\\"category\\\":\\\"a name of a month\\\",\\\"answers\\\":[\\\"january\\\",\\\"february\\\",\\\"march\\\",\\\"april\\\",\\\"may\\\",\\\"june\\\",\\\"july\\\",\\\"august\\\",\\\"september\\\",\\\"october\\\",\\\"november\\\",\\\"december\\\"]},{\\\"category\\\":\\\"a country that has won Eurovision\\\",\\\"answers\\\":[\\\"luxembourg\\\",\\\"portugal\\\",\\\"switzerland\\\",\\\"russia\\\",\\\"sweden\\\",\\\"estonia\\\",\\\"serbia\\\",\\\"monaco\\\",\\\"denmark\\\",\\\"israel\\\",\\\"norway\\\",\\\"greece\\\",\\\"france\\\",\\\"spain\\\",\\\"azerbaijan\\\",\\\"belgium\\\",\\\"italy\\\",\\\"yugoslavia\\\",\\\"finland\\\",\\\"latvia\\\",\\\"germany\\\",\\\"ireland\\\",\\\"austria\\\",\\\"turkey\\\",\\\"united kingdom\\\",\\\"england\\\",\\\"ukraine\\\",\\\"netherlands\\\",\\\"holland\\\"]},{\\\"category\\\":\\\"a country in Asia\\\",\\\"answers\\\":[\\\"china\\\",\\\"india\\\",\\\"kazakhstan\\\",\\\"saudi arabia\\\",\\\"iran\\\",\\\"mongolia\\\",\\\"indonesia\\\",\\\"pakistan\\\",\\\"turkey\\\",\\\"myanmar\\\",\\\"afghanistan\\\",\\\"yemen\\\",\\\"thailand\\\",\\\"turkmenistan\\\",\\\"uzbekistan\\\",\\\"iraq\\\",\\\"japan\\\",\\\"vietnam\\\",\\\"malaysia\\\",\\\"philippines\\\",\\\"philippine\\\",\\\"laos\\\",\\\"lao\\\",\\\"kyrgyzstan\\\",\\\"syria\\\",\\\"cambodia\\\",\\\"bangladesh\\\",\\\"nepal\\\",\\\"tajikistan\\\",\\\"north korea\\\",\\\"south korea\\\",\\\"korea\\\",\\\"jordan\\\",\\\"azerbaijan\\\",\\\"united arab emirates\\\",\\\"u.a.e.\\\",\\\"georgia\\\",\\\"sri lanka\\\",\\\"bhutan\\\",\\\"taiwan\\\",\\\"armenia\\\",\\\"israel\\\",\\\"kuwait\\\",\\\"east timor\\\",\\\"qatar\\\",\\\"lebanon\\\",\\\"cyprus\\\",\\\"northern cyprus\\\",\\\"palestine\\\",\\\"brunei\\\",\\\"bahrain\\\",\\\"singapore\\\",\\\"maldives\\\"]},{\\\"category\\\":\\\"a capital city in Europe\\\",\\\"answers\\\":[\\\"amsterdam\\\",\\\"andorra la vella\\\",\\\"ankara\\\",\\\"athens\\\",\\\"baku\\\",\\\"belgrade\\\",\\\"berlin\\\",\\\"bern\\\",\\\"bratislava\\\",\\\"brussels\\\",\\\"bucharest\\\",\\\"budapest\\\",\\\"chisinau\\\",\\\"kishinev\\\",\\\"copenhagen\\\",\\\"dublin\\\",\\\"helsinki\\\",\\\"kyiv\\\",\\\"lisbon\\\",\\\"ljubljana\\\",\\\"london\\\",\\\"luxembourg\\\",\\\"madrid\\\",\\\"minsk\\\",\\\"monaco\\\",\\\"moscow\\\",\\\"nicosia\\\",\\\"nur-sultan\\\",\\\"oslo\\\",\\\"paris\\\",\\\"podgorica\\\",\\\"prague\\\",\\\"reykjavik\\\",\\\"riga\\\",\\\"rome\\\",\\\"san marino\\\",\\\"sarajevo\\\",\\\"skopje\\\",\\\"sofia\\\",\\\"stockholm\\\",\\\"tallinn\\\",\\\"tbilisi\\\",\\\"tirana\\\",\\\"vaduz\\\",\\\"valletta\\\",\\\"vatican\\\",\\\"vatican city\\\",\\\"vienna\\\",\\\"vilnius\\\",\\\"warsaw\\\",\\\"yerevan\\\",\\\"zagreb\\\",\\\"north nicosia\\\",\\\"pristina\\\",\\\"stepanakert\\\",\\\"sukhumi\\\",\\\"tiraspol\\\",\\\"tskhinvali\\\",\\\"south ossetia\\\"]},{\\\"category\\\":\\\"a pet animal\\\",\\\"answers\\\":[\\\"bird\\\",\\\"fish\\\",\\\"mouse\\\",\\\"rat\\\",\\\"dog\\\",\\\"cat\\\",\\\"gerbil\\\",\\\"hamster\\\",\\\"spider\\\",\\\"snake\\\",\\\"goldfish\\\",\\\"turtle\\\",\\\"rabbit\\\",\\\"pig\\\",\\\"goat\\\",\\\"guinea\\\",\\\"pig\\\",\\\"frog\\\",\\\"hedgehog\\\",\\\"horse\\\",\\\"chicken\\\",\\\"duck\\\",\\\"goose\\\",\\\"budgie\\\",\\\"parrot\\\",\\\"canary\\\"]},{\\\"category\\\":\\\"a vegetable\\\",\\\"answers\\\":[\\\"watercress\\\",\\\"brussels sprout\\\",\\\"pumpkin\\\",\\\"squash\\\",\\\"mushroom\\\",\\\"bak choi\\\",\\\"kale\\\",\\\"broccoli\\\",\\\"spinach\\\",\\\"carrot\\\",\\\"lettuce\\\",\\\"sweet potato\\\",\\\"beetroot\\\",\\\"celery\\\",\\\"zucchini\\\",\\\"potato\\\",\\\"onion\\\",\\\"cucumber\\\",\\\"eggplant\\\",\\\"aubergine\\\",\\\"corn\\\",\\\"cauliflower\\\",\\\"asparagus\\\",\\\"cabbage\\\",\\\"okra\\\",\\\"lady finger\\\",\\\"pepper\\\",\\\"paprika\\\",\\\"capsicum\\\"]},{\\\"category\\\":\\\"a family member\\\",\\\"answers\\\":[\\\"dad\\\",\\\"mom\\\",\\\"mum\\\",\\\"mother\\\",\\\"father\\\",\\\"sister\\\",\\\"brother\\\",\\\"auntie\\\",\\\"aunt\\\",\\\"uncle\\\",\\\"cousin\\\",\\\"niece\\\",\\\"nephew\\\",\\\"grandfather\\\",\\\"grandmother\\\",\\\"grandma\\\",\\\"grandpa\\\",\\\"grandad\\\",\\\"granny\\\",\\\"nanna\\\",\\\"nana\\\",\\\"pappa\\\",\\\"papa\\\",\\\"mama\\\",\\\"mamma\\\",\\\"mommy\\\",\\\"husband\\\",\\\"wife\\\",\\\"partner\\\",\\\"stepmother\\\",\\\"stepfather\\\",\\\"stepson\\\",\\\"stepdaughter\\\",\\\"son\\\",\\\"daughter\\\",\\\"sibling\\\"]},{\\\"category\\\":\\\"a continent\\\",\\\"answers\\\":[\\\"america\\\",\\\"australia\\\",\\\"north america\\\",\\\"south america\\\",\\\"africa\\\",\\\"asia\\\",\\\"europe\\\",\\\"antarctica\\\"]},{\\\"category\\\":\\\"a social media website or app\\\",\\\"answers\\\":[\\\"facebook\\\",\\\"tik tok\\\",\\\"twitter\\\",\\\"instagram\\\",\\\"snapchat\\\",\\\"youtube\\\"]},{\\\"category\\\":\\\"a piece of furniture\\\",\\\"answers\\\":[\\\"table\\\",\\\"chair\\\",\\\"desk\\\",\\\"sofa\\\",\\\"couch\\\",\\\"bench\\\",\\\"wardrobe\\\",\\\"chest\\\",\\\"shelf\\\",\\\"closet\\\",\\\"armchair\\\",\\\"coffee table\\\",\\\"carpet\\\",\\\"bookshelf\\\",\\\"shoe rack\\\",\\\"bed\\\"]},{\\\"category\\\":\\\"a farm animal\\\",\\\"answers\\\":[\\\"cow\\\",\\\"sheep\\\",\\\"goat\\\",\\\"lamb\\\",\\\"pig\\\",\\\"chicken\\\",\\\"duck\\\",\\\"goose\\\",\\\"donkey\\\",\\\"horse\\\",\\\"cat\\\"]},{\\\"category\\\":\\\"a body part\\\",\\\"answers\\\":[\\\"head\\\",\\\"face\\\",\\\"ear\\\",\\\"neck\\\",\\\"forehead\\\",\\\"eye\\\",\\\"nose\\\",\\\"lip\\\",\\\"chin\\\",\\\"shoulder\\\",\\\"elbow\\\",\\\"arm\\\",\\\"armpit\\\",\\\"wrist\\\",\\\"back\\\",\\\"breast\\\",\\\"waist\\\",\\\"navel\\\",\\\"belly\\\",\\\"belly button\\\",\\\"stomach\\\",\\\"toe\\\",\\\"ankle\\\",\\\"nail\\\",\\\"finger\\\",\\\"abdomen\\\",\\\"arse\\\",\\\"ass\\\",\\\"buttock\\\",\\\"hip\\\",\\\"leg\\\",\\\"thigh\\\",\\\"bum\\\",\\\"foot\\\",\\\"thumb\\\",\\\"skin\\\",\\\"eyebrow\\\",\\\"hair\\\",\\\"eyelash\\\",\\\"tooth\\\",\\\"hand\\\",\\\"chest\\\"]},{\\\"category\\\":\\\"a colour\\\",\\\"answers\\\":[\\\"white\\\",\\\"blue\\\",\\\"red\\\",\\\"yellow\\\",\\\"green\\\",\\\"black\\\",\\\"grey\\\",\\\"gray\\\",\\\"brown\\\",\\\"beige\\\",\\\"purple\\\",\\\"orange\\\",\\\"pink\\\",\\\"violet\\\"]},{\\\"category\\\":\\\"an African country\\\",\\\"answers\\\":[\\\"zimbabwe\\\",\\\"zambia\\\",\\\"uganda\\\",\\\"tunisia\\\",\\\"togo\\\",\\\"tanzania\\\",\\\"swaziland\\\",\\\"sudan\\\",\\\"south africa\\\",\\\"somalia\\\",\\\"sierra leone\\\",\\\"seychelles\\\",\\\"senegal\\\",\\\"sao tome and principe\\\",\\\"rwanda\\\",\\\"nigeria\\\",\\\"niger\\\",\\\"namibia\\\",\\\"mozambique\\\",\\\"morocco\\\",\\\"mauritius\\\",\\\"mauritania\\\",\\\"mali\\\",\\\"malawi\\\",\\\"madagascar\\\",\\\"libya\\\",\\\"liberia\\\",\\\"lesotho\\\",\\\"kenya\\\",\\\"guinea-bissau\\\",\\\"guinea\\\",\\\"ghana\\\",\\\"gambia\\\",\\\"gabon\\\",\\\"ethiopia\\\",\\\"eritrea\\\",\\\"equatorial guinea\\\",\\\"egypt\\\",\\\"djibouti\\\",\\\"chad\\\",\\\"cote d’ivoire\\\",\\\"ivory coast\\\",\\\"congo\\\",\\\"comoros\\\",\\\"central african republic\\\",\\\"cape verde\\\",\\\"cameroon\\\",\\\"burundi\\\",\\\"burkina faso\\\",\\\"botswana\\\",\\\"benin\\\",\\\"angola\\\",\\\"algeria\\\",\\\"eswatini\\\"]},{\\\"category\\\":\\\"a breed of dog\\\",\\\"answers\\\":[\\\"whippet\\\",\\\"greyhound\\\",\\\"labrador\\\",\\\"chihuahua\\\",\\\"golden retriever\\\",\\\"border collie\\\",\\\"corgie\\\",\\\"poodle\\\",\\\"pomeranian\\\",\\\"terrier\\\",\\\"saluki\\\",\\\"bulldog\\\",\\\"maltese\\\",\\\"sausage\\\",\\\"shepherd\\\",\\\"german shepherd\\\",\\\"pug\\\",\\\"dachshund\\\",\\\"chow chow\\\",\\\"beagle\\\",\\\"husky\\\"]},{\\\"category\\\":\\\"a video game\\\",\\\"answers\\\":[\\\"league of legends\\\",\\\"counter strike\\\",\\\"overwatch\\\",\\\"valorant\\\",\\\"apex legends\\\",\\\"world of warcraft\\\",\\\"diablo\\\",\\\"starcraft\\\",\\\"call of duty\\\",\\\"super mario bros\\\",\\\"pokemon\\\",\\\"angry birds\\\",\\\"among us\\\",\\\"rocket league\\\",\\\"age of empires\\\",\\\"rust\\\",\\\"valheim\\\",\\\"sea of thieves\\\",\\\"minecraft\\\",\\\"hearthstone\\\",\\\"portal\\\",\\\"the sims\\\",\\\"candy crush\\\",\\\"pac man\\\",\\\"player unknown's battlegrounds\\\",\\\"grand theft auto\\\",\\\"tetris\\\",\\\"roblox\\\",\\\"team fortress\\\",\\\"final fantasy\\\",\\\"the last of us\\\",\\\"war of god\\\",\\\"mario cart\\\",\\\"animal crossing\\\",\\\"skyrim\\\",\\\"witcher\\\",\\\"assasin's creed\\\"]},{\\\"category\\\":\\\"an occupation\\\",\\\"answers\\\":[\\\"doctor\\\",\\\"police\\\",\\\"detective\\\",\\\"bus driver\\\",\\\"postman\\\",\\\"dancer\\\",\\\"musician\\\",\\\"painter\\\",\\\"programmer\\\",\\\"nurse\\\",\\\"teacher\\\",\\\"professor\\\",\\\"firefighter\\\",\\\"blacksmith\\\",\\\"architect\\\",\\\"baker\\\",\\\"designer\\\",\\\"hairdresser\\\",\\\"artist\\\",\\\"actor\\\",\\\"director\\\",\\\"model\\\",\\\"engineer\\\",\\\"photographer\\\",\\\"journalist\\\",\\\"writer\\\",\\\"singer\\\",\\\"mortician\\\",\\\"psychologist\\\",\\\"translator\\\",\\\"interprator\\\",\\\"detective\\\",\\\"soldier\\\",\\\"athlete\\\",\\\"chemist\\\",\\\"tailor\\\",\\\"pilot\\\",\\\"dancer\\\",\\\"teacher\\\",\\\"lawyer\\\",\\\"judge\\\",\\\"secretary\\\",\\\"salesperson\\\",\\\"gardener\\\",\\\"architect\\\",\\\"mailman\\\",\\\"handyman\\\",\\\"plumber\\\",\\\"tradie\\\",\\\"director\\\",\\\"accountant\\\",\\\"carpenter\\\",\\\"cook\\\",\\\"chef\\\",\\\"butcher\\\",\\\"waiter\\\",\\\"waitress\\\",\\\"maid\\\",\\\"cleaner\\\",\\\"technician\\\",\\\"hairdresser\\\",\\\"barber\\\",\\\"mechanic\\\",\\\"farmer\\\",\\\"actor\\\",\\\"actress\\\"]},{\\\"category\\\":\\\"a famous movie franchise\\\",\\\"answers\\\":[\\\"star wars\\\",\\\"harry potter\\\",\\\"lord of the rings\\\",\\\"twilight\\\",\\\"hunger games\\\",\\\"star trek\\\",\\\"fast and furious\\\",\\\"alien\\\",\\\"james bond\\\",\\\"mission impossible\\\",\\\"pirates of the carribean\\\",\\\"shrek\\\",\\\"scream\\\",\\\"avengers\\\",\\\"spiderman\\\",\\\"thor\\\",\\\"toy story\\\",\\\"underworld\\\"]},{\\\"category\\\":\\\"a famous musical\\\",\\\"answers\\\":[\\\"wicked\\\",\\\"miss saigon\\\",\\\"hamilton\\\",\\\"cats\\\",\\\"mary poppins\\\",\\\"producers\\\",\\\"aladdin\\\",\\\"beauty and the beast\\\",\\\"book of mormon\\\",\\\"lion king\\\",\\\"chicago\\\",\\\"jersey boys\\\",\\\"mamma mia\\\",\\\"west side story\\\",\\\"phantom of the opera\\\",\\\"three penny opera\\\",\\\"wicked\\\",\\\"a chorus line\\\",\\\"rent\\\",\\\"forty second street\\\",\\\"grease\\\",\\\"my fair lady\\\",\\\"hairspray\\\",\\\"fiddler on the roof\\\",\\\"kinky boots\\\",\\\"annie\\\",\\\"cabaret\\\",\\\"rock of ages\\\",\\\"oklahoma\\\"]},{\\\"category\\\":\\\"a Marvel superhero movie\\\",\\\"answers\\\":[\\\"iron man\\\",\\\"hulk\\\",\\\"captain america\\\",\\\"thor\\\",\\\"avengers\\\",\\\"guardians of the galaxy\\\",\\\"ant man\\\",\\\"doctor strange\\\",\\\"spider-man\\\",\\\"spider man\\\",\\\"black panther\\\",\\\"captain marvel\\\",\\\"black widow\\\",\\\"shang-chi\\\",\\\"x-men\\\",\\\"x men\\\",\\\"fantastic four\\\",\\\"logan\\\",\\\"wolverine\\\",\\\"deadpool\\\"]},{\\\"category\\\":\\\"a comic superhero\\\",\\\"answers\\\":[\\\"iron man\\\",\\\"hulk\\\",\\\"captain america\\\",\\\"thor\\\",\\\"avenger\\\",\\\"superman\\\",\\\"ant man\\\",\\\"doctor strange\\\",\\\"spider-man\\\",\\\"spider man\\\",\\\"black panther\\\",\\\"captain marvel\\\",\\\"black widow\\\",\\\"shang-chi\\\",\\\"x-men\\\",\\\"x men\\\",\\\"wonder woman\\\",\\\"wanda\\\",\\\"wolverine\\\",\\\"deadpool\\\",\\\"batman\\\",\\\"bat man\\\",\\\"aquaman\\\",\\\"aqua man\\\"]},{\\\"category\\\":\\\"a Disney animated movie\\\",\\\"answers\\\":[\\\"frozen\\\",\\\"moana\\\",\\\"sleeping beauty\\\",\\\"snow white\\\",\\\"cinderella\\\",\\\"mulan\\\",\\\"aladdin\\\",\\\"beauty and the beast\\\",\\\"the little mermaid\\\",\\\"little mermaid\\\",\\\"lion king\\\",\\\"tangled\\\",\\\"princess and the frog\\\",\\\"peter pan\\\",\\\"dumbo\\\",\\\"tarzan\\\",\\\"lady and the tramp\\\",\\\"bambi\\\",\\\"stitch\\\",\\\"alice in wonderland\\\",\\\"pocahontas\\\",\\\"hercules\\\",\\\"jungle book\\\",\\\"pinocchio\\\",\\\"zootopia\\\"]},{\\\"category\\\":\\\"a Harry Potter character\\\",\\\"answers\\\":[\\\"harry\\\",\\\"hermione\\\",\\\"ron\\\",\\\"voldemort\\\",\\\"hagrid\\\",\\\"dumbledore\\\",\\\"snape\\\"]},{\\\"category\\\":\\\"a Disney princess\\\",\\\"answers\\\":[\\\"snow white\\\",\\\"cinderella\\\",\\\"aurora\\\",\\\"ariel\\\",\\\"belle\\\",\\\"bell\\\",\\\"jasmine\\\",\\\"pocahontas\\\",\\\"mulan\\\",\\\"rapunzel\\\",\\\"merida\\\",\\\"moana\\\",\\\"anna\\\",\\\"elsa\\\"]},{\\\"category\\\":\\\"a thing you buy from the grocery store\\\",\\\"answers\\\":[\\\"milk\\\",\\\"bread\\\",\\\"toilet paper\\\",\\\"juice\\\",\\\"jam\\\",\\\"fruit\\\",\\\"cheese\\\",\\\"butter\\\",\\\"vegetable\\\",\\\"oil\\\",\\\"soda\\\",\\\"salad\\\",\\\"cereal\\\",\\\"cookie\\\",\\\"coffee\\\",\\\"soft drink\\\",\\\"coke\\\",\\\"food\\\"]},{\\\"category\\\":\\\"a Spanish-speaking country \\\",\\\"answers\\\":[\\\"spain\\\",\\\"mexico\\\",\\\"cuba\\\",\\\"argentina\\\",\\\"costa rica\\\",\\\"chile\\\",\\\"colombia\\\",\\\"columbia\\\",\\\"guatemala\\\",\\\"peru\\\",\\\"venezuela\\\",\\\"ecuador\\\",\\\"bolivia\\\",\\\"dominican republic\\\",\\\"honduras\\\",\\\"paraguay\\\",\\\"nicaragua\\\",\\\"panama\\\"]},{\\\"category\\\":\\\"an home appliance that has to be plugged in\\\",\\\"answers\\\":[\\\"tv\\\",\\\"fridge\\\",\\\"lamp\\\",\\\"refrigerator\\\",\\\"heater\\\",\\\"toaster\\\",\\\"mixer\\\",\\\"microwave\\\",\\\"washing machine\\\",\\\"air conditioning\\\",\\\"air conditioner\\\",\\\"dryer\\\",\\\"tumbler\\\",\\\"dishwasher\\\",\\\"dehumidifier\\\",\\\"fan\\\",\\\"air purifier\\\",\\\"humidifier\\\"]},{\\\"category\\\":\\\"a sport\\\",\\\"answers\\\":[\\\"hockey\\\",\\\"football\\\",\\\"soccer\\\",\\\"baseball\\\",\\\"rugby\\\",\\\"basketball\\\",\\\"volleyball\\\",\\\"badminton\\\",\\\"archery\\\",\\\"golf\\\",\\\"gymnastics\\\",\\\"figure skating\\\",\\\"ice skating\\\",\\\"cheerleading\\\",\\\"tennis\\\",\\\"surfing\\\",\\\"snowboarding\\\",\\\"cricket\\\",\\\"skating\\\",\\\"climbing\\\",\\\"hiking\\\",\\\"cycling\\\",\\\"wrestling\\\",\\\"fencing\\\",\\\"handball\\\",\\\"spinning\\\",\\\"yoga\\\",\\\"ice hockey\\\",\\\"squash\\\",\\\"windsurfing\\\",\\\"ski\\\",\\\"skating\\\",\\\"lacrosse\\\",\\\"polo\\\",\\\"rowing\\\",\\\"swimming\\\",\\\"water polo\\\",\\\"weightlifting\\\",\\\"racing\\\"]},{\\\"category\\\":\\\"a material that might be used to build a house\\\",\\\"answers\\\":[\\\"wood\\\",\\\"nail\\\",\\\"plastic\\\",\\\"concrete\\\",\\\"brick\\\",\\\"glass\\\",\\\"steel\\\",\\\"insulation\\\",\\\"vinyl\\\",\\\"marble\\\",\\\"tile\\\"]},{\\\"category\\\":\\\"a metal that old coins might be made out of\\\",\\\"answers\\\":[\\\"silver\\\",\\\"gold\\\",\\\"copper\\\",\\\"bronze\\\",\\\"zinc\\\",\\\"steel\\\"]},{\\\"category\\\":\\\"a country in the Arctic Circle\\\",\\\"answers\\\":[\\\"sweden\\\",\\\"norway\\\",\\\"iceland\\\",\\\"finland\\\",\\\"russia\\\",\\\"canada\\\"]},{\\\"category\\\":\\\"a music genre\\\",\\\"answers\\\":[\\\"pop\\\",\\\"rock\\\",\\\"metal\\\",\\\"country\\\",\\\"rap\\\",\\\"gospel\\\",\\\"latin\\\",\\\"metal\\\",\\\"trap\\\",\\\"jazz\\\",\\\"african\\\",\\\"r & b\\\",\\\"hip hop\\\",\\\"electronic\\\",\\\"house\\\",\\\"soul\\\",\\\"punk\\\",\\\"blues\\\",\\\"k-pop\\\"]},{\\\"category\\\":\\\"a famous band\\\",\\\"answers\\\":[\\\"queen\\\",\\\"rolling stones\\\",\\\"AC DC\\\",\\\"metallica\\\",\\\"led zepellin\\\",\\\"guns n roses\\\",\\\"green day\\\",\\\"beatles\\\",\\\"arctic monkeys\\\",\\\"coldplay\\\",\\\"fleetwood mac\\\",\\\"pink floyd\\\",\\\"muse\\\",\\\"smiths\\\",\\\"nirvana\\\",\\\"who\\\",\\\"radiohead\\\",\\\"red hot chili peppers\\\",\\\"u2\\\",\\\"kiss\\\",\\\"toto\\\",\\\"deep purple\\\",\\\"oasis\\\",\\\"iron maiden\\\",\\\"judas priest\\\",\\\"abba\\\",\\\"nickelback\\\",\\\"black sabbath\\\",\\\"bon jovi\\\",\\\"maroon five\\\"]},{\\\"category\\\":\\\"a clothing item\\\",\\\"answers\\\":[\\\"shirt\\\",\\\"t-shirt\\\",\\\"top\\\",\\\"pants\\\",\\\"jeans\\\",\\\"dress\\\",\\\"skirt\\\",\\\"tuxedo\\\",\\\"tie\\\",\\\"cardigan\\\",\\\"jacket\\\",\\\"socks\\\",\\\"leggings\\\",\\\"tights\\\",\\\"blazer\\\",\\\"tracksuit\\\"]},{\\\"category\\\":\\\"an item found in a wallet\\\",\\\"answers\\\":[\\\"money\\\",\\\"cash\\\",\\\"change\\\",\\\"card\\\",\\\"condom\\\",\\\"coin\\\",\\\"i d\\\",\\\"id\\\",\\\"i.d.\\\",\\\"license\\\",\\\"coupon\\\",\\\"bandaid\\\",\\\"credit card\\\",\\\"debit card\\\"]},{\\\"category\\\":\\\"a Netflix series\\\",\\\"answers\\\":[\\\"house of cards\\\",\\\"black mirror\\\",\\\"stranger things\\\",\\\"orange is the new black\\\",\\\"crown\\\",\\\"emily in paris\\\",\\\"queen's gambit\\\",\\\"narcos\\\",\\\"bojack horseman\\\",\\\"dark\\\"]},{\\\"category\\\":\\\"a makeup or skincare product\\\",\\\"answers\\\":[\\\"lipstick\\\",\\\"foundation\\\",\\\"mascara\\\",\\\"lipgloss\\\",\\\"toner\\\",\\\"eyeliner\\\",\\\"eye liner\\\",\\\"eye shadow\\\",\\\"powder\\\",\\\"moisturizer\\\",\\\"blush\\\",\\\"moisturiser\\\",\\\"concealer\\\",\\\"nail polish\\\",\\\"cleanser\\\"]},{\\\"category\\\":\\\"a product in your bathroom\\\",\\\"answers\\\":[\\\"toothpaste\\\",\\\"toothbrush\\\",\\\"soap\\\",\\\"shampoo\\\",\\\"conditioner\\\",\\\"moisturizer\\\",\\\"moisturiser\\\",\\\"lotion\\\",\\\"shower gel\\\",\\\"mouthwash\\\",\\\"toilet paper\\\",\\\"deodorant\\\",\\\"dental floss\\\",\\\"razor\\\",\\\"cleanser\\\",\\\"shaving\\\",\\\"towel\\\",\\\"q-tip\\\",\\\"cotton buds\\\",\\\"cotton pads\\\"]},{\\\"category\\\":\\\"a video streaming service\\\",\\\"answers\\\":[\\\"netflix\\\",\\\"hulu\\\",\\\"disney plus\\\",\\\"disney\\\",\\\"apple tv\\\",\\\"amazon prime\\\",\\\"prime video\\\",\\\"youtube\\\",\\\"hbo\\\",\\\"twitch\\\",\\\"dailymotion\\\",\\\"vimeo\\\"]},{\\\"category\\\":\\\"a soft drink\\\",\\\"answers\\\":[\\\"coke\\\",\\\"coca-cola\\\",\\\"pepsi\\\",\\\"sprite\\\",\\\"seven up\\\",\\\"red bull\\\",\\\"redbull\\\",\\\"fanta\\\",\\\"monster\\\",\\\"doctor pepper\\\",\\\"dr. pepper\\\",\\\"mountain dew\\\"]},{\\\"category\\\":\\\"an Italian food or drink\\\",\\\"answers\\\":[\\\"pasta\\\",\\\"pizza\\\",\\\"lasagna\\\",\\\"lasagne\\\",\\\"risotto\\\",\\\"polenta\\\",\\\"gelato\\\",\\\"tiramisu\\\",\\\"espresso\\\",\\\"gnocchi\\\",\\\"ravioli\\\",\\\"tortellini\\\",\\\"prosecco\\\"]},{\\\"category\\\":\\\"a Japanese food\\\",\\\"answers\\\":[\\\"sushi\\\",\\\"sashimi\\\",\\\"ramen\\\",\\\"miso soup\\\",\\\"teriyaki\\\",\\\"tempura\\\",\\\"matcha\\\",\\\"mochi\\\"]},{\\\"category\\\":\\\"a kitchen appliance\\\",\\\"answers\\\":[\\\"refrigerator\\\",\\\"freezer\\\",\\\"fridge\\\",\\\"oven\\\",\\\"microwave\\\",\\\"coffee\\\",\\\"blender\\\",\\\"mixer\\\",\\\"toaster\\\",\\\"sandwich maker\\\"]},{\\\"category\\\":\\\"a Pixar movie\\\",\\\"answers\\\":[\\\"toy story\\\",\\\"finding nemo\\\",\\\"cars\\\",\\\"monsters\\\",\\\"ratatouille\\\",\\\"up\\\",\\\"brave\\\",\\\"inside out\\\",\\\"finding dory\\\",\\\"coco\\\",\\\"onward\\\",\\\"soul\\\",\\\"wall-e\\\"]},{\\\"category\\\":\\\"an alcoholic drink\\\",\\\"answers\\\":[\\\"vodka\\\",\\\"rum\\\",\\\"whiskey\\\",\\\"brandy\\\",\\\"gin\\\",\\\"tequila\\\",\\\"beer\\\",\\\"wine\\\",\\\"champagne\\\"]},{\\\"category\\\":\\\"an animated sitcom for adults\\\",\\\"answers\\\":[\\\"family guy\\\",\\\"american dad\\\",\\\"bojack horseman\\\",\\\"simpsons\\\",\\\"robot chicken\\\",\\\"solar opposites\\\",\\\"rick and morty\\\",\\\"futurama\\\",\\\"south park\\\",\\\"adventure time\\\"]},{\\\"category\\\":\\\"a Disney villain\\\",\\\"answers\\\":[\\\"evil queen\\\",\\\"maleficent\\\",\\\"ursula\\\",\\\"gaston\\\",\\\"scar\\\",\\\"jafar\\\",\\\"captain hook\\\",\\\"cruella\\\",\\\"cruella de vil\\\"]},{\\\"category\\\":\\\"a type of animal meat\\\",\\\"answers\\\":[\\\"chicken\\\",\\\"duck\\\",\\\"goose\\\",\\\"beef\\\",\\\"pork\\\",\\\"mutton\\\",\\\"turkey\\\",\\\"frog\\\",\\\"ostrich\\\",\\\"crocodile\\\",\\\"quail\\\",\\\"fish\\\",\\\"salmon\\\",\\\"tuna\\\",\\\"moose\\\",\\\"lamb\\\",\\\"reindeer\\\"]},{\\\"category\\\":\\\"a dairy product\\\",\\\"answers\\\":[\\\"milk\\\",\\\"yoghurt\\\",\\\"cheese\\\",\\\"cream\\\",\\\"butter\\\",\\\"sour cream\\\",\\\"cottage cheese\\\",\\\"ice cream\\\",\\\"cream cheese\\\"]},{\\\"category\\\":\\\"an island nation\\\",\\\"answers\\\":[\\\"bahamas\\\",\\\"bahrain\\\",\\\"barbados\\\",\\\"brunei\\\",\\\"cape verde\\\",\\\"comoros\\\",\\\"cuba\\\",\\\"cyprus\\\",\\\"cypress\\\",\\\"dominica\\\",\\\"dominican republic\\\",\\\"fiji\\\",\\\"haiti\\\",\\\"iceland\\\",\\\"indonesia\\\",\\\"ireland\\\",\\\"jamaica\\\",\\\"japan\\\",\\\"micronesia\\\",\\\"madagasgar\\\",\\\"maldives\\\",\\\"malta\\\",\\\"marshall islands\\\",\\\"mauritius\\\",\\\"nauru\\\",\\\"new zealand\\\",\\\"northern cyprus\\\",\\\"papua new guinea\\\",\\\"philippines\\\",\\\"saint kitts and nevis\\\",\\\"saint lucia\\\",\\\"saint vincent and the grenadines\\\",\\\"samoa\\\",\\\"sao tome and principe\\\",\\\"seychelles\\\",\\\"singapore\\\",\\\"solomon islands\\\",\\\"sri lanka\\\",\\\"taiwan\\\",\\\"tonga\\\",\\\"trinidad and tobago\\\",\\\"tuvalu\\\",\\\"united kingdom\\\",\\\"vanuatu\\\"]},{\\\"category\\\":\\\"a fast-food restaurant\\\",\\\"answers\\\":[\\\"mcdonald's\\\",\\\"subway\\\",\\\"kfc\\\",\\\"burger king\\\",\\\"max\\\",\\\"pizza hut\\\"]},{\\\"category\\\":\\\"a flower\\\",\\\"answers\\\":[\\\"rose\\\",\\\"daisy\\\",\\\"tulip\\\",\\\"sunflower\\\",\\\"jasmine\\\",\\\"lily\\\",\\\"poppy\\\",\\\"iris\\\",\\\"narcissus\\\",\\\"orchid\\\",\\\"violet\\\",\\\"daffodil\\\",\\\"carnation\\\",\\\"anemone\\\"]},{\\\"category\\\":\\\"a country that has a monarch\\\",\\\"answers\\\":[\\\"bahrain\\\",\\\"belgium\\\",\\\"bhutan\\\",\\\"brunei\\\",\\\"cambodia\\\",\\\"denmark\\\",\\\"japan\\\",\\\"kuwait\\\",\\\"jordan\\\",\\\"lesotho\\\",\\\"liechtenstein\\\",\\\"luxembourg\\\",\\\"malaysia\\\",\\\"monaco\\\",\\\"morocco\\\",\\\"netherlands\\\",\\\"holland\\\",\\\"qatar\\\",\\\"spain\\\",\\\"sweden\\\",\\\"norway\\\",\\\"thailand\\\",\\\"tonga\\\",\\\"united arab emirates\\\",\\\"united kingdom\\\",\\\"vatican\\\"]},{\\\"category\\\":\\\"a Greek food\\\",\\\"answers\\\":[\\\"souvlaki\\\",\\\"feta cheese\\\",\\\"moussaka\\\",\\\"hummus\\\",\\\"tzatziki\\\",\\\"pita\\\",\\\"halloumi\\\"]},{\\\"category\\\":\\\"a common ice cream flavour\\\",\\\"answers\\\":[\\\"vanilla\\\",\\\"chocolate\\\",\\\"strawberry\\\",\\\"caramel\\\",\\\"coffee\\\",\\\"cherry\\\",\\\"fudge\\\",\\\"cookie\\\",\\\"mint\\\",\\\"coconut\\\",\\\"banana\\\",\\\"mango\\\",\\\"green tea\\\",\\\"berry\\\",\\\"blueberry\\\",\\\"matcha\\\",\\\"tea\\\",\\\"tofu\\\"]},{\\\"category\\\":\\\"an Oscars for best actress winner\\\",\\\"answers\\\":[\\\"sophia loren\\\",\\\"ellen burstyn\\\",\\\"sally field\\\",\\\"joanne woodward\\\",\\\"liza minnelli\\\",\\\"jessica tandy\\\",\\\"kathy bates\\\",\\\"joan fontaine\\\",\\\"marlee matlin\\\",\\\"norma shearer\\\",\\\"greer garson\\\",\\\"jennifer jones\\\",\\\"shirley maclaine\\\",\\\"jessica lange\\\",\\\"joan crawford\\\",\\\"sandra bullock\\\",\\\"olivia colman\\\",\\\"loretta young\\\",\\\"grace kelly\\\",\\\"mary pickford\\\",\\\"judy holliday\\\",\\\"elizabeth taylor\\\",\\\"helen hunt\\\",\\\"jane fonda\\\",\\\"frances mcdormand\\\",\\\"ginger rogers\\\",\\\"ingrid bergman\\\",\\\"sissy spacek\\\",\\\"kate winslet\\\",\\\"cate blanchett\\\",\\\"maggie smith\\\",\\\"louise fletcher\\\",\\\"claudette colbert\\\",\\\"patricia neal\\\",\\\"luise rainer\\\",\\\"julie christie\\\",\\\"olivia de havilland\\\",\\\"glenda jackson\\\",\\\"janet gaynor\\\",\\\"emma thompson\\\",\\\"charlize theron\\\",\\\"holly hunter\\\",\\\"helen hayes\\\",\\\"gwyneth paltrow\\\",\\\"cher\\\",\\\"marie dressler\\\",\\\"susan sarandon\\\",\\\"jane wyman\\\",\\\"nicole kidman\\\",\\\"marion cotillard\\\",\\\"jodie foster\\\",\\\"emma stone\\\",\\\"anne bancroft\\\",\\\"helen mirren\\\",\\\"julia roberts\\\",\\\"reese witherspoon\\\",\\\"julianne moore\\\",\\\"brie larson\\\",\\\"simone signoret\\\",\\\"bette davis\\\",\\\"shirley booth\\\",\\\"geraldine page\\\",\\\"barbra streisand\\\",\\\"audrey hepburn\\\",\\\"julie andrews\\\",\\\"hilary swank\\\",\\\"jennifer lawrence\\\",\\\"vivien leigh\\\",\\\"katharine hepburn\\\",\\\"diane keaton\\\",\\\"renée zellweger\\\",\\\"meryl streep\\\",\\\"susan hayward\\\",\\\"natalie portman\\\",\\\"anna magnani\\\"]},{\\\"category\\\":\\\"an Oscars for best actor winner\\\",\\\"answers\\\":[\\\"robert duvall\\\",\\\"michael douglas\\\",\\\"maximilian schell\\\",\\\"paul muni\\\",\\\"peter finch\\\",\\\"jon voight\\\",\\\"ernest borgnine\\\",\\\"lionel barrymore\\\",\\\"jean dujardin\\\",\\\"robert de niro\\\",\\\"william holden\\\",\\\"gary oldman\\\",\\\"anthony hopkins\\\",\\\"daniel day-lewis\\\",\\\"george arliss\\\",\\\"rami malek\\\",\\\"fredric march\\\",\\\"matthew mcconaughey\\\",\\\"jack lemmon\\\",\\\"robert donat\\\",\\\"kevin spacey\\\",\\\"art carney\\\",\\\"roberto benigni\\\",\\\"adrien brody\\\",\\\"sidney poitier\\\",\\\"laurence olivier\\\",\\\"sean penn\\\",\\\"joaquin phoenix\\\",\\\"gene hackman\\\",\\\"ray milland\\\",\\\"cliff robertson\\\",\\\"yul brynner\\\",\\\"spencer tracy\\\",\\\"david niven\\\",\\\"forest whitaker\\\",\\\"casey affleck\\\",\\\"burt lancaster\\\",\\\"philip seymour hoffman\\\",\\\"gregory peck\\\",\\\"jack nicholson\\\",\\\"henry fonda\\\",\\\"eddie redmayne\\\",\\\"william hurt\\\",\\\"wallace beery\\\",\\\"marlon brando\\\",\\\"marlon brando1\\\",\\\"geoffrey rush\\\",\\\"ronald colman\\\",\\\"george c. scott1\\\",\\\"leonardo dicaprio\\\",\\\"bing crosby\\\",\\\"josé ferrer\\\",\\\"paul newman\\\",\\\"james cagney\\\",\\\"broderick crawford\\\",\\\"jamie foxx\\\",\\\"dustin hoffman\\\",\\\"warner baxter\\\",\\\"al pacino\\\",\\\"jeremy irons\\\",\\\"alec guinness\\\",\\\"james stewart\\\",\\\"rex harrison\\\",\\\"clark gable\\\",\\\"gary cooper\\\",\\\"paul scofield\\\",\\\"charles laughton\\\",\\\"victor mclaglen\\\",\\\"emil jannings\\\",\\\"john wayne\\\",\\\"charlton heston\\\",\\\"rod steiger\\\",\\\"tom hanks\\\",\\\"nicolas cage\\\",\\\"russell crowe\\\",\\\"richard dreyfuss\\\",\\\"colin firth\\\",\\\"f. murray abraham\\\",\\\"paul lukas\\\",\\\"jeff bridges\\\",\\\"lee marvin\\\",\\\"ben kingsley\\\"]}]}\");\n\n/***/ }),\n\n/***/ 290:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./src/styles.scss\nvar styles = __webpack_require__(108);\n\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(2);\n\n// EXTERNAL MODULE: ./node_modules/react-dom/index.js\nvar react_dom = __webpack_require__(44);\n\n// EXTERNAL MODULE: ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js + 3 modules\nvar slicedToArray = __webpack_require__(23);\n\n// EXTERNAL MODULE: ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js + 1 modules\nvar objectSpread2 = __webpack_require__(14);\n\n// EXTERNAL MODULE: ./node_modules/xstate/es/Machine.js + 2 modules\nvar Machine = __webpack_require__(297);\n\n// EXTERNAL MODULE: ./node_modules/xstate/es/actions.js\nvar actions = __webpack_require__(8);\n\n// EXTERNAL MODULE: ./node_modules/@xstate/react/es/useMachine.js + 3 modules\nvar useMachine = __webpack_require__(296);\n\n// EXTERNAL MODULE: ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js + 3 modules\nvar toConsumableArray = __webpack_require__(61);\n\n// CONCATENATED MODULE: ./src/game_codes/game.js\n//A JSON object. Can be read from an external .json file\n// const quesJSON = require('./questions.json') //only works on server-end eg Node.js\n// function shuffleArray(array) {\n//     let curId = array.length;\n//     // There remain elements to shuffle\n//     while (0 !== curId) {\n//         // Pick a remaining element\n//         let randId = Math.floor(Math.random() * curId);\n//         curId -= 1;\n//         // Swap it with the current element.\n//         let tmp = array[curId];\n//         array[curId] = array[randId];\n//         array[randId] = tmp;\n//     }\n//     return array;\n// }\nfunction getRandomSubarray(arr,size){var shuffled=arr.slice(0),i=arr.length,temp,index;while(i--){index=Math.floor((i+1)*Math.random());temp=shuffled[index];shuffled[index]=shuffled[i];shuffled[i]=temp;}return shuffled.slice(0,size);}function randomChoice(items){var choice=items[items.length*Math.random()|0];return choice;}//Instancicates an object with .letter (a random letter) & .ques (array of 5+ questions objects); \n//each question object has .category & .answers (array of things in that category and begins with the letter)\nfunction makeNewQuestions(obj){var letter;var candidates;var done=false;while(done===false){letter=randomChoice('abcdefghijklmnopqrstvvwxyz');candidates=obj.questions.filter(function(que){return que.answers.some(function(ans){return ans[0]===letter;});});//Need at least 5 ques\nif(candidates.length>=5){done=true;}}candidates.forEach(function(candidate){//Filter answer/answers that start with letter\ncandidate.answers=candidate.answers.filter(function(ans){return ans[0]===letter;});});var ques=getRandomSubarray(candidates,10);//Random sample; if candidates.length<10, return a shuffled candidates-array\n//Only return max 10 ques to save memory; \n//since after 4 corrects, 5 skips are allowed, so the 10th ques must be answered\nreturn{letter:letter,ques:ques};//returns an object with 2 properties\n}// let q = makeNewQuestions(); //q has two properties: .letter and .ques= five or more categories+answers\n// console.log(q.letter);\n// console.log(q.ques);\n//>>>Below is for testing in the browser (play with text-only)<<<\n// function game() {\n//     let playing = true;\n//     while (playing === true) {\n//         let quesObj = makeNewQuestions(quesJSON);\n//         let letter = quesObj.letter; //A random letter\n//         let ques = quesObj.ques; //5 more more question-sets (categories+answers)\n//         let tally = 0; // If incorporating with xstate, use this as context.tally...?\n//         if (tally === 0) {\n//             alert(`Your letter is ${letter.toUpperCase()}...`);\n//         }\n//         while (tally < 5) {\n//             let que = ques[ques.length - 1]; //start from the last \n//             let cat = que.category;\n//             let answers = que.answers;\n//             let userInput = prompt(`Name ${cat}...`);\n//             let reply = userInput.toLowerCase();\n//             if (answers.includes(reply)) {\n//                 alert(\"Correct!\");\n//                 tally += 1;\n//                 ques.pop(); //remove the last\n//             }\n//             else if (reply === 'hint') {\n//                 let anAns = randomChoice(answers);\n//                 //hint 3 letters\n//                 if (anAns.length >= 3) {\n//                     let hint = anAns.slice(0, 3); //first 3 letters\n//                     let rest = '-'.repeat(anAns.slice(3).length);\n//                     alert(hint + rest);\n//                 }\n//                 //in case word is too short>>hint only 1 letter\n//                 else {\n//                     let hint = anAns.slice(0); //first letter\n//                     let rest = '-'.repeat(anAns.slice(1).length);\n//                     alert(hint + rest);\n//                 }\n//             }\n//             else {\n//                 alert('Try again!');\n//             }\n//         }\n//         if (tally >= 5) {\n//             let reply = prompt('Well done! Play again?');\n//             let yesReplies = ['yes', 'okay', 'sure', 'ok'];\n//             if (yesReplies.includes(reply.toLowerCase())) {\n//                 tally = 0;\n//             }\n//             else {\n//                 alert('Ok bye!');\n//                 playing = false;\n//             }\n//         }\n//     }\n// }\n// game()\n// console.log(eligibleQues('z').length)\n// CONCATENATED MODULE: ./src/dmGame.ts\n//Instantiate a new obj for each new round of game\nvar quesJSON=__webpack_require__(113);//Source of game questions; require() only works on server\n// let qs=makeNewQuestions(quesJSON)\n// console.log(qs.letter)\n// console.log(qs.ques)\n//Using \"Natural\" NLP library\nvar natural=__webpack_require__(114),nounInflector=new natural.NounInflector();// let singular = nounInflector.singularize('those tomatoes');\n// console.log(singular); //>>those tomato\n//Add context.skips, context.hintsGiven & guard states??\nvar clearRecResult=Object(actions[\"b\" /* assign */])(function(context){return{recResult:''};});var clearTTSAgenda=Object(actions[\"b\" /* assign */])(function(context){return{ttsAgenda:''};});var resetTally=Object(actions[\"b\" /* assign */])(function(context){return{tally:0};});var clearLetter=Object(actions[\"b\" /* assign */])(function(context){return{letter:undefined};});var confettiOn=Object(actions[\"b\" /* assign */])(function(context){return{confettiSwitch:true};});var confettiOff=Object(actions[\"b\" /* assign */])(function(context){return{confettiSwitch:false};});var gameOn=Object(actions[\"b\" /* assign */])(function(context){return{playingNow:true};});var gameOff=Object(actions[\"b\" /* assign */])(function(context){return{playingNow:false};});//Initiate a questions object & assign values to context.letter/questions/tally\nvar newGameRound=Object(actions[\"b\" /* assign */])(function(context){var qs=makeNewQuestions(quesJSON);console.log(\"Last round:\".concat(context.lastLetter));console.log(qs.ques);return{letter:qs.letter,questions:qs.ques,tally:0,skipped:0,hinted:0,confettiSwitch:false};});//After chosen a letter and before going saying it, remember it for referece of next game round\nvar rememberLetter=Object(actions[\"b\" /* assign */])(function(context){return{lastLetter:context.letter};});// const remember3Letters: Action<SDSContext, SDSEvent> = assign((context) => { \n//     let last3Letters= context.lastLetters? context.lastLetters : []\n//     last3Letters.push(context.letter)\n//     if(last3Letters.length>3){\n//         last3Letters.shift()\n//     }\n//     return { lastLetters: last3Letters} \n// })\n//Say the current random letter and a 'spelling/phonetic' alphabet\nfunction letterNow(context){var alphabet={'a':'Adam','b':'Bella','c':'Cindy','d':'Daniel','e':'Emma','f':'Frida','g':'Gabriel','h':'Hannah','i':'Ida','j':'Jennifer','k':'Kevin','l':'Laura','m':'Michael','n':'Nicole','o':'Oscar','p':'Paula','q':'Quebec','r':'Rachel','s':'Sophia','t':'Tina','u':'unique','v':'Victoria','w':'William','x':'x-ray','y':'Yasmin','z':'Zara'};var letter=context.letter;return\"Your letter is \\\"\".concat(letter.toUpperCase(),\"\\\" for \\\"\").concat(alphabet[letter],\"\\\". \");}function questionNow(context){var category=context.questions[0].category;//the question at front of array\nreturn\"Name \".concat(category,\". \");}function giveHint(context){var answers=context.questions[0].answers;//answers to the question at front of array\nvar anAns=randomChoice(answers);if(anAns.length>=3){var hint=anAns.slice(0,3).toUpperCase();//first 3 letters\nreturn\"Spelled with \".concat(hint[0],\", \").concat(hint[1],\", \").concat(hint[2],\".\");}//in case word is too short>>hint only 2 letters\nelse{var _hint=anAns.slice(0,2).toUpperCase();//first 2 letters\nreturn\"Spelled with \".concat(_hint[0],\", \").concat(_hint[1],\".\");}}//Partial match of user input, as long as input mentions an answer\nfunction answerMatches(input,context){var reply=input.toLowerCase();//convert to lowercase\nvar replySing=nounInflector.singularize(reply);//convert to singular form\nvar answers=context.questions[0].answers;//answers to the question at front of array\n//True if reply--either original or singularised--mentions an answer \n//(eg, 'the Netherlands' matches 'netherlands'; 'these strawberries' matches 'strawberry')\nreturn exists(reply,answers)||exists(replySing,answers);}function say(text){return Object(actions[\"k\" /* send */])(function(_context){return{type:\"SPEAK\",value:text};});}function sharedRecognitions(){return[{target:'stop',cond:function cond(context){return sayKeyword(context.recResult)==='stop';}},{target:'restart',cond:function cond(context){return sayKeyword(context.recResult)==='restart';}},//for testing \n{target:'winning',cond:function cond(context){return sayKeyword(context.recResult)==='shortcut';}},{target:\".nomatch\"}];}function promptAndAsk(promptEvent){return{initial:'prompt',states:{prompt:{entry:promptEvent,on:{ENDSPEECH:'ask'}},ask:{entry:Object(actions[\"k\" /* send */])('LISTEN')},nomatch:{entry:[say(\"Try again\")],on:{ENDSPEECH:\"prompt\"}}}};}// Similar to python: any(keyword in input for keyword in keywords)\nfunction exists(input,keywords){var existence=keywords.some(function(keyword){return input.includes(keyword);});return existence;}//Replace this with grammar parser?\nfunction sayKeyword(reply){var yes=[\"yes\",\"of course\",\"sure\",\"absolutely\",\"yeah\",\"yep\",\"okay\",\"ok\"];var no=[\"no\",\"nope\",\"no thanks\",\"nah\"];var pass=[\"skip\",\"pass\",\"next\"];var hint=[\"hint\",\"clue\",\"help\"];var whatletter=['letter','repeat'];var stop=['stop','end the game','shut down'];var restart=['restart','start again','reboot'];var shortcut=['short cut','shortcut'];//for testing\nreply=reply.toLowerCase();if(exists(reply,yes)){return'yes';}if(exists(reply,no)){return'no';}if(exists(reply,pass)){return'pass';}if(exists(reply,hint)){return'hint';}if(exists(reply,whatletter)){return'whatletter';}if(exists(reply,stop)){return'stop';}if(exists(reply,restart)){return'restart';}if(exists(reply,shortcut)){return'shortcut';}//for testing\n}var dmMachine={initial:'init',states:{init:{on:{CLICK:'start'}},stop:{entry:say(\"Ok bye!\"),on:{ENDSPEECH:{actions:[resetTally,clearLetter,clearTTSAgenda,clearRecResult,confettiOff,gameOff],target:\"init\"}}},//Start/restart new game: initiate new questions-object & reset tally counter\nstart:{entry:say(\"Starting the game \"),on:{ENDSPEECH:{target:\"chooseNewLetter\"}}},restart:{entry:say(\"Ok, starting over\"),on:{ENDSPEECH:{target:\"chooseNewLetter\"}}},chooseNewLetter:{always:[{actions:[newGameRound,clearTTSAgenda,clearRecResult],target:\"checkLastLetter\"}]},//After choosing letter, comparing to last letter game so that the new letter is not repeated\ncheckLastLetter:{always:[//if chosen letter is the same as last ones >> choose again\n{cond:function cond(context){return!!context.lastLetter&&context.letter===context.lastLetter;},target:'chooseNewLetter'},//chosen letter is different from last 3 letters >> remember it & resume game\n{actions:[rememberLetter,gameOn],target:'sayletter'}]},//Starting the game for real from this state\n//Say the letter\nsayletter:{entry:Object(actions[\"k\" /* send */])(function(context){return{type:\"SPEAK\",value:letterNow(context)};}),on:{ENDSPEECH:'askQues'}},//Ask 5 (or more if skipping) questions \naskQues:Object(objectSpread2[\"a\" /* default */])({on:{RECOGNISED:[// ? Clear recResult after recognition or not...?\n// If answer matches answers, tally+=1, shift question[0]\n{cond:function cond(context){return answerMatches(context.recResult,context);},actions:Object(actions[\"b\" /* assign */])(function(context){context.questions.shift();return{tally:context.tally+1};}),target:\"checkscore\"},//If pass, move the question to the last (unshift & push)\n{cond:function cond(context){return sayKeyword(context.recResult)==='pass';},target:\"skip\"},//Hint 3 or 2 letters\n{cond:function cond(context){return sayKeyword(context.recResult)==='hint';},target:\"hint\"},//Repeat letter\n{cond:function cond(context){return sayKeyword(context.recResult)==='whatletter';},target:\"sayletter\"}].concat(Object(toConsumableArray[\"a\" /* default */])(sharedRecognitions()))}},promptAndAsk(Object(actions[\"k\" /* send */])(function(context){return{type:\"SPEAK\",value:questionNow(context)};}))),skip:{initial:'checkSkipped',states:{checkSkipped:{always:[{target:'letSkip',cond:function cond(context){return context.skipped<5;}},{target:'maxSkipped',cond:function cond(context){return context.skipped>=5;}}]},//move the question to the last (unshift & push); context.skipped++\nletSkip:{entry:Object(actions[\"b\" /* assign */])(function(context){var skipped=context.questions.shift();context.questions.push(skipped);console.log(\"Skipped so far: \".concat(context.skipped+1,\" \"));console.log(context.questions);return{skipped:context.skipped+1};}),always:'#checkscore'},maxSkipped:{entry:say(\"Oops, you've skipped for too many times!\"),on:{ENDSPEECH:{target:'#checkscore'}}}}},hint:{initial:'checkHinted',states:{checkHinted:{always:[{target:'giveHint',cond:function cond(context){return context.hinted<5;}},{target:'maxHinted',cond:function cond(context){return context.hinted>=5;}}]},//Hint 3 or 2 letters or a random answer; context.hinted++\ngiveHint:{entry:[Object(actions[\"k\" /* send */])(function(context){return{type:\"SPEAK\",value:giveHint(context)};}),Object(actions[\"b\" /* assign */])(function(context){console.log(\"Hinted so far: \".concat(context.hinted+1,\" \"));return{hinted:context.hinted+1};})],always:'#checkscore'// use 'on endspeech...' if we want the question being said again\n},maxHinted:{entry:say(\"Oops, you've asked for too many hints!\"),on:{ENDSPEECH:{target:'#checkscore'}}}}},checkscore:{id:\"checkscore\",always:[//Less than 5 correct\n{target:'askQues',cond:function cond(context){return context.tally<5;}},//5 correct\n{target:'winning',cond:function cond(context){return context.tally>=5;}}]},//? reset/clear tally here or not...? \nwinning:{entry:[say(\"Winner winner chicken dinner\"),confettiOn,clearTTSAgenda],on:{ENDSPEECH:{target:'playagain'}}},playagain:Object(objectSpread2[\"a\" /* default */])({entry:[clearRecResult,confettiOff,resetTally,clearLetter,gameOff],on:{RECOGNISED:[//Play again? restart:stop\n{cond:function cond(context){return sayKeyword(context.recResult)==='yes';},target:\"restart\"},{cond:function cond(context){return sayKeyword(context.recResult)==='no';},target:\"stop\"}].concat(Object(toConsumableArray[\"a\" /* default */])(sharedRecognitions()))}},promptAndAsk(say('Want to play again?')))}};\n// EXTERNAL MODULE: ./node_modules/react-dom-confetti/lib/confetti.js\nvar confetti = __webpack_require__(102);\nvar confetti_default = /*#__PURE__*/__webpack_require__.n(confetti);\n\n// EXTERNAL MODULE: ./node_modules/react-text-loop/es/index.js + 2 modules\nvar es = __webpack_require__(105);\n\n// EXTERNAL MODULE: ./node_modules/windups/dist/windups.esm.js + 1 modules\nvar windups_esm = __webpack_require__(46);\n\n// EXTERNAL MODULE: ./node_modules/@tippyjs/react/dist/tippy-react.esm.js + 53 modules\nvar tippy_react_esm = __webpack_require__(60);\n\n// EXTERNAL MODULE: ./node_modules/react-device-detect/main.js\nvar main = __webpack_require__(56);\n\n// EXTERNAL MODULE: ./node_modules/react-speech-kit/dist/index.js\nvar dist = __webpack_require__(57);\n\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(3);\n\n// CONCATENATED MODULE: ./src/App.tsx\n//XState library & Game DM-machine\n//Animation effects\n// import HeadShake from 'react-reveal/HeadShake';\nvar HeadShake=__webpack_require__(274);//?import shows error in TS, so use require() here instead\nvar RubberBand=__webpack_require__(278);// import 'tippy.js/dist/tippy.css'; \n//Browser detection \n// import { inspect } from \"@xstate/inspect\";\n// inspect({ url:\"https://statecharts.io/inspect\", iframe: false });\n// State machines: ASR-TTS (voice interface) & dmGame\nvar machine=Object(Machine[\"a\" /* Machine */])({id:'root',type:'parallel',states:{dm:Object(objectSpread2[\"a\" /* default */])({},dmMachine),asrtts:{initial:'idle',states:{idle:{on:{LISTEN:'recognising',SPEAK:{target:'speaking',actions:Object(actions[\"b\" /* assign */])(function(_context,event){return{ttsAgenda:event.value};})}}},recognising:{initial:'progress',entry:'recStart',exit:'recStop',on:{ASRRESULT:{actions:['recLogResult',Object(actions[\"b\" /* assign */])(function(_context,event){return{recResult:event.value};})],target:'.match'},RECOGNISED:'idle'},states:{progress:{},match:{entry:Object(actions[\"k\" /* send */])('RECOGNISED')}}},speaking:{entry:'ttsStart',on:{ENDSPEECH:'idle'}}}}}},{actions:{recLogResult:function recLogResult(context){/* context.recResult = event.recResult; */console.log('<< ASR: '+context.recResult);},test:function test(){console.log('test');},logIntent:function logIntent(context){/* context.nluData = event.data */console.log('<< NLU intent: '+context.nluData.intent.name);}}});//COMPONENT: Big button in the middle, with changing texts\nvar App_ReactiveButton=function ReactiveButton(props){var playingNow=props.state.context.playingNow;var ttsAgenda=props.state.context.ttsAgenda;var maxHinted=props.state.context.hinted>=5;var maxSkipped=props.state.context.skipped>=5;var promptInGame;if(maxSkipped&&maxHinted){promptInGame='...or say Restart, Stop';}else if(maxSkipped&&!maxHinted){promptInGame='...or say Clue, Restart, Stop';}else if(!maxSkipped&&maxHinted){promptInGame='...or say Skip, Restart, Stop';}else{promptInGame='...or say Clue, Skip, Restart, Stop';}//default\nvar speakingText=playingNow?'😼 '+ttsAgenda:'😻 '+ttsAgenda;var promptMsg=playingNow?promptInGame:\"...say Yes or No\";switch(true){case props.state.matches({asrtts:'recognising'}):return/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"button\",Object(objectSpread2[\"a\" /* default */])(Object(objectSpread2[\"a\" /* default */])({type:\"button\",className:\"glow-on-hover\",style:{animation:\"glowing 20s linear\"}},props),{},{children:/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(es[\"a\" /* default */],{mask:true,interval:5000,springConfig:{stiffness:170,damping:8},children:[/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"div\",{children:/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"code\",{children:[\" \",speakingText,\" \"]})}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"div\",{children:/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"code\",{children:[\" \",promptMsg,\" \"]})})]})}));case props.state.matches({asrtts:'speaking'}):var _useWindupString=Object(windups_esm[\"a\" /* useWindupString */])(speakingText),_useWindupString2=Object(slicedToArray[\"a\" /* default */])(_useWindupString,1),spokentext=_useWindupString2[0];// adds char-by-char animation\nreturn/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"button\",Object(objectSpread2[\"a\" /* default */])(Object(objectSpread2[\"a\" /* default */])({type:\"button\",className:\"glow-on-hover\",style:{animation:\"bordering 1s infinite\"}},props),{},{children:/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"code\",{children:spokentext})}));default:return/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"button\",Object(objectSpread2[\"a\" /* default */])(Object(objectSpread2[\"a\" /* default */])({type:\"button\",className:\"glow-on-hover\"},props),{},{children:/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(HeadShake,{children:\"Play game!\"})}));}};// //MAIN CONTAINER: React webpage elements & VOI\nfunction App(){//Voice interface events (& console logs)\n//Text to speech:\nvar _useSpeechSynthesis=Object(dist[\"useSpeechSynthesis\"])({onEnd:function onEnd(){send('ENDSPEECH');}}),speak=_useSpeechSynthesis.speak,cancel=_useSpeechSynthesis.cancel,speaking=_useSpeechSynthesis.speaking,voices=_useSpeechSynthesis.voices;//Speech to text\nvar _useSpeechRecognition=Object(dist[\"useSpeechRecognition\"])({onResult:function onResult(result){send({type:\"ASRRESULT\",value:result});}}),listen=_useSpeechRecognition.listen,listening=_useSpeechRecognition.listening,stop=_useSpeechRecognition.stop;//List the supported synthesis-voices on the browswer:\nvar _React$useState=react[\"useState\"](null),_React$useState2=Object(slicedToArray[\"a\" /* default */])(_React$useState,2),voiceIndex=_React$useState2[0],setVoiceIndex=_React$useState2[1];// console.log(voices) //An array of available voices/languages ... varies depending on the computer/browser\n// const voice =  voices[5] || null; // voices[idx]? voices[idx] : null *(browser default voice)\nvar _useMachine=Object(useMachine[\"b\" /* useMachine */])(machine,{devTools:true,actions:{recStart:Object(useMachine[\"a\" /* asEffect */])(function(){console.log('Ready to receive a voice input.');listen({interimResults:false,continuous:true,lang:'en-SG'//Config recognition language here. //list of langs https://cloud.google.com/speech-to-text/docs/languages\n});}),recStop:Object(useMachine[\"a\" /* asEffect */])(function(){console.log('Recognition stopped.');stop();}),ttsStart:Object(useMachine[\"a\" /* asEffect */])(function(context,effect){console.log('Speaking...');speak({text:context.ttsAgenda/*, voice*/ //Config which language/voice to speak in\n});}),ttsCancel:Object(useMachine[\"a\" /* asEffect */])(function(context,effect){console.log('TTS STOP...');cancel();}),speak:Object(useMachine[\"a\" /* asEffect */])(function(context){console.log('Speaking...');speak({text:context.ttsAgenda});})}}),_useMachine2=Object(slicedToArray[\"a\" /* default */])(_useMachine,3),current=_useMachine2[0],send=_useMachine2[1],service=_useMachine2[2];// dmMachine-context / React-states, to display on webpage or turn components on/off\nvar confettiSwitch=current.context.confettiSwitch;//triggers confetti when true\nvar playingNow=current.context.playingNow;var tally=current.context.tally;var letter=current.context.letter;// Config for confetti \nvar confettiConfig={angle:90,spread:360,startVelocity:80,elementCount:400,dragFriction:0.12,duration:7500,stagger:1,width:\"7px\",height:\"7px\",perspective:\"210px\",colors:[\"#a864fd\",\"#29cdff\",\"#78ff44\",\"#ff718d\",\"#fdff6a\"]};var clicked=0;var handleClick=function handleClick(){if(clicked===0){console.log(\"clicked\");send('CLICK');clicked=1;}else{console.log(\"unclicked\");send('UNCLICK');clicked=0;}};//>>>JSX codes & various components\n// Alt page: Show if not using Chrome or Edge\nif(!main[\"isChrome\"]&&!main[\"isEdge\"])return/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"div\",{className:\"OtherBrowsers\",children:/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(HeadShake,{children:/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"div\",{className:\"Box\",children:[/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"h1\",{children:\"Speech Recognition Not Supported :( \"}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"p\",{children:\"I won't be able to hear you on this browser.\"}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"p\",{children:\"Please try Chrome or Edge. :-)\"})]})})});//Show if using Chrome or Edge\nreturn/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"div\",{className:\"main\",children:[/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"div\",{className:\"PopoverButtons\",children:[\" \",/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(App_PopoverButtons,{}),\" \"]}),/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"div\",{className:\"App\",children:[/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"div\",{className:\"LetterAndHeart\",children:[/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"div\",{className:\"GlowLetter\",children:[\" \",/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(App_YourLetter,{letter:letter}),\" \"]}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"div\",{className:\"Heart\",children:playingNow&&/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(App_HeartBar,{currentScore:tally,maxScore:5,size:50})})]}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(confetti_default.a,{active:confettiSwitch,config:confettiConfig}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(RubberBand,{children:/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"div\",{className:\"Button\",children:/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(App_ReactiveButton,{state:current,onClick:function onClick(){handleClick();}})})}),/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"div\",{className:\"Subtitles\",children:[/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(App_YourSubtitles,{state:current}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(App_UserSubtitles,{state:current})]})]})]});};//COMPONENT: Displaying input of voice interface (ie, recResult)\nvar App_YourSubtitles=function YourSubtitles(props){// Player's speech-- only displays when recResult!=undefined \nvar tally=props.state.context.tally;var recResult=props.state.context.recResult;//Prefix face changes based on score of the game\nvar emojis=['😗','🙂','😀','😄','😁','🥳'];var emoji=tally?emojis[tally]:'🙃';var subtitlesText;if(props.state.matches({asrtts:'recognising'})){subtitlesText=emoji+' Listening...';}else if(recResult&&recResult!=''){subtitlesText=emoji+' '+recResult;}else{subtitlesText='';}var _useWindupString3=Object(windups_esm[\"a\" /* useWindupString */])(subtitlesText),_useWindupString4=Object(slicedToArray[\"a\" /* default */])(_useWindupString3,1),textAnimated=_useWindupString4[0];return/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"div\",{children:/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"span\",{children:[\" \",textAnimated,\" \"]})});};//This one doesn't show on Github pages...? but can run locally and use for presentation demo\nvar App_UserSubtitles=function UserSubtitles(props){var tally=props.state.context.tally;var recResult=props.state.context.recResult;// const recResult='testing text'\nvar emojis=['😗','🙂','😀','😄','😁','🥳'];var emoji=tally?emojis[tally]:'🙃';// const defaultText = props.state.matches({ asrtts: 'recognising' })? 'Listening...' : ''\n// const subtitlesText = recResult? recResult : defaultText\nvar subtitlesText;if(props.state.matches({asrtts:'recognising'})){subtitlesText='Listening...';}else if(recResult&&recResult!=''){subtitlesText=recResult;}else{subtitlesText='';}var _useWindupString5=Object(windups_esm[\"a\" /* useWindupString */])(subtitlesText),_useWindupString6=Object(slicedToArray[\"a\" /* default */])(_useWindupString5,1),textAnimated=_useWindupString6[0];var showing=subtitlesText!='';return/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"div\",{id:\"emoji-and-bubble\",children:[showing&&/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"span\",{className:\"speech-bubble\",children:[\" \",textAnimated,\" \"]}),showing&&/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"div\",{id:\"emoji\",children:[\" \",emoji,\" \"]})]});};//COMPONENT: Capital letter of the game\nvar App_YourLetter=function YourLetter(props){// Shows the letter of the current game round \nvar letter=props.letter;return/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"div\",{children:letter?letter.toUpperCase():''});};//COMPONENT: Grey heart to be filled with pink, based on percentage\nvar App_HeartBar=function HeartBar(props){var maxScore=props.maxScore;var currentScore=props.currentScore>0?props.currentScore:'';var size=props.size;var percentage=currentScore?100*currentScore/maxScore:0;//add other props? eg, showScore={true/false}; showPercentage={true/false}\nvar y=24-24*percentage/100;//Height of the pink filling shape\n//Below: Heart-shaped vector graphs & text inside\nreturn/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"div\",{className:\"ProgressBarH\",children:/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"svg\",{xmlns:\"http://www.w3.org/2000/svg\",width:size,height:size,viewBox:\"0 0 24 24\",children:[/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"defs\",{children:[/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"clipPath\",{id:\"cut-off-bottom\",children:/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"rect\",{x:\"0\",y:y,width:\"24\",height:\"24\"})}),/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"linearGradient\",{id:\"grey-grad\",x1:\"0%\",y1:\"0%\",x2:\"0%\",y2:\"100%\",children:[/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"stop\",{offset:\"0%\",stopColor:\"#cfccce\",stopOpacity:\"0.75\"}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"stop\",{offset:\"60%\",stopColor:\"#bab8ba\",stopOpacity:\"0.85\"}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"stop\",{offset:\"100%\",stopColor:\"#949293\",stopOpacity:\"0.9\"})]}),/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"linearGradient\",{id:\"pink-grad\",x1:\"0%\",y1:\"0%\",x2:\"0%\",y2:\"100%\",children:[/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"stop\",{offset:\"0%\",stopColor:\"#ff33a7\",stopOpacity:\"0.95\"}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"stop\",{offset:\"60%\",stopColor:\"#ff2667\",stopOpacity:\"0.95\"}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"stop\",{offset:\"100%\",stopColor:\"rgb(255,0,0)\",stopOpacity:\"0.95\"})]})]}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"path\",{style:{fill:\"url(#grey-grad)\"},d:\"M12 4.248c-3.148-5.402-12-3.825-12 2.944 0 4.661 5.571 9.427 12 15.808 6.43-6.381 12-11.147 12-15.808 0-6.792-8.875-8.306-12-2.944z\"}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"path\",{style:{fill:\"url(#pink-grad)\"},d:\"M12 4.248c-3.148-5.402-12-3.825-12 2.944 0 4.661 5.571 9.427 12 15.808 6.43-6.381 12-11.147 12-15.808 0-6.792-8.875-8.306-12-2.944z\",clipPath:\"url(#cut-off-bottom)\"}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"text\",{textAnchor:\"middle\",x:\"12\",y:\"15\",color:\"white\",fontSize:\"11\",fill:\"white\",opacity:\"0.45\",style:{animation:\"wiggle 2.5s ease-out infinite\",animationDelay:'0.9s'},children:currentScore})]})});};var App_PopoverButtons=function PopoverButtons(){return/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"div\",{children:[/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(tippy_react_esm[\"a\" /* default */],{content:/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"div\",{children:[/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"h4\",{children:\"Having troubles playing? :\"}),/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"p\",{children:[\"Due to limitations of the voice recogniser, these might help... \",/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"br\",{}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"br\",{}),\"-Speak in a North American accent.\",/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"br\",{}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"br\",{}),\"-After the cat finishes talking, wait for a sec for it to start listening to you (indicated by the \",/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"strong\",{children:\"flashing button\"}),\").\"]})]}),className:\"popover-box\",children:/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"button\",{className:\"round-button\",children:\"?\"})}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(tippy_react_esm[\"a\" /* default */],{content:/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"div\",{children:[/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"h4\",{children:\"ABC Game\"}),/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"p\",{children:[\"Designed & made by: \",/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"br\",{}),\"Liao Hsien-hao Calvin\",/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"br\",{}),\"Eirini Tsakiri \",/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"br\",{}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"br\",{}),\"for the project of \",/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"strong\",{children:\"LT2216 Dialogue Systems\"}),\" at G\\xF6teborgs universitet.\",/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"br\",{}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"br\",{}),\"github.com/chickenbror/ABCgame\"]})]}),className:\"popover-box\",children:/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"button\",{className:\"round-button\",children:\"i\"})})]});};\n// CONCATENATED MODULE: ./src/index.tsx\n//Components\n//React dom components rendering\nvar rootElement=document.getElementById(\"root\");react_dom[\"render\"](/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(App,{}),rootElement);\n\n/***/ })\n\n},[[290,1,2]]]);","inputSourceMap":{"version":3,"sources":["/Users/irene/Desktop/ABCgame/node_modules/mini-css-extract-plugin/dist/loader.js??ref--5-oneOf-6-0!/Users/irene/Desktop/ABCgame/node_modules/css-loader/dist/cjs.js??ref--5-oneOf-6-1!/Users/irene/Desktop/ABCgame/node_modules/postcss-loader/src/index.js??postcss!/Users/irene/Desktop/ABCgame/node_modules/resolve-url-loader/index.js??ref--5-oneOf-6-3!/Users/irene/Desktop/ABCgame/node_modules/sass-loader/dist/cjs.js??ref--5-oneOf-6-4!/Users/irene/Desktop/ABCgame/src/styles.scss","/Users/irene/Desktop/ABCgame/src/game_codes/game.js","/Users/irene/Desktop/ABCgame/src/dmGame.ts","/Users/irene/Desktop/ABCgame/src/App.tsx","/Users/irene/Desktop/ABCgame/src/index.tsx"],"names":["getRandomSubarray","arr","size","shuffled","slice","i","length","temp","index","Math","floor","random","randomChoice","items","choice","makeNewQuestions","obj","letter","candidates","done","questions","filter","que","answers","some","ans","forEach","candidate","ques","quesJSON","require","natural","nounInflector","NounInflector","clearRecResult","assign","context","recResult","clearTTSAgenda","ttsAgenda","resetTally","tally","clearLetter","undefined","confettiOn","confettiSwitch","confettiOff","gameOn","playingNow","gameOff","newGameRound","qs","console","log","lastLetter","skipped","hinted","rememberLetter","letterNow","alphabet","toUpperCase","questionNow","category","giveHint","anAns","hint","answerMatches","input","reply","toLowerCase","replySing","singularize","exists","say","text","send","_context","type","value","sharedRecognitions","target","cond","sayKeyword","promptAndAsk","promptEvent","initial","states","prompt","entry","on","ENDSPEECH","ask","nomatch","keywords","existence","keyword","includes","yes","no","pass","whatletter","stop","restart","shortcut","dmMachine","init","CLICK","actions","start","chooseNewLetter","always","checkLastLetter","sayletter","askQues","RECOGNISED","shift","skip","checkSkipped","letSkip","push","maxSkipped","checkHinted","maxHinted","checkscore","id","winning","playagain","HeadShake","RubberBand","machine","Machine","dm","asrtts","idle","LISTEN","SPEAK","event","recognising","exit","ASRRESULT","progress","match","speaking","recLogResult","test","logIntent","nluData","intent","name","ReactiveButton","props","state","promptInGame","speakingText","promptMsg","matches","animation","stiffness","damping","useWindupString","spokentext","App","useSpeechSynthesis","onEnd","speak","cancel","voices","useSpeechRecognition","onResult","result","listen","listening","React","voiceIndex","setVoiceIndex","useMachine","devTools","recStart","asEffect","interimResults","continuous","lang","recStop","ttsStart","effect","ttsCancel","current","service","confettiConfig","angle","spread","startVelocity","elementCount","dragFriction","duration","stagger","width","height","perspective","colors","clicked","handleClick","isChrome","isEdge","YourSubtitles","emojis","emoji","subtitlesText","textAnimated","UserSubtitles","showing","YourLetter","HeartBar","maxScore","currentScore","percentage","y","fill","animationDelay","PopoverButtons","rootElement","document","getElementById","ReactDOM"],"mappings":"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","file":"x","sourcesContent":["// extracted by mini-css-extract-plugin","\"use strict\";\n\n//A JSON object. Can be read from an external .json file\n// const quesJSON = require('./questions.json') //only works on server-end eg Node.js\n\n\n// function shuffleArray(array) {\n//     let curId = array.length;\n//     // There remain elements to shuffle\n//     while (0 !== curId) {\n//         // Pick a remaining element\n//         let randId = Math.floor(Math.random() * curId);\n//         curId -= 1;\n//         // Swap it with the current element.\n//         let tmp = array[curId];\n//         array[curId] = array[randId];\n//         array[randId] = tmp;\n//     }\n//     return array;\n// }\n\nfunction getRandomSubarray(arr, size) {\n    var shuffled = arr.slice(0), i = arr.length, temp, index;\n    while (i--) {\n        index = Math.floor((i + 1) * Math.random());\n        temp = shuffled[index];\n        shuffled[index] = shuffled[i];\n        shuffled[i] = temp;\n    }\n    return shuffled.slice(0, size);\n}\n\nexport function randomChoice(items) {\n    let choice = items[items.length * Math.random() | 0];\n    return choice;\n}\n\n//Instancicates an object with .letter (a random letter) & .ques (array of 5+ questions objects); \n//each question object has .category & .answers (array of things in that category and begins with the letter)\nexport function makeNewQuestions( obj ) {\n    let letter;\n    let candidates;\n    let done = false;\n    while (done === false) {\n        letter = randomChoice('abcdefghijklmnopqrstvvwxyz');\n        candidates = obj.questions.filter( que => \n            que.answers.some(\n                ans => ans[0]===letter ) );\n        //Need at least 5 ques\n        if (candidates.length >= 5) {\n            done = true;\n        }\n    }\n    candidates.forEach(candidate => {\n        //Filter answer/answers that start with letter\n        candidate.answers = candidate.answers.filter( ans => ans[0]===letter); \n    });\n    let ques = getRandomSubarray(candidates, 10); //Random sample; if candidates.length<10, return a shuffled candidates-array\n    //Only return max 10 ques to save memory; \n    //since after 4 corrects, 5 skips are allowed, so the 10th ques must be answered\n    return {letter, ques}; //returns an object with 2 properties\n}\n\n\n\n\n// let q = makeNewQuestions(); //q has two properties: .letter and .ques= five or more categories+answers\n// console.log(q.letter);\n// console.log(q.ques);\n\n\n\n//>>>Below is for testing in the browser (play with text-only)<<<\n\n// function game() {\n//     let playing = true;\n//     while (playing === true) {\n//         let quesObj = makeNewQuestions(quesJSON);\n//         let letter = quesObj.letter; //A random letter\n//         let ques = quesObj.ques; //5 more more question-sets (categories+answers)\n//         let tally = 0; // If incorporating with xstate, use this as context.tally...?\n//         if (tally === 0) {\n//             alert(`Your letter is ${letter.toUpperCase()}...`);\n//         }\n//         while (tally < 5) {\n//             let que = ques[ques.length - 1]; //start from the last \n//             let cat = que.category;\n//             let answers = que.answers;\n//             let userInput = prompt(`Name ${cat}...`);\n//             let reply = userInput.toLowerCase();\n//             if (answers.includes(reply)) {\n//                 alert(\"Correct!\");\n//                 tally += 1;\n//                 ques.pop(); //remove the last\n//             }\n//             else if (reply === 'hint') {\n//                 let anAns = randomChoice(answers);\n//                 //hint 3 letters\n//                 if (anAns.length >= 3) {\n//                     let hint = anAns.slice(0, 3); //first 3 letters\n//                     let rest = '-'.repeat(anAns.slice(3).length);\n//                     alert(hint + rest);\n//                 }\n//                 //in case word is too short>>hint only 1 letter\n//                 else {\n//                     let hint = anAns.slice(0); //first letter\n//                     let rest = '-'.repeat(anAns.slice(1).length);\n//                     alert(hint + rest);\n//                 }\n//             }\n//             else {\n//                 alert('Try again!');\n//             }\n//         }\n//         if (tally >= 5) {\n//             let reply = prompt('Well done! Play again?');\n//             let yesReplies = ['yes', 'okay', 'sure', 'ok'];\n//             if (yesReplies.includes(reply.toLowerCase())) {\n//                 tally = 0;\n//             }\n//             else {\n//                 alert('Ok bye!');\n//                 playing = false;\n//             }\n//         }\n//     }\n// }\n\n// game()\n\n// console.log(eligibleQues('z').length)","import { MachineConfig, actions, Action, assign, send } from \"xstate\";\n\n//Instantiate a new obj for each new round of game\nimport { makeNewQuestions, randomChoice } from './game_codes/game'\nconst quesJSON = require('./game_codes/questions.json') //Source of game questions; require() only works on server\n// let qs=makeNewQuestions(quesJSON)\n// console.log(qs.letter)\n// console.log(qs.ques)\n\n//Using \"Natural\" NLP library\nconst natural = require('natural'),\nnounInflector = new natural.NounInflector();\n// let singular = nounInflector.singularize('those tomatoes');\n// console.log(singular); //>>those tomato\n\n\n\n//Add context.skips, context.hintsGiven & guard states??\n\n\nconst clearRecResult: Action<SDSContext, SDSEvent> = assign((context) => { return { recResult:''} })\nconst clearTTSAgenda: Action<SDSContext, SDSEvent> = assign((context) => { return { ttsAgenda:''} })\nconst resetTally: Action<SDSContext, SDSEvent> = assign((context) => { return { tally:0} })\nconst clearLetter: Action<SDSContext, SDSEvent> = assign((context) => { return { letter:undefined} })\n\nconst confettiOn: Action<SDSContext, SDSEvent> = assign((context) => { return { confettiSwitch:true} })\nconst confettiOff: Action<SDSContext, SDSEvent> = assign((context) => { return { confettiSwitch:false} })\n\nconst gameOn: Action<SDSContext, SDSEvent> = assign((context) => { return { playingNow:true} })\nconst gameOff: Action<SDSContext, SDSEvent> = assign((context) => { return { playingNow:false} })\n\n//Initiate a questions object & assign values to context.letter/questions/tally\nconst newGameRound: Action<SDSContext, SDSEvent> = assign((context) => { \n    let qs=makeNewQuestions( quesJSON );\n    console.log(`Last round:${context.lastLetter}`)\n    console.log(qs.ques)\n    return { letter: qs.letter, questions: qs.ques, tally:0, skipped:0, hinted:0, confettiSwitch:false} \n})\n//After chosen a letter and before going saying it, remember it for referece of next game round\nconst rememberLetter: Action<SDSContext, SDSEvent> = assign((context) => { \n    return { lastLetter: context.letter} \n})\n// const remember3Letters: Action<SDSContext, SDSEvent> = assign((context) => { \n//     let last3Letters= context.lastLetters? context.lastLetters : []\n//     last3Letters.push(context.letter)\n//     if(last3Letters.length>3){\n//         last3Letters.shift()\n//     }\n//     return { lastLetters: last3Letters} \n// })\n\n\n//Say the current random letter and a 'spelling/phonetic' alphabet\nfunction letterNow(context:SDSContext){\n    const alphabet:any = {\n        'a':'Adam', 'b':'Bella', 'c':'Cindy', 'd':'Daniel', 'e':'Emma', 'f':'Frida', 'g':'Gabriel', 'h':'Hannah',\n        'i':'Ida', 'j':'Jennifer', 'k':'Kevin', 'l':'Laura', 'm':'Michael', 'n':'Nicole', 'o':'Oscar', 'p':'Paula',\n        'q':'Quebec', 'r':'Rachel', 's':'Sophia', 't':'Tina', 'u':'unique', 'v':'Victoria', 'w':'William', 'x':'x-ray',\n        'y':'Yasmin', 'z':'Zara'\n        }\n    let letter:string = context.letter\n    return `Your letter is \"${letter.toUpperCase()}\" for \"${alphabet[letter]}\". `\n}\n\nfunction questionNow(context:SDSContext){\n    let category = context.questions[0].category //the question at front of array\n    return `Name ${category}. `\n}\n\nfunction giveHint(context:SDSContext){\n    let answers = context.questions[0].answers //answers to the question at front of array\n    let anAns = randomChoice(answers)\n    if (anAns.length >= 3) {\n        let hint = anAns.slice(0, 3).toUpperCase() //first 3 letters\n        return `Spelled with ${hint[0]}, ${hint[1]}, ${hint[2]}.`\n    }\n    //in case word is too short>>hint only 2 letters\n    else {\n        let hint = anAns.slice(0, 2).toUpperCase() //first 2 letters\n        return `Spelled with ${hint[0]}, ${hint[1]}.`\n    }\n}\n\n//Partial match of user input, as long as input mentions an answer\nfunction answerMatches(input:string,context:SDSContext){\n    let reply = input.toLowerCase() //convert to lowercase\n    let replySing = nounInflector.singularize( reply ) //convert to singular form\n\n    let answers = context.questions[0].answers //answers to the question at front of array\n\n    //True if reply--either original or singularised--mentions an answer \n    //(eg, 'the Netherlands' matches 'netherlands'; 'these strawberries' matches 'strawberry')\n    return  (exists(reply, answers) || exists(replySing, answers)) \n}\n\n\nfunction say(text: string): Action<SDSContext, SDSEvent> {\n    return send((_context: SDSContext) => ({ type: \"SPEAK\", value: text }))\n}\n\nfunction sharedRecognitions() {\n    return [\n        { target: 'stop', cond: (context:SDSContext) => sayKeyword(context.recResult) === 'stop' },\n        { target: 'restart', cond: (context:SDSContext) => sayKeyword(context.recResult) === 'restart' },\n        //for testing \n        { target: 'winning', cond: (context:SDSContext) => sayKeyword(context.recResult) === 'shortcut' },\n        { target: \".nomatch\" }\n        ]\n}\n\nfunction promptAndAsk(promptEvent: Action<SDSContext, SDSEvent>): MachineConfig<SDSContext, any, SDSEvent> {\n    return ({\n        initial: 'prompt',\n        states: {\n            prompt: {\n                entry: promptEvent,\n                on: { ENDSPEECH: 'ask' }\n            },\n            ask: {\n                entry: send('LISTEN'),\n            },\n            nomatch: { entry: [say(\"Try again\")],  \n                       on: { ENDSPEECH: \"prompt\" } \n            },\n        }\n    })\n}\n\n\n// Similar to python: any(keyword in input for keyword in keywords)\nfunction exists(input:string, keywords:string[]){\n    let existence = keywords.some(keyword => input.includes(keyword))\n    return existence\n}\n//Replace this with grammar parser?\nfunction sayKeyword(reply: string){\n    let yes=[\"yes\", \"of course\", \"sure\", \"absolutely\", \"yeah\", \"yep\", \"okay\", \"ok\"]\n    let no=[\"no\", \"nope\", \"no thanks\", \"nah\",]\n    let pass=[\"skip\", \"pass\", \"next\",]\n    let hint=[\"hint\", \"clue\", \"help\"]\n    let whatletter=['letter','repeat']\n    let stop=['stop','end the game','shut down']\n    let restart=['restart','start again', 'reboot']\n    let shortcut=['short cut', 'shortcut'] //for testing\n\n    reply=reply.toLowerCase()\n    if(exists(reply, yes)){ return 'yes' }\n    if(exists(reply, no)){ return 'no' }\n    if(exists(reply, pass)){ return 'pass' }\n    if(exists(reply, hint)){ return 'hint' }\n    if(exists(reply, whatletter)){ return 'whatletter' }\n    if(exists(reply, stop)){ return 'stop' }\n    if(exists(reply, restart)){ return 'restart' }\n    if(exists(reply, shortcut)){ return 'shortcut' } //for testing\n}\n\n\nexport const dmMachine: MachineConfig<SDSContext, any, SDSEvent> = ({\n    initial: 'init',\n    states: {\n        init: {\n            on: {\n                CLICK: 'start'\n            }\n        },\n        stop: {\n            entry: say(\"Ok bye!\"),\n            on: { ENDSPEECH: {\n                actions: [resetTally,clearLetter,clearTTSAgenda,clearRecResult,confettiOff, gameOff],\n                target:\"init\",\n                } \n            }\n        },\n        //Start/restart new game: initiate new questions-object & reset tally counter\n        start: {\n            entry: say(\"Starting the game \"),\n            on: { ENDSPEECH: { target:\"chooseNewLetter\" } } \n        },\n        restart: {\n            entry: say(\"Ok, starting over\"),\n            on: { ENDSPEECH: {target:\"chooseNewLetter\" } } \n        },\n        chooseNewLetter :{\n            always:[\n                {actions: [newGameRound, clearTTSAgenda, clearRecResult],\n                 target: \"checkLastLetter\" }\n            ]\n        },\n\n        //After choosing letter, comparing to last letter game so that the new letter is not repeated\n        checkLastLetter: {\n            always: [\n                //if chosen letter is the same as last ones >> choose again\n                { cond: (context) => !!context.lastLetter && context.letter===context.lastLetter, \n                    target: 'chooseNewLetter', },\n\n                //chosen letter is different from last 3 letters >> remember it & resume game\n                { \n                  actions: [rememberLetter, gameOn, ],\n                  target: 'sayletter',  },\n            ]\n        },\n\n        //Starting the game for real from this state\n        //Say the letter\n        sayletter:{\n            entry: send((context)=>({ type: \"SPEAK\", value: letterNow(context) })),\n            on: {ENDSPEECH:'askQues' }\n        },\n\n        //Ask 5 (or more if skipping) questions \n        askQues: {\n            on: {\n                RECOGNISED: [\n                    \n                    // ? Clear recResult after recognition or not...?\n                    // If answer matches answers, tally+=1, shift question[0]\n                    {cond: (context:SDSContext) => answerMatches(context.recResult, context),\n                     actions: assign((context:SDSContext) => { \n                        context.questions.shift()\n                        return { tally: context.tally+1 } }),\n                     target:\"checkscore\"  },\n                    \n                    //If pass, move the question to the last (unshift & push)\n                    {cond: (context:SDSContext) => sayKeyword(context.recResult)==='pass', target:\"skip\"  },\n\n                    //Hint 3 or 2 letters\n                    {cond: (context:SDSContext) => sayKeyword(context.recResult)==='hint', target:\"hint\"},\n\n                    //Repeat letter\n                    {cond: (context:SDSContext) => sayKeyword(context.recResult)==='whatletter', target:\"sayletter\"},\n\n                    //Else    \n                    ...sharedRecognitions(),\n                    \n                ]},\n                ...promptAndAsk( send((context)=>({ type: \"SPEAK\", \n                                                    value: questionNow(context) })) )\n        },\n\n        skip: {\n            initial: 'checkSkipped',\n            states:{\n                checkSkipped:{\n                    always:[\n                        { target: 'letSkip', cond: (context) => context.skipped<5 },\n                        { target: 'maxSkipped', cond: (context) => context.skipped>=5 },\n                    ]\n                },\n                //move the question to the last (unshift & push); context.skipped++\n                letSkip:{\n                    entry:  assign((context:SDSContext) => { \n                        let skipped=context.questions.shift();\n                        context.questions.push(skipped);\n                        console.log(`Skipped so far: ${context.skipped+1} `)\n                        console.log(context.questions)\n                        return { skipped:context.skipped+1} }),\n                    always: '#checkscore'\n                },\n                maxSkipped:{\n                    entry: say(`Oops, you've skipped for too many times!`),\n                    on:{ ENDSPEECH: {target:'#checkscore'}}\n                }\n            }\n        },\n\n        hint: {\n            initial: 'checkHinted',\n            states:{\n                checkHinted:{\n                    always:[\n                        { target: 'giveHint', cond: (context) => context.hinted<5 },\n                        { target: 'maxHinted', cond: (context) => context.hinted>=5 },\n                    ]\n                },\n                //Hint 3 or 2 letters or a random answer; context.hinted++\n                giveHint:{\n                    entry: [\n                        send((context)=>({ type: \"SPEAK\", value: giveHint(context) })),\n                        assign((context:SDSContext) => {\n                            console.log(`Hinted so far: ${context.hinted+1} `);\n                            return { hinted:context.hinted+1} })\n                    ],\n                    always: '#checkscore' // use 'on endspeech...' if we want the question being said again\n                },\n                maxHinted:{\n                    entry: say(`Oops, you've asked for too many hints!`),\n                    on:{ ENDSPEECH: {target:'#checkscore'}}\n                }\n            }\n        },\n        \n        checkscore:{\n            id:\"checkscore\",\n            always: [\n                //Less than 5 correct\n                { target: 'askQues', cond: (context) => context.tally<5 },\n\n                //5 correct\n                { target: 'winning', cond: (context) => context.tally>=5 },\n            ]\n        },\n\n                    //? reset/clear tally here or not...? \n        winning: {\n            entry: [ say(\"Winner winner chicken dinner\"), confettiOn, clearTTSAgenda ], \n            on: {ENDSPEECH:{target:'playagain'}}\n        },\n        playagain: {\n            entry: [ clearRecResult, confettiOff, resetTally, clearLetter, gameOff,],\n            on: {\n                RECOGNISED: [\n                     //Play again? restart:stop\n                     {cond: (context:SDSContext) => sayKeyword(context.recResult)==='yes', target:\"restart\"},\n                     {cond: (context:SDSContext) => sayKeyword(context.recResult)==='no', target:\"stop\"},\n\n                    //Else    \n                    ...sharedRecognitions() \n                ]},\n                ...promptAndAsk( say('Want to play again?') )\n        }, \n        \n    },\n\n})","import * as React from \"react\";\n\n//XState library & Game DM-machine\nimport { Machine, assign, send, State } from \"xstate\";\nimport { useMachine, asEffect } from \"@xstate/react\";\nimport { dmMachine } from './dmGame';\n\n\n//Animation effects\nimport Confetti from 'react-dom-confetti';\nimport TextLoop from \"react-text-loop\";\nimport { useWindupString } from \"windups\";\n        // import HeadShake from 'react-reveal/HeadShake';\nconst HeadShake = require('react-reveal/HeadShake'); //?import shows error in TS, so use require() here instead\nconst RubberBand = require('react-reveal/RubberBand');\n\nimport Tippy from '@tippyjs/react';\n// import 'tippy.js/dist/tippy.css'; \n\n\n\n//Browser detection \nimport { isChrome, isEdge } from \"react-device-detect\";\n\n\n// import { inspect } from \"@xstate/inspect\";\n// inspect({ url:\"https://statecharts.io/inspect\", iframe: false });\n\n\n// State machines: ASR-TTS (voice interface) & dmGame\nimport { useSpeechSynthesis, useSpeechRecognition } from 'react-speech-kit';\n\n\nconst machine = Machine<SDSContext, any, SDSEvent>({\n    id: 'root',\n    type: 'parallel',\n    states: {\n        dm: {\n            ...dmMachine  //dmGame\n        },\n        asrtts: {\n            initial: 'idle',\n            states: {\n                idle: {\n                    on: {\n                        LISTEN: 'recognising',\n                        SPEAK: {\n                            target: 'speaking',\n                            actions: assign((_context, event) => { return { ttsAgenda: event.value } })\n                        }\n                    }\n                },\n                recognising: {\n                    initial: 'progress',\n                    entry: 'recStart',\n                    exit: 'recStop',\n                    on: {\n                        ASRRESULT: {\n                            actions: ['recLogResult',\n                                assign((_context, event) => { return { recResult: event.value } })],\n                            target: '.match'\n                        },\n                        RECOGNISED: 'idle'\n                    },\n                    states: {\n                        progress: {\n                        },\n                        match: {\n                            entry: send('RECOGNISED'),\n                        },\n                    }\n                },\n                speaking: {\n                    entry: 'ttsStart',\n                    on: {\n                        ENDSPEECH: 'idle',\n                    }\n                }\n            }\n        }\n    },\n},\n    {\n        actions: {\n            recLogResult: (context: SDSContext) => {\n                /* context.recResult = event.recResult; */\n                console.log('<< ASR: ' + context.recResult);\n\n            },\n            test: () => {\n                console.log('test')\n            },\n            logIntent: (context: SDSContext) => {\n                /* context.nluData = event.data */\n                console.log('<< NLU intent: ' + context.nluData.intent.name)\n            }\n        },\n    });\n\n\n\ninterface Props extends React.HTMLAttributes<HTMLElement> {\n    state: State<SDSContext, any, any, any>;  //==dm context >>access via props.state.context\n}\n//COMPONENT: Big button in the middle, with changing texts\nconst ReactiveButton = (props: Props,): JSX.Element => {\n    const {playingNow} = props.state.context\n    const {ttsAgenda} = props.state.context\n\n    const maxHinted = props.state.context.hinted >= 5\n\tconst maxSkipped = props.state.context.skipped >= 5\n\n    let promptInGame:string;\n    if(maxSkipped && maxHinted){promptInGame = '...or say Restart, Stop'}\n    else if(maxSkipped && !maxHinted){promptInGame = '...or say Clue, Restart, Stop'}\n    else if(!maxSkipped && maxHinted){promptInGame = '...or say Skip, Restart, Stop'}\n    else {promptInGame = '...or say Clue, Skip, Restart, Stop'}  //default\n\n    let speakingText= playingNow? '😼 '+ttsAgenda : '😻 '+ttsAgenda\n    let promptMsg = playingNow? promptInGame : \"...say Yes or No\"\n\n    switch (true) {\n        case props.state.matches({ asrtts: 'recognising' }):\n            return (\n                <button type=\"button\" className=\"glow-on-hover\"\n                    style={{ animation: \"glowing 20s linear\"}} {...props}>\n                    {/* Listening... */}\n\n                    <TextLoop mask={true} interval={5000} springConfig={{ stiffness: 170, damping: 8 }} >\n                        <div><code> {speakingText} </code></div>\n                        <div><code> {promptMsg} </code></div>\n                    </TextLoop>\n\n                </button>\n            );\n        case props.state.matches({ asrtts: 'speaking' }):\n            \n            const [spokentext] = useWindupString(speakingText); // adds char-by-char animation\n            return (\n                <button type=\"button\" className=\"glow-on-hover\"\n                    style={{ animation: \"bordering 1s infinite\" }} {...props}>\n                    {/* Speaking... */}\n                    <code>{spokentext}</code>\n                </button>\n            );\n        default:\n            return (\n                <button type=\"button\" className=\"glow-on-hover\" {...props}>\n                    <HeadShake>Play game!</HeadShake>\n                </button >\n            );\n    }\n}\n\n// //MAIN CONTAINER: React webpage elements & VOI\nexport default function App() {\n    \n    //Voice interface events (& console logs)\n    //Text to speech:\n    const { speak, cancel, speaking, voices } = useSpeechSynthesis({\n        onEnd: () => {send('ENDSPEECH') },\n    });\n\n    //Speech to text\n    const { listen, listening, stop } = useSpeechRecognition({\n        onResult: (result: any) => {send({ type: \"ASRRESULT\", value: result })  },\n    });\n\n    //List the supported synthesis-voices on the browswer:\n    const [voiceIndex, setVoiceIndex] = React.useState(null);\n    // console.log(voices) //An array of available voices/languages ... varies depending on the computer/browser\n    // const voice =  voices[5] || null; // voices[idx]? voices[idx] : null *(browser default voice)\n\n    const [current, send, service] = useMachine(machine, {\n        devTools: true,\n        actions: {\n            recStart: asEffect(() => {\n                console.log('Ready to receive a voice input.');\n                listen({\n                    interimResults: false,\n                    continuous: true,\n                    lang: 'en-SG'  //Config recognition language here. //list of langs https://cloud.google.com/speech-to-text/docs/languages\n                });\n            }),\n            recStop: asEffect(() => {\n                console.log('Recognition stopped.');\n                stop()\n            }),\n            ttsStart: asEffect((context, effect) => {\n                console.log('Speaking...');\n                speak({ text: context.ttsAgenda\n                        /*, voice*/ //Config which language/voice to speak in\n                     }) \n            }),\n            ttsCancel: asEffect((context, effect) => {\n                console.log('TTS STOP...');\n                cancel()\n            }),\n            speak: asEffect((context) => {\n\t            console.log('Speaking...');\n                speak({text: context.ttsAgenda })\n            }) \n        }\n    });\n\n    // dmMachine-context / React-states, to display on webpage or turn components on/off\n    const { confettiSwitch } = current.context; //triggers confetti when true\n    const { playingNow } = current.context;\n    const { tally } = current.context;\n    const { letter } = current.context;\n    \n    // Config for confetti \n    const confettiConfig = {\n        angle: 90,\n        spread: 360,\n        startVelocity: 80,\n        elementCount: 400,\n        dragFriction: 0.12,\n        duration: 7500,\n        stagger: 1,\n        width: \"7px\",\n        height: \"7px\",\n        perspective: \"210px\",\n        colors: [\"#a864fd\", \"#29cdff\", \"#78ff44\", \"#ff718d\", \"#fdff6a\"]\n      };\n    \n    let clicked=0;\n    const handleClick = () =>{ \n        if(clicked===0){ console.log(\"clicked\"); send('CLICK'); clicked=1 }\n        else{ console.log(\"unclicked\"); send('UNCLICK'); clicked=0 }\n    }\n\n    //>>>JSX codes & various components\n    \n    // Alt page: Show if not using Chrome or Edge\n    if(!isChrome && !isEdge)\n    return (\n        <div className='OtherBrowsers'>  \n            <HeadShake>\n            <div className='Box'>   \n                <h1>Speech Recognition Not Supported :( </h1>\n                <p>I won't be able to hear you on this browser.</p>\n                <p>Please try Chrome or Edge. :-)</p>\n            </div>\n            </HeadShake>\n        </div>\n      )\n\n    //Show if using Chrome or Edge\n    return (\n        <div className='main'>\n            <div className=\"PopoverButtons\"> <PopoverButtons/> </div>\n            <div className=\"App\">\n                \n                <div className=\"LetterAndHeart\">\n                    <div className=\"GlowLetter\"> <YourLetter letter={letter}/> </div>\n                    <div className=\"Heart\"> \n                        {playingNow && <HeartBar currentScore={tally} maxScore={5} size={50} />  }\n                    </div> \n                </div>\n                \n                <Confetti active={ confettiSwitch } config={ confettiConfig }/> \n\n                <RubberBand>\n                    <div className=\"Button\"> \n                        <ReactiveButton state={current} onClick={() => {handleClick()}} /> \n                    </div>\n                </RubberBand>\n\n                <div className=\"Subtitles\"> \n                    {/* VersionA: FOR Github deployment & Canvas submission */}\n                    <YourSubtitles state={current}/> \n\n                    {/* Version B: FOR demo (on local cuz it cannot show on Github page) */}\n                    <UserSubtitles state={current}/> \n                </div>\n            \n            </div>\n\n        </div>\n    )\n};\n\n//COMPONENT: Displaying input of voice interface (ie, recResult)\nconst YourSubtitles=(props:Props) =>{\n    // Player's speech-- only displays when recResult!=undefined \n\n    const {tally} = props.state.context\n    const {recResult} = props.state.context\n    //Prefix face changes based on score of the game\n    const  emojis=['😗','🙂','😀','😄','😁','🥳']\n    let emoji=tally? emojis[tally]:'🙃'\n\n    let subtitlesText:string;\n    if(props.state.matches({ asrtts: 'recognising' })){\n        subtitlesText=emoji+' Listening...'\n    }else if(recResult && recResult!=''){\n        subtitlesText = emoji+' '+recResult\n    }else{\n        subtitlesText = ''\n    }\n\n    const [textAnimated] = useWindupString(subtitlesText);\n    return(\n        <div>\n            <span> {textAnimated} </span>\n        </div>\n    )\n}\n\n//This one doesn't show on Github pages...? but can run locally and use for presentation demo\nconst UserSubtitles=(props:Props) =>{\n\n    const {tally} = props.state.context\n    const {recResult} = props.state.context\n    // const recResult='testing text'\n\n    const  emojis=['😗','🙂','😀','😄','😁','🥳']\n    let emoji= tally? emojis[tally]:'🙃'\n\n    // const defaultText = props.state.matches({ asrtts: 'recognising' })? 'Listening...' : ''\n    // const subtitlesText = recResult? recResult : defaultText\n\n    let subtitlesText:string;\n    if(props.state.matches({ asrtts: 'recognising' })){\n        subtitlesText='Listening...'\n    }else if(recResult && recResult!=''){\n        subtitlesText = recResult\n    }else{\n        subtitlesText = ''\n    }\n\n    const [textAnimated] = useWindupString(subtitlesText);\n    const showing = subtitlesText!=''\n    return(\n        <div id='emoji-and-bubble'>\n            {showing &&  <span className='speech-bubble'> {textAnimated} </span> }\n            {showing && <div id='emoji'> {emoji} </div>}\n        </div>\n    )\n}\n\n//COMPONENT: Capital letter of the game\nconst YourLetter=(props:any) =>{\n    // Shows the letter of the current game round \n    const letter = props.letter\n    return(\n        <div> \n            {letter? letter.toUpperCase():''}\n        </div> \n    )\n}\n\n//COMPONENT: Grey heart to be filled with pink, based on percentage\nconst HeartBar = (props:any) => {\n    \n    const maxScore = props.maxScore\n    const currentScore = props.currentScore>0? props.currentScore : ''\n    const size = props.size\n    const percentage = currentScore? 100*currentScore/maxScore : 0\n    //add other props? eg, showScore={true/false}; showPercentage={true/false}\n\n\n    const y = 24 - (24 * percentage) / 100; //Height of the pink filling shape\n\n    //Below: Heart-shaped vector graphs & text inside\n    return (\n      <div className=\"ProgressBarH\">\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width={size}\n          height={size}\n          viewBox=\"0 0 24 24\"\n        >\n          <defs>\n            <clipPath id=\"cut-off-bottom\">\n              <rect x=\"0\" y={y} width=\"24\" height=\"24\" />\n            </clipPath>\n          \n            <linearGradient id=\"grey-grad\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\n                <stop offset=\"0%\" stopColor=\"#cfccce\" stopOpacity=\"0.75\" />\n                <stop offset=\"60%\" stopColor=\"#bab8ba\" stopOpacity=\"0.85\" />\n                <stop offset=\"100%\" stopColor=\"#949293\" stopOpacity=\"0.9\" />\n            </linearGradient>\n\n            <linearGradient id=\"pink-grad\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\n                <stop offset=\"0%\" stopColor=\"#ff33a7\" stopOpacity=\"0.95\" />\n                <stop offset=\"60%\" stopColor=\"#ff2667\" stopOpacity=\"0.95\" />\n                <stop offset=\"100%\" stopColor=\"rgb(255,0,0)\" stopOpacity=\"0.95\" />\n            </linearGradient>\n\n          </defs>\n          \n          <path\n            style={{ fill: \"url(#grey-grad)\" }}\n            d=\"M12 4.248c-3.148-5.402-12-3.825-12 2.944 0 4.661 5.571 9.427 12 15.808 6.43-6.381 12-11.147 12-15.808 0-6.792-8.875-8.306-12-2.944z\"\n            />\n\n          <path\n            style={{ fill: \"url(#pink-grad)\", }}\n            d=\"M12 4.248c-3.148-5.402-12-3.825-12 2.944 0 4.661 5.571 9.427 12 15.808 6.43-6.381 12-11.147 12-15.808 0-6.792-8.875-8.306-12-2.944z\"\n            clipPath=\"url(#cut-off-bottom)\"\n            />\n\n          <text textAnchor=\"middle\" x=\"12\" y=\"15\" color=\"white\" fontSize=\"11\" fill=\"white\" opacity=\"0.45\"\n                style={{animation: \"wiggle 2.5s ease-out infinite\", animationDelay:'0.9s'}}>\n            {currentScore} \n          </text>\n\n        </svg>\n      </div>\n    );\n  };\n\nconst PopoverButtons = () => {\n\n\n    return (\n        <div>\n\n            <Tippy content={\n                <div>\n                <h4>Having troubles playing? :</h4>\n            \n                    <p>\n                    Due to limitations of the voice recogniser, these might help... <br></br><br></br>\n                    -Speak in a North American accent.<br></br><br></br>\n                    -After the cat finishes talking, wait for a sec for it to start listening to you\n                    (indicated by the <strong>flashing button</strong>).\n                    </p>\n                </div>\n            } className=\"popover-box\">\n                <button className=\"round-button\">?</button>\n            </Tippy>\n\n            <Tippy content={\n                    <div>\n                    <h4>ABC Game</h4>\n                        <p>\n                        Designed & made by: <br></br>\n                        Liao Hsien-hao Calvin<br></br>\n                        Eirini Tsakiri <br></br><br></br>\n                        for the project of <strong>LT2216 Dialogue Systems</strong> at Göteborgs universitet.\n                        <br></br><br></br>\n                        github.com/chickenbror/ABCgame\n                        </p>\n                    </div>\n            }  className=\"popover-box\">\n                <button className=\"round-button\">i</button>\n            </Tippy>\n\n\n        </div>\n    )\n}","import \"./styles.scss\";\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\n\n\n//Components\nimport App from \"./App\";\n\n\n//React dom components rendering\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render( <App/>, rootElement );\n"]}}